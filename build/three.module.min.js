/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const t="169",e={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},n={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},i=0,s=1,r=2,a=3,o=0,l=1,c=2,u=3,h=0,d=1,p=2,m=0,f=1,g=2,v=3,y=4,_=5,x=100,M=101,b=102,T=103,S=104,w=200,E=201,A=202,N=203,C=204,R=205,I=206,L=207,P=208,U=209,D=210,O=211,z=212,V=213,F=214,B=0,k=1,H=2,G=3,W=4,j=5,X=6,q=7,Y=0,Z=1,$=2,J=0,K=1,Q=2,tt=3,et=4,nt=5,it=6,st=7,rt="attached",at="detached",ot=300,lt=301,ct=302,ut=303,ht=304,dt=306,pt=1e3,mt=1001,ft=1002,gt=1003,vt=1004,yt=1004,_t=1005,xt=1005,Mt=1006,bt=1007,Tt=1007,St=1008,wt=1008,Et=1009,At=1010,Nt=1011,Ct=1012,Rt=1013,It=1014,Lt=1015,Pt=1016,Ut=1017,Dt=1018,Ot=1020,zt=35902,Vt=1021,Ft=1022,Bt=1023,kt=1024,Ht=1025,Gt=1026,Wt=1027,jt=1028,Xt=1029,qt=1030,Yt=1031,Zt=1032,$t=1033,Jt=33776,Kt=33777,Qt=33778,te=33779,ee=35840,ne=35841,ie=35842,se=35843,re=36196,ae=37492,oe=37496,le=37808,ce=37809,ue=37810,he=37811,de=37812,pe=37813,me=37814,fe=37815,ge=37816,ve=37817,ye=37818,_e=37819,xe=37820,Me=37821,be=36492,Te=36494,Se=36495,we=36283,Ee=36284,Ae=36285,Ne=36286,Ce=2200,Re=2201,Ie=2202,Le=2300,Pe=2301,Ue=2302,De=2400,Oe=2401,ze=2402,Ve=2500,Fe=2501,Be=0,ke=1,He=2,Ge=3200,We=3201,je=3202,Xe=3203,qe=0,Ye=1,Ze="",$e="srgb",Je="srgb-linear",Ke="display-p3",Qe="display-p3-linear",tn="linear",en="srgb",nn="rec709",sn="p3",rn=0,an=7680,on=7681,ln=7682,cn=7683,un=34055,hn=34056,dn=5386,pn=512,mn=513,fn=514,gn=515,vn=516,yn=517,_n=518,xn=519,Mn=512,bn=513,Tn=514,Sn=515,wn=516,En=517,An=518,Nn=519,Cn=35044,Rn=35048,In=35040,Ln=35045,Pn=35049,Un=35041,Dn=35046,On=35050,zn=35042,Vn="100",Fn="300 es",Bn=2e3,kn=2001;class Hn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const Gn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Wn=1234567;const jn=Math.PI/180,Xn=180/Math.PI;function qn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Gn[255&t]+Gn[t>>8&255]+Gn[t>>16&255]+Gn[t>>24&255]+"-"+Gn[255&e]+Gn[e>>8&255]+"-"+Gn[e>>16&15|64]+Gn[e>>24&255]+"-"+Gn[63&n|128]+Gn[n>>8&255]+"-"+Gn[n>>16&255]+Gn[n>>24&255]+Gn[255&i]+Gn[i>>8&255]+Gn[i>>16&255]+Gn[i>>24&255]).toLowerCase()}function Yn(t,e,n){return Math.max(e,Math.min(n,t))}function Zn(t,e){return(t%e+e)%e}function $n(t,e,n){return(1-n)*t+n*e}function Jn(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Kn(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const Qn={DEG2RAD:jn,RAD2DEG:Xn,generateUUID:qn,clamp:Yn,euclideanModulo:Zn,mapLinear:function(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:$n,damp:function(t,e,n,i){return $n(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(Zn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(Wn=t);let e=Wn+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*jn},radToDeg:function(t){return t*Xn},isPowerOfTwo:function(t){return!(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,s){const r=Math.cos,a=Math.sin,o=r(n/2),l=a(n/2),c=r((e+i)/2),u=a((e+i)/2),h=r((e-i)/2),d=a((e-i)/2),p=r((i-e)/2),m=a((i-e)/2);switch(s){case"XYX":t.set(o*u,l*h,l*d,o*c);break;case"YZY":t.set(l*d,o*u,l*h,o*c);break;case"ZXZ":t.set(l*h,l*d,o*u,o*c);break;case"XZX":t.set(o*u,l*m,l*p,o*c);break;case"YXY":t.set(l*p,o*u,l*m,o*c);break;case"ZYZ":t.set(l*m,l*p,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:Kn,denormalize:Jn};class ti{constructor(t=0,e=0){ti.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Yn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,r=this.y-t.y;return this.x=s*n-r*i+t.x,this.y=s*i+r*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ei{constructor(t,e,n,i,s,r,a,o,l){ei.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,s,r,a,o,l)}set(t,e,n,i,s,r,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=s,c[5]=o,c[6]=n,c[7]=r,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,r=n[0],a=n[3],o=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],v=i[1],y=i[4],_=i[7],x=i[2],M=i[5],b=i[8];return s[0]=r*m+a*v+o*x,s[3]=r*f+a*y+o*M,s[6]=r*g+a*_+o*b,s[1]=l*m+c*v+u*x,s[4]=l*f+c*y+u*M,s[7]=l*g+c*_+u*b,s[2]=h*m+d*v+p*x,s[5]=h*f+d*y+p*M,s[8]=h*g+d*_+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*r*c-e*a*l-n*s*c+n*a*o+i*s*l-i*r*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8],u=c*r-a*l,h=a*o-c*s,d=l*s-r*o,p=e*u+n*h+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=u*m,t[1]=(i*l-c*n)*m,t[2]=(a*n-i*r)*m,t[3]=h*m,t[4]=(c*e-i*o)*m,t[5]=(i*s-a*e)*m,t[6]=d*m,t[7]=(n*o-l*e)*m,t[8]=(r*e-n*s)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,r,a){const o=Math.cos(s),l=Math.sin(s);return this.set(n*o,n*l,-n*(o*r+l*a)+r+t,-i*l,i*o,-i*(-l*r+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ni.makeScale(t,e)),this}rotate(t){return this.premultiply(ni.makeRotation(-t)),this}translate(t,e){return this.premultiply(ni.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ni=new ei;function ii(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const si={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ri(t,e){return new si[t](e)}function ai(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function oi(){const t=ai("canvas");return t.style.display="block",t}const li={};function ci(t){t in li||(li[t]=!0,console.warn(t))}const ui=(new ei).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),hi=(new ei).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),di={[Je]:{transfer:tn,primaries:nn,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t,fromReference:t=>t},[$e]:{transfer:en,primaries:nn,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[Qe]:{transfer:tn,primaries:sn,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.applyMatrix3(hi),fromReference:t=>t.applyMatrix3(ui)},[Ke]:{transfer:en,primaries:sn,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.convertSRGBToLinear().applyMatrix3(hi),fromReference:t=>t.applyMatrix3(ui).convertLinearToSRGB()}},pi=new Set([Je,Qe]),mi={enabled:!0,_workingColorSpace:Je,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!pi.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,e,n){if(!1===this.enabled||e===n||!e||!n)return t;const i=di[e].toReference;return(0,di[n].fromReference)(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return di[t].primaries},getTransfer:function(t){return t===Ze?tn:di[t].transfer},getLuminanceCoefficients:function(t,e=this._workingColorSpace){return t.fromArray(di[e].luminanceCoefficients)}};function fi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function gi(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let vi;class yi{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===vi&&(vi=ai("canvas")),vi.width=t.width,vi.height=t.height;const n=vi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=vi}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=ai("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let t=0;t<s.length;t++)s[t]=255*fi(s[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*fi(e[t]/255)):e[t]=fi(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let _i=0;class xi{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:_i++}),this.uuid=qn(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Mi(i[e].image)):t.push(Mi(i[e]))}else t=Mi(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Mi(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?yi.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let bi=0;class Ti extends Hn{constructor(t=Ti.DEFAULT_IMAGE,e=Ti.DEFAULT_MAPPING,n=1001,i=1001,s=1006,r=1008,a=Bt,o=Et,l=Ti.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:bi++}),this.uuid=qn(),this.name="",this.source=new xi(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new ti(0,0),this.repeat=new ti(1,1),this.center=new ti(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ei,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ot)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case pt:t.x=t.x-Math.floor(t.x);break;case mt:t.x=t.x<0?0:1;break;case ft:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case pt:t.y=t.y-Math.floor(t.y);break;case mt:t.y=t.y<0?0:1;break;case ft:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Ti.DEFAULT_IMAGE=null,Ti.DEFAULT_MAPPING=ot,Ti.DEFAULT_ANISOTROPY=4;class Si{constructor(t=0,e=0,n=0,i=1){Si.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*e+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*e+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*e+r[7]*n+r[11]*i+r[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const r=.01,a=.1,o=t.elements,l=o[0],c=o[4],u=o[8],h=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-h)<r&&Math.abs(u-m)<r&&Math.abs(p-f)<r){if(Math.abs(c+h)<a&&Math.abs(u+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,y=(c+h)/4,_=(u+m)/4,x=(p+f)/4;return t>o&&t>v?t<r?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(t),i=y/n,s=_/n):o>v?o<r?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(o),n=y/i,s=x/i):v<r?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(v),n=_/s,i=x/s),this.set(n,i,s,e),this}let v=Math.sqrt((f-p)*(f-p)+(u-m)*(u-m)+(h-c)*(h-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(u-m)/v,this.z=(h-c)/v,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class wi extends Hn{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Si(0,0,t,e),this.scissorTest=!1,this.viewport=new Si(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Mt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new Ti(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const r=n.count;for(let t=0;t<r;t++)this.textures[t]=s.clone(),this.textures[t].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++)this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new xi(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ei extends wi{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Ai extends Ti{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=mt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ni extends Ei{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Ai(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Ci extends Ti{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=mt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ri extends Ei{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Ci(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Ii{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,r,a){let o=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3];const h=s[r+0],d=s[r+1],p=s[r+2],m=s[r+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=u);if(1===a)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(u!==m||o!==h||l!==d||c!==p){let t=1-a;const e=o*h+l*d+c*p+u*m,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const s=Math.sqrt(i),r=Math.atan2(s,e*n);t=Math.sin(t*r)/s,a=Math.sin(a*r)/s}const s=a*n;if(o=o*t+h*s,l=l*t+d*s,c=c*t+p*s,u=u*t+m*s,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=t,l*=t,c*=t,u*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,s,r){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],u=s[r],h=s[r+1],d=s[r+2],p=s[r+3];return t[e]=a*p+c*u+o*d-l*h,t[e+1]=o*p+c*h+l*u-a*d,t[e+2]=l*p+c*d+a*h-o*u,t[e+3]=c*p-a*u-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,s=t._z,r=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),u=a(s/2),h=o(n/2),d=o(i/2),p=o(s/2);switch(r){case"XYZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"YXZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"ZXY":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"ZYX":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"YZX":this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p;break;case"XZY":this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],r=e[1],a=e[5],o=e[9],l=e[2],c=e[6],u=e[10],h=n+a+u;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(c-o)*t,this._y=(s-l)*t,this._z=(r-i)*t}else if(n>a&&n>u){const t=2*Math.sqrt(1+n-a-u);this._w=(c-o)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(s+l)/t}else if(a>u){const t=2*Math.sqrt(1+a-n-u);this._w=(s-l)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+u-n-a);this._w=(r-i)/t,this._x=(s+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Yn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,r=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+r*a+i*l-s*o,this._y=i*c+r*o+s*a-n*l,this._z=s*c+r*l+n*o-i*a,this._w=r*c-n*a-i*o-s*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*s+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),u=Math.sin((1-e)*c)/l,h=Math.sin(e*c)/l;return this._w=r*u+this._w*h,this._x=n*u+this._x*h,this._y=i*u+this._y*h,this._z=s*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Li{constructor(t=0,e=0,n=0){Li.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ui.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ui.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,r=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,r=t.y,a=t.z,o=t.w,l=2*(r*i-a*n),c=2*(a*e-s*i),u=2*(s*n-r*e);return this.x=e+o*l+r*u-a*c,this.y=n+o*c+a*l-s*u,this.z=i+o*u+s*c-r*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,r=e.x,a=e.y,o=e.z;return this.x=i*o-s*a,this.y=s*r-n*o,this.z=n*a-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Pi.copy(this).projectOnVector(t),this.sub(Pi)}reflect(t){return this.sub(Pi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Yn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Pi=new Li,Ui=new Ii;class Di{constructor(t=new Li(1/0,1/0,1/0),e=new Li(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(zi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(zi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=zi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,zi):zi.fromBufferAttribute(i,e),zi.applyMatrix4(t.matrixWorld),this.expandByPoint(zi);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Vi.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),Vi.copy(n.boundingBox)),Vi.applyMatrix4(t.matrixWorld),this.union(Vi)}const i=t.children;for(let t=0,n=i.length;t<n;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,zi),zi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ji),Xi.subVectors(this.max,ji),Fi.subVectors(t.a,ji),Bi.subVectors(t.b,ji),ki.subVectors(t.c,ji),Hi.subVectors(Bi,Fi),Gi.subVectors(ki,Bi),Wi.subVectors(Fi,ki);let e=[0,-Hi.z,Hi.y,0,-Gi.z,Gi.y,0,-Wi.z,Wi.y,Hi.z,0,-Hi.x,Gi.z,0,-Gi.x,Wi.z,0,-Wi.x,-Hi.y,Hi.x,0,-Gi.y,Gi.x,0,-Wi.y,Wi.x,0];return!!Zi(e,Fi,Bi,ki,Xi)&&(e=[1,0,0,0,1,0,0,0,1],!!Zi(e,Fi,Bi,ki,Xi)&&(qi.crossVectors(Hi,Gi),e=[qi.x,qi.y,qi.z],Zi(e,Fi,Bi,ki,Xi)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,zi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(zi).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Oi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Oi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Oi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Oi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Oi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Oi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Oi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Oi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Oi)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Oi=[new Li,new Li,new Li,new Li,new Li,new Li,new Li,new Li],zi=new Li,Vi=new Di,Fi=new Li,Bi=new Li,ki=new Li,Hi=new Li,Gi=new Li,Wi=new Li,ji=new Li,Xi=new Li,qi=new Li,Yi=new Li;function Zi(t,e,n,i,s){for(let r=0,a=t.length-3;r<=a;r+=3){Yi.fromArray(t,r);const a=s.x*Math.abs(Yi.x)+s.y*Math.abs(Yi.y)+s.z*Math.abs(Yi.z),o=e.dot(Yi),l=n.dot(Yi),c=i.dot(Yi);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const $i=new Di,Ji=new Li,Ki=new Li;class Qi{constructor(t=new Li,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):$i.setFromPoints(t).getCenter(n);let i=0;for(let e=0,s=t.length;e<s;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ji.subVectors(t,this.center);const e=Ji.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(Ji,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(Ki.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ji.copy(t.center).add(Ki)),this.expandByPoint(Ji.copy(t.center).sub(Ki))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ts=new Li,es=new Li,ns=new Li,is=new Li,ss=new Li,rs=new Li,as=new Li;class os{constructor(t=new Li,e=new Li(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ts)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ts.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ts.copy(this.origin).addScaledVector(this.direction,e),ts.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){es.copy(t).add(e).multiplyScalar(.5),ns.copy(e).sub(t).normalize(),is.copy(this.origin).sub(es);const s=.5*t.distanceTo(e),r=-this.direction.dot(ns),a=is.dot(this.direction),o=-is.dot(ns),l=is.lengthSq(),c=Math.abs(1-r*r);let u,h,d,p;if(c>0)if(u=r*o-a,h=r*a-o,p=s*c,u>=0)if(h>=-p)if(h<=p){const t=1/c;u*=t,h*=t,d=u*(u+r*h+2*a)+h*(r*u+h+2*o)+l}else h=s,u=Math.max(0,-(r*h+a)),d=-u*u+h*(h+2*o)+l;else h=-s,u=Math.max(0,-(r*h+a)),d=-u*u+h*(h+2*o)+l;else h<=-p?(u=Math.max(0,-(-r*s+a)),h=u>0?-s:Math.min(Math.max(-s,-o),s),d=-u*u+h*(h+2*o)+l):h<=p?(u=0,h=Math.min(Math.max(-s,-o),s),d=h*(h+2*o)+l):(u=Math.max(0,-(r*s+a)),h=u>0?s:Math.min(Math.max(-s,-o),s),d=-u*u+h*(h+2*o)+l);else h=r>0?-s:s,u=Math.max(0,-(r*h+a)),d=-u*u+h*(h+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(es).addScaledVector(ns,h),d}intersectSphere(t,e){ts.subVectors(t.center,this.origin);const n=ts.dot(this.direction),i=ts.dot(ts)-n*n,s=t.radius*t.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,o=n+r;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,r,a,o;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,i=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,i=(t.min.x-h.x)*l),c>=0?(s=(t.min.y-h.y)*c,r=(t.max.y-h.y)*c):(s=(t.max.y-h.y)*c,r=(t.min.y-h.y)*c),n>r||s>i?null:((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),u>=0?(a=(t.min.z-h.z)*u,o=(t.max.z-h.z)*u):(a=(t.max.z-h.z)*u,o=(t.min.z-h.z)*u),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,ts)}intersectTriangle(t,e,n,i,s){ss.subVectors(e,t),rs.subVectors(n,t),as.crossVectors(ss,rs);let r,a=this.direction.dot(as);if(a>0){if(i)return null;r=1}else{if(!(a<0))return null;r=-1,a=-a}is.subVectors(this.origin,t);const o=r*this.direction.dot(rs.crossVectors(is,rs));if(o<0)return null;const l=r*this.direction.dot(ss.cross(is));if(l<0)return null;if(o+l>a)return null;const c=-r*is.dot(as);return c<0?null:this.at(c/a,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ls{constructor(t,e,n,i,s,r,a,o,l,c,u,h,d,p,m,f){ls.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,s,r,a,o,l,c,u,h,d,p,m,f)}set(t,e,n,i,s,r,a,o,l,c,u,h,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=s,g[5]=r,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ls).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/cs.setFromMatrixColumn(t,0).length(),s=1/cs.setFromMatrixColumn(t,1).length(),r=1/cs.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,r=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(s),u=Math.sin(s);if("XYZ"===t.order){const t=r*c,n=r*u,i=a*c,s=a*u;e[0]=o*c,e[4]=-o*u,e[8]=l,e[1]=n+i*l,e[5]=t-s*l,e[9]=-a*o,e[2]=s-t*l,e[6]=i+n*l,e[10]=r*o}else if("YXZ"===t.order){const t=o*c,n=o*u,i=l*c,s=l*u;e[0]=t+s*a,e[4]=i*a-n,e[8]=r*l,e[1]=r*u,e[5]=r*c,e[9]=-a,e[2]=n*a-i,e[6]=s+t*a,e[10]=r*o}else if("ZXY"===t.order){const t=o*c,n=o*u,i=l*c,s=l*u;e[0]=t-s*a,e[4]=-r*u,e[8]=i+n*a,e[1]=n+i*a,e[5]=r*c,e[9]=s-t*a,e[2]=-r*l,e[6]=a,e[10]=r*o}else if("ZYX"===t.order){const t=r*c,n=r*u,i=a*c,s=a*u;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+s,e[1]=o*u,e[5]=s*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=r*o}else if("YZX"===t.order){const t=r*o,n=r*l,i=a*o,s=a*l;e[0]=o*c,e[4]=s-t*u,e[8]=i*u+n,e[1]=u,e[5]=r*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*u+i,e[10]=t-s*u}else if("XZY"===t.order){const t=r*o,n=r*l,i=a*o,s=a*l;e[0]=o*c,e[4]=-u,e[8]=l*c,e[1]=t*u+s,e[5]=r*c,e[9]=n*u-i,e[2]=i*u-n,e[6]=a*c,e[10]=s*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(hs,t,ds)}lookAt(t,e,n){const i=this.elements;return fs.subVectors(t,e),0===fs.lengthSq()&&(fs.z=1),fs.normalize(),ps.crossVectors(n,fs),0===ps.lengthSq()&&(1===Math.abs(n.z)?fs.x+=1e-4:fs.z+=1e-4,fs.normalize(),ps.crossVectors(n,fs)),ps.normalize(),ms.crossVectors(fs,ps),i[0]=ps.x,i[4]=ms.x,i[8]=fs.x,i[1]=ps.y,i[5]=ms.y,i[9]=fs.y,i[2]=ps.z,i[6]=ms.z,i[10]=fs.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,r=n[0],a=n[4],o=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],y=n[7],_=n[11],x=n[15],M=i[0],b=i[4],T=i[8],S=i[12],w=i[1],E=i[5],A=i[9],N=i[13],C=i[2],R=i[6],I=i[10],L=i[14],P=i[3],U=i[7],D=i[11],O=i[15];return s[0]=r*M+a*w+o*C+l*P,s[4]=r*b+a*E+o*R+l*U,s[8]=r*T+a*A+o*I+l*D,s[12]=r*S+a*N+o*L+l*O,s[1]=c*M+u*w+h*C+d*P,s[5]=c*b+u*E+h*R+d*U,s[9]=c*T+u*A+h*I+d*D,s[13]=c*S+u*N+h*L+d*O,s[2]=p*M+m*w+f*C+g*P,s[6]=p*b+m*E+f*R+g*U,s[10]=p*T+m*A+f*I+g*D,s[14]=p*S+m*N+f*L+g*O,s[3]=v*M+y*w+_*C+x*P,s[7]=v*b+y*E+_*R+x*U,s[11]=v*T+y*A+_*I+x*D,s[15]=v*S+y*N+_*L+x*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],r=t[1],a=t[5],o=t[9],l=t[13],c=t[2],u=t[6],h=t[10],d=t[14];return t[3]*(+s*o*u-i*l*u-s*a*h+n*l*h+i*a*d-n*o*d)+t[7]*(+e*o*d-e*l*h+s*r*h-i*r*d+i*l*c-s*o*c)+t[11]*(+e*l*u-e*a*d-s*r*u+n*r*d+s*a*c-n*l*c)+t[15]*(-i*a*c-e*o*u+e*a*h+i*r*u-n*r*h+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8],u=t[9],h=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],v=u*f*l-m*h*l+m*o*d-a*f*d-u*o*g+a*h*g,y=p*h*l-c*f*l-p*o*d+r*f*d+c*o*g-r*h*g,_=c*m*l-p*u*l+p*a*d-r*m*d-c*a*g+r*u*g,x=p*u*o-c*m*o-p*a*h+r*m*h+c*a*f-r*u*f,M=e*v+n*y+i*_+s*x;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return t[0]=v*b,t[1]=(m*h*s-u*f*s-m*i*d+n*f*d+u*i*g-n*h*g)*b,t[2]=(a*f*s-m*o*s+m*i*l-n*f*l-a*i*g+n*o*g)*b,t[3]=(u*o*s-a*h*s-u*i*l+n*h*l+a*i*d-n*o*d)*b,t[4]=y*b,t[5]=(c*f*s-p*h*s+p*i*d-e*f*d-c*i*g+e*h*g)*b,t[6]=(p*o*s-r*f*s-p*i*l+e*f*l+r*i*g-e*o*g)*b,t[7]=(r*h*s-c*o*s+c*i*l-e*h*l-r*i*d+e*o*d)*b,t[8]=_*b,t[9]=(p*u*s-c*m*s-p*n*d+e*m*d+c*n*g-e*u*g)*b,t[10]=(r*m*s-p*a*s+p*n*l-e*m*l-r*n*g+e*a*g)*b,t[11]=(c*a*s-r*u*s-c*n*l+e*u*l+r*n*d-e*a*d)*b,t[12]=x*b,t[13]=(c*m*i-p*u*i+p*n*h-e*m*h-c*n*f+e*u*f)*b,t[14]=(p*a*i-r*m*i-p*n*o+e*m*o+r*n*f-e*a*f)*b,t[15]=(r*u*i-c*a*i+c*n*o-e*u*o-r*n*h+e*a*h)*b,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,r=t.x,a=t.y,o=t.z,l=s*r,c=s*a;return this.set(l*r+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*r,0,l*o-i*a,c*o+i*r,s*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,r){return this.set(1,n,s,0,t,1,r,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,r=e._y,a=e._z,o=e._w,l=s+s,c=r+r,u=a+a,h=s*l,d=s*c,p=s*u,m=r*c,f=r*u,g=a*u,v=o*l,y=o*c,_=o*u,x=n.x,M=n.y,b=n.z;return i[0]=(1-(m+g))*x,i[1]=(d+_)*x,i[2]=(p-y)*x,i[3]=0,i[4]=(d-_)*M,i[5]=(1-(h+g))*M,i[6]=(f+v)*M,i[7]=0,i[8]=(p+y)*b,i[9]=(f-v)*b,i[10]=(1-(h+m))*b,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=cs.set(i[0],i[1],i[2]).length();const r=cs.set(i[4],i[5],i[6]).length(),a=cs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],us.copy(this);const o=1/s,l=1/r,c=1/a;return us.elements[0]*=o,us.elements[1]*=o,us.elements[2]*=o,us.elements[4]*=l,us.elements[5]*=l,us.elements[6]*=l,us.elements[8]*=c,us.elements[9]*=c,us.elements[10]*=c,e.setFromRotationMatrix(us),n.x=s,n.y=r,n.z=a,this}makePerspective(t,e,n,i,s,r,a=2e3){const o=this.elements,l=2*s/(e-t),c=2*s/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i);let d,p;if(a===Bn)d=-(r+s)/(r-s),p=-2*r*s/(r-s);else{if(a!==kn)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-r/(r-s),p=-r*s/(r-s)}return o[0]=l,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,s,r,a=2e3){const o=this.elements,l=1/(e-t),c=1/(n-i),u=1/(r-s),h=(e+t)*l,d=(n+i)*c;let p,m;if(a===Bn)p=(r+s)*u,m=-2*u;else{if(a!==kn)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=s*u,m=-1*u}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const cs=new Li,us=new ls,hs=new Li(0,0,0),ds=new Li(1,1,1),ps=new Li,ms=new Li,fs=new Li,gs=new ls,vs=new Ii;class ys{constructor(t=0,e=0,n=0,i=ys.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],r=i[4],a=i[8],o=i[1],l=i[5],c=i[9],u=i[2],h=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(Yn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Yn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Yn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-Yn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(Yn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Yn(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return gs.makeRotationFromQuaternion(t),this.setFromRotationMatrix(gs,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return vs.setFromEuler(this),this.setFromQuaternion(vs,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ys.DEFAULT_ORDER="XYZ";class _s{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return!!(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let xs=0;const Ms=new Li,bs=new Ii,Ts=new ls,Ss=new Li,ws=new Li,Es=new Li,As=new Ii,Ns=new Li(1,0,0),Cs=new Li(0,1,0),Rs=new Li(0,0,1),Is={type:"added"},Ls={type:"removed"},Ps={type:"childadded",child:null},Us={type:"childremoved",child:null};class Ds extends Hn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:xs++}),this.uuid=qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ds.DEFAULT_UP.clone();const t=new Li,e=new ys,n=new Ii,i=new Li(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ls},normalMatrix:{value:new ei}}),this.matrix=new ls,this.matrixWorld=new ls,this.matrixAutoUpdate=Ds.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ds.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new _s,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return bs.setFromAxisAngle(t,e),this.quaternion.multiply(bs),this}rotateOnWorldAxis(t,e){return bs.setFromAxisAngle(t,e),this.quaternion.premultiply(bs),this}rotateX(t){return this.rotateOnAxis(Ns,t)}rotateY(t){return this.rotateOnAxis(Cs,t)}rotateZ(t){return this.rotateOnAxis(Rs,t)}translateOnAxis(t,e){return Ms.copy(t).applyQuaternion(this.quaternion),this.position.add(Ms.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ns,t)}translateY(t){return this.translateOnAxis(Cs,t)}translateZ(t){return this.translateOnAxis(Rs,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ts.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Ss.copy(t):Ss.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ws.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ts.lookAt(ws,Ss,this.up):Ts.lookAt(Ss,ws,this.up),this.quaternion.setFromRotationMatrix(Ts),i&&(Ts.extractRotation(i.matrixWorld),bs.setFromRotationMatrix(Ts),this.quaternion.premultiply(bs.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Is),Ps.child=t,this.dispatchEvent(Ps),Ps.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ls),Us.child=t,this.dispatchEvent(Us),Us.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ts.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ts.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ts),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Is),Ps.child=t,this.dispatchEvent(Ps),Ps.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ws,t,Es),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ws,As,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){e[n].updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++){t[e].updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function s(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];s(t.shapes,i)}else s(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(s(t.materials,this.material[n]));i.material=e}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(s(t.animations,n))}}if(e){const e=r(t.geometries),i=r(t.materials),s=r(t.textures),a=r(t.images),o=r(t.shapes),l=r(t.skeletons),c=r(t.animations),u=r(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),s.length>0&&(n.textures=s),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),u.length>0&&(n.nodes=u)}return n.object=i,n;function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}Ds.DEFAULT_UP=new Li(0,1,0),Ds.DEFAULT_MATRIX_AUTO_UPDATE=!0,Ds.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Os=new Li,zs=new Li,Vs=new Li,Fs=new Li,Bs=new Li,ks=new Li,Hs=new Li,Gs=new Li,Ws=new Li,js=new Li,Xs=new Si,qs=new Si,Ys=new Si;class Zs{constructor(t=new Li,e=new Li,n=new Li){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Os.subVectors(t,e),i.cross(Os);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){Os.subVectors(i,e),zs.subVectors(n,e),Vs.subVectors(t,e);const r=Os.dot(Os),a=Os.dot(zs),o=Os.dot(Vs),l=zs.dot(zs),c=zs.dot(Vs),u=r*l-a*a;if(0===u)return s.set(0,0,0),null;const h=1/u,d=(l*o-a*c)*h,p=(r*c-a*o)*h;return s.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,Fs)&&(Fs.x>=0&&Fs.y>=0&&Fs.x+Fs.y<=1)}static getInterpolation(t,e,n,i,s,r,a,o){return null===this.getBarycoord(t,e,n,i,Fs)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(s,Fs.x),o.addScaledVector(r,Fs.y),o.addScaledVector(a,Fs.z),o)}static getInterpolatedAttribute(t,e,n,i,s,r){return Xs.setScalar(0),qs.setScalar(0),Ys.setScalar(0),Xs.fromBufferAttribute(t,e),qs.fromBufferAttribute(t,n),Ys.fromBufferAttribute(t,i),r.setScalar(0),r.addScaledVector(Xs,s.x),r.addScaledVector(qs,s.y),r.addScaledVector(Ys,s.z),r}static isFrontFacing(t,e,n,i){return Os.subVectors(n,e),zs.subVectors(t,e),Os.cross(zs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Os.subVectors(this.c,this.b),zs.subVectors(this.a,this.b),.5*Os.cross(zs).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Zs.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Zs.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,s){return Zs.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return Zs.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Zs.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let r,a;Bs.subVectors(i,n),ks.subVectors(s,n),Gs.subVectors(t,n);const o=Bs.dot(Gs),l=ks.dot(Gs);if(o<=0&&l<=0)return e.copy(n);Ws.subVectors(t,i);const c=Bs.dot(Ws),u=ks.dot(Ws);if(c>=0&&u<=c)return e.copy(i);const h=o*u-c*l;if(h<=0&&o>=0&&c<=0)return r=o/(o-c),e.copy(n).addScaledVector(Bs,r);js.subVectors(t,s);const d=Bs.dot(js),p=ks.dot(js);if(p>=0&&d<=p)return e.copy(s);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(ks,a);const f=c*p-d*u;if(f<=0&&u-c>=0&&d-p>=0)return Hs.subVectors(s,i),a=(u-c)/(u-c+(d-p)),e.copy(i).addScaledVector(Hs,a);const g=1/(f+m+h);return r=m*g,a=h*g,e.copy(n).addScaledVector(Bs,r).addScaledVector(ks,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const $s={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Js={h:0,s:0,l:0},Ks={h:0,s:0,l:0};function Qs(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class tr{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=$e){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,mi.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=mi.workingColorSpace){return this.r=t,this.g=e,this.b=n,mi.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=mi.workingColorSpace){if(t=Zn(t,1),e=Yn(e,0,1),n=Yn(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,s=2*n-i;this.r=Qs(s,i,t+1/3),this.g=Qs(s,i,t),this.b=Qs(s,i,t-1/3)}return mi.toWorkingColorSpace(this,i),this}setStyle(t,e=$e){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=i[1],s=n.length;if(3===s)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===s)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=$e){const n=$s[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=fi(t.r),this.g=fi(t.g),this.b=fi(t.b),this}copyLinearToSRGB(t){return this.r=gi(t.r),this.g=gi(t.g),this.b=gi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=$e){return mi.fromWorkingColorSpace(er.copy(this),t),65536*Math.round(Yn(255*er.r,0,255))+256*Math.round(Yn(255*er.g,0,255))+Math.round(Yn(255*er.b,0,255))}getHexString(t=$e){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=mi.workingColorSpace){mi.fromWorkingColorSpace(er.copy(this),e);const n=er.r,i=er.g,s=er.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let o,l;const c=(a+r)/2;if(a===r)o=0,l=0;else{const t=r-a;switch(l=c<=.5?t/(r+a):t/(2-r-a),r){case n:o=(i-s)/t+(i<s?6:0);break;case i:o=(s-n)/t+2;break;case s:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=mi.workingColorSpace){return mi.fromWorkingColorSpace(er.copy(this),e),t.r=er.r,t.g=er.g,t.b=er.b,t}getStyle(t=$e){mi.fromWorkingColorSpace(er.copy(this),t);const e=er.r,n=er.g,i=er.b;return t!==$e?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(Js),this.setHSL(Js.h+t,Js.s+e,Js.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Js),t.getHSL(Ks);const n=$n(Js.h,Ks.h,e),i=$n(Js.s,Ks.s,e),s=$n(Js.l,Ks.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const er=new tr;tr.NAMES=$s;let nr=0;class ir extends Hn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nr++}),this.uuid=qn(),this.name="",this.type="Material",this.blending=1,this.side=h,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=C,this.blendDst=R,this.blendEquation=x,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tr(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=an,this.stencilZFail=an,this.stencilZPass=an,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==h&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==C&&(n.blendSrc=this.blendSrc),this.blendDst!==R&&(n.blendDst=this.blendDst),this.blendEquation!==x&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==an&&(n.stencilFail=this.stencilFail),this.stencilZFail!==an&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==an&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),s=i(t.images);e.length>0&&(n.textures=e),s.length>0&&(n.images=s)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class sr extends ir{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ys,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const rr=ar();function ar(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),i=new Uint32Array(512),s=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(i[t]=0,i[256|t]=32768,s[t]=24,s[256|t]=24):e<-14?(i[t]=1024>>-e-14,i[256|t]=1024>>-e-14|32768,s[t]=-e-1,s[256|t]=-e-1):e<=15?(i[t]=e+15<<10,i[256|t]=e+15<<10|32768,s[t]=13,s[256|t]=13):e<128?(i[t]=31744,i[256|t]=64512,s[t]=24,s[256|t]=24):(i[t]=31744,i[256|t]=64512,s[t]=13,s[256|t]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;!(8388608&e);)e<<=1,n-=8388608;e&=-8388609,n+=947912704,r[t]=e|n}for(let t=1024;t<2048;++t)r[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}function or(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=Yn(t,-65504,65504),rr.floatView[0]=t;const e=rr.uint32View[0],n=e>>23&511;return rr.baseTable[n]+((8388607&e)>>rr.shiftTable[n])}function lr(t){const e=t>>10;return rr.uint32View[0]=rr.mantissaTable[rr.offsetTable[e]+(1023&t)]+rr.exponentTable[e],rr.floatView[0]}const cr={toHalfFloat:or,fromHalfFloat:lr},ur=new Li,hr=new ti;class dr{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=Cn,this.updateRanges=[],this.gpuType=Lt,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)hr.fromBufferAttribute(this,e),hr.applyMatrix3(t),this.setXY(e,hr.x,hr.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyMatrix3(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyMatrix4(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyNormalMatrix(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.transformDirection(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Kn(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array),s=Kn(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Cn&&(t.usage=this.usage),t}}class pr extends dr{constructor(t,e,n){super(new Int8Array(t),e,n)}}class mr extends dr{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class fr extends dr{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class gr extends dr{constructor(t,e,n){super(new Int16Array(t),e,n)}}class vr extends dr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class yr extends dr{constructor(t,e,n){super(new Int32Array(t),e,n)}}class _r extends dr{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class xr extends dr{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=lr(this.array[t*this.itemSize]);return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize]=or(e),this}getY(t){let e=lr(this.array[t*this.itemSize+1]);return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+1]=or(e),this}getZ(t){let e=lr(this.array[t*this.itemSize+2]);return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+2]=or(e),this}getW(t){let e=lr(this.array[t*this.itemSize+3]);return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=Kn(e,this.array)),this.array[t*this.itemSize+3]=or(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array)),this.array[t+0]=or(e),this.array[t+1]=or(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array)),this.array[t+0]=or(e),this.array[t+1]=or(n),this.array[t+2]=or(i),this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array),s=Kn(s,this.array)),this.array[t+0]=or(e),this.array[t+1]=or(n),this.array[t+2]=or(i),this.array[t+3]=or(s),this}}class Mr extends dr{constructor(t,e,n){super(new Float32Array(t),e,n)}}let br=0;const Tr=new ls,Sr=new Ds,wr=new Li,Er=new Di,Ar=new Di,Nr=new Li;class Cr extends Hn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:br++}),this.uuid=qn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ii(t)?_r:vr)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new ei).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Tr.makeRotationFromQuaternion(t),this.applyMatrix4(Tr),this}rotateX(t){return Tr.makeRotationX(t),this.applyMatrix4(Tr),this}rotateY(t){return Tr.makeRotationY(t),this.applyMatrix4(Tr),this}rotateZ(t){return Tr.makeRotationZ(t),this.applyMatrix4(Tr),this}translate(t,e,n){return Tr.makeTranslation(t,e,n),this.applyMatrix4(Tr),this}scale(t,e,n){return Tr.makeScale(t,e,n),this.applyMatrix4(Tr),this}lookAt(t){return Sr.lookAt(t),Sr.updateMatrix(),this.applyMatrix4(Sr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wr).negate(),this.translate(wr.x,wr.y,wr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Mr(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Di);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Li(-1/0,-1/0,-1/0),new Li(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Er.setFromBufferAttribute(n),this.morphTargetsRelative?(Nr.addVectors(this.boundingBox.min,Er.min),this.boundingBox.expandByPoint(Nr),Nr.addVectors(this.boundingBox.max,Er.max),this.boundingBox.expandByPoint(Nr)):(this.boundingBox.expandByPoint(Er.min),this.boundingBox.expandByPoint(Er.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Qi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Li,1/0);if(t){const n=this.boundingSphere.center;if(Er.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ar.setFromBufferAttribute(n),this.morphTargetsRelative?(Nr.addVectors(Er.min,Ar.min),Er.expandByPoint(Nr),Nr.addVectors(Er.max,Ar.max),Er.expandByPoint(Nr)):(Er.expandByPoint(Ar.min),Er.expandByPoint(Ar.max))}Er.getCenter(n);let i=0;for(let e=0,s=t.count;e<s;e++)Nr.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Nr));if(e)for(let s=0,r=e.length;s<r;s++){const r=e[s],a=this.morphTargetsRelative;for(let e=0,s=r.count;e<s;e++)Nr.fromBufferAttribute(r,e),a&&(wr.fromBufferAttribute(t,e),Nr.add(wr)),i=Math.max(i,n.distanceToSquared(Nr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,i=e.normal,s=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new dr(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<n.count;t++)a[t]=new Li,o[t]=new Li;const l=new Li,c=new Li,u=new Li,h=new ti,d=new ti,p=new ti,m=new Li,f=new Li;function g(t,e,i){l.fromBufferAttribute(n,t),c.fromBufferAttribute(n,e),u.fromBufferAttribute(n,i),h.fromBufferAttribute(s,t),d.fromBufferAttribute(s,e),p.fromBufferAttribute(s,i),c.sub(l),u.sub(l),d.sub(h),p.sub(h);const r=1/(d.x*p.y-p.x*d.y);isFinite(r)&&(m.copy(c).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(r),f.copy(u).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(r),a[t].add(m),a[e].add(m),a[i].add(m),o[t].add(f),o[e].add(f),o[i].add(f))}let v=this.groups;0===v.length&&(v=[{start:0,count:t.count}]);for(let e=0,n=v.length;e<n;++e){const n=v[e],i=n.start;for(let e=i,s=i+n.count;e<s;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new Li,_=new Li,x=new Li,M=new Li;function b(t){x.fromBufferAttribute(i,t),M.copy(x);const e=a[t];y.copy(e),y.sub(x.multiplyScalar(x.dot(e))).normalize(),_.crossVectors(M,e);const n=_.dot(o[t])<0?-1:1;r.setXYZW(t,y.x,y.y,y.z,n)}for(let e=0,n=v.length;e<n;++e){const n=v[e],i=n.start;for(let e=i,s=i+n.count;e<s;e+=3)b(t.getX(e+0)),b(t.getX(e+1)),b(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new dr(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Li,s=new Li,r=new Li,a=new Li,o=new Li,l=new Li,c=new Li,u=new Li;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),m=t.getX(h+2);i.fromBufferAttribute(e,d),s.fromBufferAttribute(e,p),r.fromBufferAttribute(e,m),c.subVectors(r,s),u.subVectors(i,s),c.cross(u),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),a.add(c),o.add(c),l.add(c),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),s.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),c.subVectors(r,s),u.subVectors(i,s),c.cross(u),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Nr.fromBufferAttribute(t,e),Nr.normalize(),t.setXYZ(e,Nr.x,Nr.y,Nr.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,s=t.normalized,r=new n.constructor(e.length*i);let a=0,o=0;for(let s=0,l=e.length;s<l;s++){a=t.isInterleavedBufferAttribute?e[s]*t.data.stride+t.offset:e[s]*i;for(let t=0;t<i;t++)r[o++]=n[a++]}return new dr(r,i,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Cr,n=this.index.array,i=this.attributes;for(const s in i){const r=t(i[s],n);e.setAttribute(s,r)}const s=this.morphAttributes;for(const i in s){const r=[],a=s[i];for(let e=0,i=a.length;e<i;e++){const i=t(a[e],n);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,n=r.length;t<n;t++){const n=r[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let s=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const s=t.morphAttributes;for(const t in s){const n=[],i=s[t];for(let t=0,s=i.length;t<s;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Rr=new ls,Ir=new os,Lr=new Qi,Pr=new Li,Ur=new Li,Dr=new Li,Or=new Li,zr=new Li,Vr=new Li,Fr=new Li,Br=new Li;class kr extends Ds{constructor(t=new Cr,e=new sr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){Vr.set(0,0,0);for(let n=0,i=s.length;n<i;n++){const i=a[n],o=s[n];0!==i&&(zr.fromBufferAttribute(o,t),r?Vr.addScaledVector(zr,i):Vr.addScaledVector(zr.sub(e),i))}e.add(Vr)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),Lr.copy(n.boundingSphere),Lr.applyMatrix4(s),Ir.copy(t.ray).recast(t.near),!1===Lr.containsPoint(Ir.origin)){if(null===Ir.intersectSphere(Lr,Pr))return;if(Ir.origin.distanceToSquared(Pr)>(t.far-t.near)**2)return}Rr.copy(s).invert(),Ir.copy(t.ray).applyMatrix4(Rr),null!==n.boundingBox&&!1===Ir.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Ir)}}_computeIntersections(t,e,n){let i;const s=this.geometry,r=this.material,a=s.index,o=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,u=s.attributes.normal,h=s.groups,d=s.drawRange;if(null!==a)if(Array.isArray(r))for(let s=0,o=h.length;s<o;s++){const o=h[s],p=r[o.materialIndex];for(let s=Math.max(o.start,d.start),r=Math.min(a.count,Math.min(o.start+o.count,d.start+d.count));s<r;s+=3){i=Hr(this,p,t,n,l,c,u,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=o.materialIndex,e.push(i))}}else{for(let s=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);s<o;s+=3){i=Hr(this,r,t,n,l,c,u,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),e.push(i))}}else if(void 0!==o)if(Array.isArray(r))for(let s=0,a=h.length;s<a;s++){const a=h[s],p=r[a.materialIndex];for(let s=Math.max(a.start,d.start),r=Math.min(o.count,Math.min(a.start+a.count,d.start+d.count));s<r;s+=3){i=Hr(this,p,t,n,l,c,u,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=a.materialIndex,e.push(i))}}else{for(let s=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);s<a;s+=3){i=Hr(this,r,t,n,l,c,u,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),e.push(i))}}}}function Hr(t,e,n,i,s,r,a,o,l,c){t.getVertexPosition(o,Ur),t.getVertexPosition(l,Dr),t.getVertexPosition(c,Or);const u=function(t,e,n,i,s,r,a,o){let l;if(l=e.side===d?i.intersectTriangle(a,r,s,!0,o):i.intersectTriangle(s,r,a,e.side===h,o),null===l)return null;Br.copy(o),Br.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Br);return c<n.near||c>n.far?null:{distance:c,point:Br.clone(),object:t}}(t,e,n,i,Ur,Dr,Or,Fr);if(u){const t=new Li;Zs.getBarycoord(Fr,Ur,Dr,Or,t),s&&(u.uv=Zs.getInterpolatedAttribute(s,o,l,c,t,new ti)),r&&(u.uv1=Zs.getInterpolatedAttribute(r,o,l,c,t,new ti)),a&&(u.normal=Zs.getInterpolatedAttribute(a,o,l,c,t,new Li),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const e={a:o,b:l,c:c,normal:new Li,materialIndex:0};Zs.getNormal(Ur,Dr,Or,e.normal),u.face=e,u.barycoord=t}return u}class Gr extends Cr{constructor(t=1,e=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const o=[],l=[],c=[],u=[];let h=0,d=0;function p(t,e,n,i,s,r,p,m,f,g,v){const y=r/f,_=p/g,x=r/2,M=p/2,b=m/2,T=f+1,S=g+1;let w=0,E=0;const A=new Li;for(let r=0;r<S;r++){const a=r*_-M;for(let o=0;o<T;o++){const h=o*y-x;A[t]=h*i,A[e]=a*s,A[n]=b,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),u.push(o/f),u.push(1-r/g),w+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const n=h+e+T*t,i=h+e+T*(t+1),s=h+(e+1)+T*(t+1),r=h+(e+1)+T*t;o.push(n,i,r),o.push(i,s,r),E+=6}a.addGroup(d,E,v),d+=E,h+=w}p("z","y","x",-1,-1,n,e,t,r,s,0),p("z","y","x",1,-1,n,e,-t,r,s,1),p("x","z","y",1,1,t,n,e,i,r,2),p("x","z","y",1,-1,t,n,-e,i,r,3),p("x","y","z",1,-1,t,e,n,i,s,4),p("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(o),this.setAttribute("position",new Mr(l,3)),this.setAttribute("normal",new Mr(c,3)),this.setAttribute("uv",new Mr(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Gr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Wr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function jr(t){const e={};for(let n=0;n<t.length;n++){const i=Wr(t[n]);for(const t in i)e[t]=i[t]}return e}function Xr(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:mi.workingColorSpace}const qr={clone:Wr,merge:jr};class Yr extends ir{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Wr(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Zr extends Ds{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ls,this.projectionMatrix=new ls,this.projectionMatrixInverse=new ls,this.coordinateSystem=Bn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const $r=new Li,Jr=new ti,Kr=new ti;class Qr extends Zr{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Xn*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*jn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Xn*Math.atan(Math.tan(.5*jn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){$r.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set($r.x,$r.y).multiplyScalar(-t/$r.z),$r.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set($r.x,$r.y).multiplyScalar(-t/$r.z)}getViewSize(t,e){return this.getViewBounds(t,Jr,Kr),e.subVectors(Kr,Jr)}setViewOffset(t,e,n,i,s,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*jn*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,a=r.fullHeight;s+=r.offsetX*i/t,e-=r.offsetY*n/a,i*=r.width/t,n*=r.height/a}const a=this.filmOffset;0!==a&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ta=-90;class ea extends Ds{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Qr(ta,1,t,e);i.layers=this.layers,this.add(i);const s=new Qr(ta,1,t,e);s.layers=this.layers,this.add(s);const r=new Qr(ta,1,t,e);r.layers=this.layers,this.add(r);const a=new Qr(ta,1,t,e);a.layers=this.layers,this.add(a);const o=new Qr(ta,1,t,e);o.layers=this.layers,this.add(o);const l=new Qr(ta,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,r,a,o]=e;for(const t of e)this.remove(t);if(t===Bn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==kn)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,o,l,c]=this.children,u=t.getRenderTarget(),h=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,s),t.setRenderTarget(n,1,i),t.render(e,r),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,o),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=m,t.setRenderTarget(n,5,i),t.render(e,c),t.setRenderTarget(u,h,d),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class na extends Ti{constructor(t,e,n,i,s,r,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:lt,n,i,s,r,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ia extends Ei{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new na(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Mt}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Gr(5,5,5),s=new Yr({name:"CubemapFromEquirect",uniforms:Wr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:d,blending:m});s.uniforms.tEquirect.value=e;const r=new kr(i,s),a=e.minFilter;e.minFilter===St&&(e.minFilter=Mt);return new ea(1,10,this).update(t,r),e.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,i);t.setRenderTarget(s)}}const sa=new Li,ra=new Li,aa=new ei;class oa{constructor(t=new Li(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=sa.subVectors(n,e).cross(ra.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(sa),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||aa.getNormalMatrix(t),i=this.coplanarPoint(sa).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const la=new Qi,ca=new Li;class ua{constructor(t=new oa,e=new oa,n=new oa,i=new oa,s=new oa,r=new oa){this.planes=[t,e,n,i,s,r]}set(t,e,n,i,s,r){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,s=i[0],r=i[1],a=i[2],o=i[3],l=i[4],c=i[5],u=i[6],h=i[7],d=i[8],p=i[9],m=i[10],f=i[11],g=i[12],v=i[13],y=i[14],_=i[15];if(n[0].setComponents(o-s,h-l,f-d,_-g).normalize(),n[1].setComponents(o+s,h+l,f+d,_+g).normalize(),n[2].setComponents(o+r,h+c,f+p,_+v).normalize(),n[3].setComponents(o-r,h-c,f-p,_-v).normalize(),n[4].setComponents(o-a,h-u,f-m,_-y).normalize(),e===Bn)n[5].setComponents(o+a,h+u,f+m,_+y).normalize();else{if(e!==kn)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(a,u,m,y).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),la.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),la.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(la)}intersectsSprite(t){return la.center.set(0,0,0),la.radius=.7071067811865476,la.applyMatrix4(t.matrixWorld),this.intersectsSphere(la)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(ca.x=i.normal.x>0?t.max.x:t.min.x,ca.y=i.normal.y>0?t.max.y:t.min.y,ca.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(ca)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function ha(){let t=null,e=!1,n=null,i=null;function s(e,r){n(e,r),i=t.requestAnimationFrame(s)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function da(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=e.get(n);i&&(t.deleteBuffer(i.buffer),e.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const s=e.get(n);if(void 0===s)e.set(n,function(e,n){const i=e.array,s=e.usage,r=i.byteLength,a=t.createBuffer();let o;if(t.bindBuffer(n,a),t.bufferData(n,i,s),e.onUploadCallback(),i instanceof Float32Array)o=t.FLOAT;else if(i instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=t.SHORT;else if(i instanceof Uint32Array)o=t.UNSIGNED_INT;else if(i instanceof Int32Array)o=t.INT;else if(i instanceof Int8Array)o=t.BYTE;else if(i instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,size:r}}(n,i));else if(s.version<n.version){if(s.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,i){const s=n.array,r=n.updateRanges;if(t.bindBuffer(i,e),0===r.length)t.bufferSubData(i,0,s);else{r.sort(((t,e)=>t.start-e.start));let e=0;for(let t=1;t<r.length;t++){const n=r[e],i=r[t];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):(++e,r[e]=i)}r.length=e+1;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.bufferSubData(i,n.start*s.BYTES_PER_ELEMENT,s,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(s.buffer,n,i),s.version=n.version}}}}class pa extends Cr{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,r=e/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,u=t/a,h=e/o,d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){const e=t*h-r;for(let n=0;n<l;n++){const i=n*u-s;p.push(i,-e,0),m.push(0,0,1),f.push(n/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,i=e+l*(t+1),s=e+1+l*(t+1),r=e+1+l*t;d.push(n,i,r),d.push(i,s,r)}this.setIndex(d),this.setAttribute("position",new Mr(p,3)),this.setAttribute("normal",new Mr(m,3)),this.setAttribute("uv",new Mr(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pa(t.width,t.height,t.widthSegments,t.heightSegments)}}const ma={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef USE_MIPMAP_BIAS\n    vec4 sampledDiffuseColor = texture2D( map, vMapUv, mipmapBias );\n#else\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n#endif\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n        \n#ifdef USE_MIPMAP_BIAS\n    uniform float mipmapBias;\n#endif\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t\n\t\t#else\n\t\t\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},fa={common:{diffuse:{value:new tr(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ei},alphaMap:{value:null},alphaMapTransform:{value:new ei},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ei}},envmap:{envMap:{value:null},envMapRotation:{value:new ei},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ei}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ei}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ei},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ei},normalScale:{value:new ti(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ei},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ei}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ei}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ei}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ei},alphaTest:{value:0},uvTransform:{value:new ei}},sprite:{diffuse:{value:new tr(16777215)},opacity:{value:1},center:{value:new ti(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ei},alphaMap:{value:null},alphaMapTransform:{value:new ei},alphaTest:{value:0}}},ga={basic:{uniforms:jr([fa.common,fa.specularmap,fa.envmap,fa.aomap,fa.lightmap,fa.fog]),vertexShader:ma.meshbasic_vert,fragmentShader:ma.meshbasic_frag},lambert:{uniforms:jr([fa.common,fa.specularmap,fa.envmap,fa.aomap,fa.lightmap,fa.emissivemap,fa.bumpmap,fa.normalmap,fa.displacementmap,fa.fog,fa.lights,{emissive:{value:new tr(0)}}]),vertexShader:ma.meshlambert_vert,fragmentShader:ma.meshlambert_frag},phong:{uniforms:jr([fa.common,fa.specularmap,fa.envmap,fa.aomap,fa.lightmap,fa.emissivemap,fa.bumpmap,fa.normalmap,fa.displacementmap,fa.fog,fa.lights,{emissive:{value:new tr(0)},specular:{value:new tr(1118481)},shininess:{value:30}}]),vertexShader:ma.meshphong_vert,fragmentShader:ma.meshphong_frag},standard:{uniforms:jr([fa.common,fa.envmap,fa.aomap,fa.lightmap,fa.emissivemap,fa.bumpmap,fa.normalmap,fa.displacementmap,fa.roughnessmap,fa.metalnessmap,fa.fog,fa.lights,{emissive:{value:new tr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ma.meshphysical_vert,fragmentShader:ma.meshphysical_frag},toon:{uniforms:jr([fa.common,fa.aomap,fa.lightmap,fa.emissivemap,fa.bumpmap,fa.normalmap,fa.displacementmap,fa.gradientmap,fa.fog,fa.lights,{emissive:{value:new tr(0)}}]),vertexShader:ma.meshtoon_vert,fragmentShader:ma.meshtoon_frag},matcap:{uniforms:jr([fa.common,fa.bumpmap,fa.normalmap,fa.displacementmap,fa.fog,{matcap:{value:null}}]),vertexShader:ma.meshmatcap_vert,fragmentShader:ma.meshmatcap_frag},points:{uniforms:jr([fa.points,fa.fog]),vertexShader:ma.points_vert,fragmentShader:ma.points_frag},dashed:{uniforms:jr([fa.common,fa.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ma.linedashed_vert,fragmentShader:ma.linedashed_frag},depth:{uniforms:jr([fa.common,fa.displacementmap]),vertexShader:ma.depth_vert,fragmentShader:ma.depth_frag},normal:{uniforms:jr([fa.common,fa.bumpmap,fa.normalmap,fa.displacementmap,{opacity:{value:1}}]),vertexShader:ma.meshnormal_vert,fragmentShader:ma.meshnormal_frag},sprite:{uniforms:jr([fa.sprite,fa.fog]),vertexShader:ma.sprite_vert,fragmentShader:ma.sprite_frag},background:{uniforms:{uvTransform:{value:new ei},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ma.background_vert,fragmentShader:ma.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ei}},vertexShader:ma.backgroundCube_vert,fragmentShader:ma.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ma.cube_vert,fragmentShader:ma.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ma.equirect_vert,fragmentShader:ma.equirect_frag},distanceRGBA:{uniforms:jr([fa.common,fa.displacementmap,{referencePosition:{value:new Li},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ma.distanceRGBA_vert,fragmentShader:ma.distanceRGBA_frag},shadow:{uniforms:jr([fa.lights,fa.fog,{color:{value:new tr(0)},opacity:{value:1}}]),vertexShader:ma.shadow_vert,fragmentShader:ma.shadow_frag}};ga.physical={uniforms:jr([ga.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ei},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ei},clearcoatNormalScale:{value:new ti(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ei},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ei},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ei},sheen:{value:0},sheenColor:{value:new tr(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ei},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ei},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ei},transmissionSamplerSize:{value:new ti},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ei},attenuationDistance:{value:0},attenuationColor:{value:new tr(0)},specularColor:{value:new tr(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ei},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ei},anisotropyVector:{value:new ti},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ei}}]),vertexShader:ma.meshphysical_vert,fragmentShader:ma.meshphysical_frag};const va={r:0,b:0,g:0},ya=new ys,_a=new ls;function xa(t,e,n,i,s,r,a){const o=new tr(0);let l,c,u=!0===r?0:1,p=null,m=0,f=null;function g(t){let i=!0===t.isScene?t.background:null;if(i&&i.isTexture){i=(t.backgroundBlurriness>0?n:e).get(i)}return i}function v(e,n){e.getRGB(va,Xr(t)),i.buffers.color.setClear(va.r,va.g,va.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),u=e,v(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,v(o,u)},render:function(e){let n=!1;const s=g(e);null===s?v(o,u):s&&s.isColor&&(v(s,1),n=!0);const r=t.xr.getEnvironmentBlendMode();"additive"===r?i.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===r&&i.buffers.color.setClear(0,0,0,0,a),(t.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const i=g(n);i&&(i.isCubeTexture||i.mapping===dt)?(void 0===c&&(c=new kr(new Gr(1,1,1),new Yr({name:"BackgroundCubeMaterial",uniforms:Wr(ga.backgroundCube.uniforms),vertexShader:ga.backgroundCube.vertexShader,fragmentShader:ga.backgroundCube.fragmentShader,side:d,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),ya.copy(n.backgroundRotation),ya.x*=-1,ya.y*=-1,ya.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(ya.y*=-1,ya.z*=-1),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(_a.makeRotationFromEuler(ya)),c.material.toneMapped=mi.getTransfer(i.colorSpace)!==en,p===i&&m===i.version&&f===t.toneMapping||(c.material.needsUpdate=!0,p=i,m=i.version,f=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new kr(new pa(2,2),new Yr({name:"BackgroundMaterial",uniforms:Wr(ga.background.uniforms),vertexShader:ga.background.vertexShader,fragmentShader:ga.background.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=mi.getTransfer(i.colorSpace)!==en,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),p===i&&m===i.version&&f===t.toneMapping||(l.material.needsUpdate=!0,p=i,m=i.version,f=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))}}}function Ma(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},s=c(null);let r=s,a=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function c(t){const e=[],i=[],s=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,s[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:s,object:t,attributes:{},index:null}}function u(){const t=r.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function h(t){d(t,0)}function d(e,n){const i=r.newAttributes,s=r.enabledAttributes,a=r.attributeDivisors;i[e]=1,0===s[e]&&(t.enableVertexAttribArray(e),s[e]=1),a[e]!==n&&(t.vertexAttribDivisor(e,n),a[e]=n)}function p(){const e=r.newAttributes,n=r.enabledAttributes;for(let i=0,s=n.length;i<s;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function m(e,n,i,s,r,a,o){!0===o?t.vertexAttribIPointer(e,n,i,r,a):t.vertexAttribPointer(e,n,i,s,r,a)}function f(){g(),a=!0,r!==s&&(r=s,o(r.object))}function g(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(n,s,l,f,g){let v=!1;const y=function(e,n,s){const r=!0===s.wireframe;let a=i[e.id];void 0===a&&(a={},i[e.id]=a);let o=a[n.id];void 0===o&&(o={},a[n.id]=o);let l=o[r];void 0===l&&(l=c(t.createVertexArray()),o[r]=l);return l}(f,l,s);r!==y&&(r=y,o(r.object)),v=function(t,e,n,i){const s=r.attributes,a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l){if(l[e].location>=0){const n=s[e];let i=a[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;o++}}return r.attributesNum!==o||r.index!==i}(n,f,l,g),v&&function(t,e,n,i){const s={},a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l){if(l[e].location>=0){let n=a[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),s[e]=i,o++}}r.attributes=s,r.attributesNum=o,r.index=i}(n,f,l,g),null!==g&&e.update(g,t.ELEMENT_ARRAY_BUFFER),(v||a)&&(a=!1,function(n,i,s,r){u();const a=r.attributes,o=s.getAttributes(),l=i.defaultAttributeValues;for(const i in o){const s=o[i];if(s.location>=0){let o=a[i];if(void 0===o&&("instanceMatrix"===i&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){const i=o.normalized,a=o.itemSize,l=e.get(o);if(void 0===l)continue;const c=l.buffer,u=l.type,p=l.bytesPerElement,f=u===t.INT||u===t.UNSIGNED_INT||o.gpuType===Rt;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,g=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<s.locationSize;t++)d(s.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<s.locationSize;t++)h(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<s.locationSize;t++)m(s.location+t,a/s.locationSize,u,i,l*p,(g+a/s.locationSize*t)*p,f)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<s.locationSize;t++)d(s.location+t,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<s.locationSize;t++)h(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<s.locationSize;t++)m(s.location+t,a/s.locationSize,u,i,a*p,a/s.locationSize*t*p,f)}}else if(void 0!==l){const e=l[i];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(s.location,e);break;case 3:t.vertexAttrib3fv(s.location,e);break;case 4:t.vertexAttrib4fv(s.location,e);break;default:t.vertexAttrib1fv(s.location,e)}}}}p()}(n,s,l,f),null!==g&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(g).buffer))},reset:f,resetDefaultState:g,dispose:function(){f();for(const t in i){const e=i[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t]}},releaseStatesOfGeometry:function(t){if(void 0===i[t.id])return;const e=i[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t.id]},releaseStatesOfProgram:function(t){for(const e in i){const n=i[e];if(void 0===n[t.id])continue;const s=n[t.id];for(const t in s)l(s[t].object),delete s[t];delete n[t.id]}},initAttributes:u,enableAttribute:h,disableUnusedAttributes:p}}function ba(t,e,n){let i;function s(e,s,r){0!==r&&(t.drawArraysInstanced(i,e,s,r),n.update(s,i,r))}this.setMode=function(t){i=t},this.render=function(e,s){t.drawArrays(i,e,s),n.update(s,i,1)},this.renderInstances=s,this.renderMultiDraw=function(t,s,r){if(0===r)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,t,0,s,0,r);let a=0;for(let t=0;t<r;t++)a+=s[t];n.update(a,i,1)},this.renderMultiDrawInstances=function(t,r,a,o){if(0===a)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)s(t[e],r[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(i,t,0,r,0,o,0,a);let e=0;for(let t=0;t<a;t++)e+=r[t];for(let t=0;t<o.length;t++)n.update(e,i,o[t])}}}function Ta(t,e,n,i){let s;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==n.precision?n.precision:"highp";const o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===n.logarithmicDepthBuffer,c=!0===n.reverseDepthBuffer&&e.has("EXT_clip_control");if(!0===c){const t=e.get("EXT_clip_control");t.clipControlEXT(t.LOWER_LEFT_EXT,t.ZERO_TO_ONE_EXT)}const u=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==s)return s;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");s=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s},getMaxPrecision:r,textureFormatReadable:function(e){return e===Bt||i.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const s=n===Pt&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==Et&&i.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==Lt&&!s)},precision:a,logarithmicDepthBuffer:l,reverseDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function Sa(t){const e=this;let n=null,i=0,s=!1,r=!1;const a=new oa,o=new ei,l={value:null,needsUpdate:!1};function c(t,n,i,s){const r=null!==t?t.length:0;let c=null;if(0!==r){if(c=l.value,!0!==s||null===c){const e=i+4*r,s=n.matrixWorldInverse;o.getNormalMatrix(s),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==r;++e,n+=4)a.copy(t[e]).applyMatrix4(s,o),a.normal.toArray(c,n),c[n+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||s;return s=e,i=t.length,n},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(a,o,u){const h=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,m=t.get(a);if(!s||null===h||0===h.length||r&&!p)r?c(null):function(){l.value!==n&&(l.value=n,l.needsUpdate=i>0);e.numPlanes=i,e.numIntersection=0}();else{const t=r?0:i,e=4*t;let s=m.clippingState||null;l.value=s,s=c(h,o,e,u);for(let t=0;t!==e;++t)s[t]=n[t];m.clippingState=s,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function wa(t){let e=new WeakMap;function n(t,e){return e===ut?t.mapping=lt:e===ht&&(t.mapping=ct),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const s=e.get(n);void 0!==s&&(e.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const r=s.mapping;if(r===ut||r===ht){if(e.has(s)){return n(e.get(s).texture,s.mapping)}{const r=s.image;if(r&&r.height>0){const a=new ia(r.height);return a.fromEquirectangularTexture(t,s),e.set(s,a),s.addEventListener("dispose",i),n(a.texture,s.mapping)}return null}}}return s},dispose:function(){e=new WeakMap}}}class Ea extends Zr{constructor(t=-1,e=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,r=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=t*this.view.offsetX,r=s+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Aa=[.125,.215,.35,.446,.526,.582],Na=20,Ca=new Ea,Ra=new tr;let Ia=null,La=0,Pa=0,Ua=!1;const Da=(1+Math.sqrt(5))/2,Oa=1/Da,za=[new Li(-Da,Oa,0),new Li(Da,Oa,0),new Li(-Oa,0,Da),new Li(Oa,0,Da),new Li(0,Da,-Oa),new Li(0,Da,Oa),new Li(-1,1,-1),new Li(1,1,-1),new Li(-1,1,1),new Li(1,1,1)];let Va=class{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Ia=this._renderer.getRenderTarget(),La=this._renderer.getActiveCubeFace(),Pa=this._renderer.getActiveMipmapLevel(),Ua=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Ga(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Ha(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Ia,La,Pa),this._renderer.xr.enabled=Ua,t.scissorTest=!1,ka(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===lt||t.mapping===ct?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Ia=this._renderer.getRenderTarget(),La=this._renderer.getActiveCubeFace(),Pa=this._renderer.getActiveMipmapLevel(),Ua=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Mt,minFilter:Mt,generateMipmaps:!1,type:Pt,format:Bt,colorSpace:Je,depthBuffer:!1},i=Ba(t,e,n),{_lodMax:s}=this;if(({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Fa(s)),null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Ba(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Fa(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(Na),s=new Li(0,1,0),r=new Yr({name:"SphericalGaussianBlur",defines:{n:Na,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Wa(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:m,depthTest:!1,depthWrite:!1});return r}(i,t,e)}return i}_compileMaterial(t){const e=new kr(this._lodPlanes[0],t);this._renderer.compile(e,Ca)}_sceneToCubeUV(t,e,n,i){const s=new Qr(90,1,e,n),r=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Ra),o.toneMapping=J,o.autoClear=!1;const u=new sr({name:"PMREM.Background",side:d,depthWrite:!1,depthTest:!1}),h=new kr(new Gr,u);let p=!1;const m=t.background;m?m.isColor&&(u.color.copy(m),t.background=null,p=!0):(u.color.copy(Ra),p=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(s.up.set(0,r[e],0),s.lookAt(a[e],0,0)):1===n?(s.up.set(0,0,r[e]),s.lookAt(0,a[e],0)):(s.up.set(0,r[e],0),s.lookAt(0,0,a[e]));const l=this._cubeSize;ka(i,n*l,e>2?l:0,l,l),o.setRenderTarget(i),p&&o.render(h,s),o.render(t,s)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===lt||t.mapping===ct;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Ga()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Ha());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new kr(this._lodPlanes[0],s);s.uniforms.envMap.value=t;const a=this._cubeSize;ka(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(r,Ca)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),s=za[(i-e-1)%za.length];this._blur(t,e-1,e,n,s)}e.autoClear=n}_blur(t,e,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,n,i,"latitudinal",s),this._halfBlur(r,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,r,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new kr(this._lodPlanes[i],l),u=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(s)?Math.PI/(2*h):2*Math.PI/39,p=s/d,m=isFinite(s)?1+Math.floor(3*p):Na;m>Na&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<Na;++t){const e=t/p,n=Math.exp(-e*e/2);f.push(n),0===t?g+=n:t<m&&(g+=2*n)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;u.envMap.value=t.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===r,a&&(u.poleAxis.value=a);const{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-n;const y=this._sizeLods[i];ka(e,3*y*(i>v-4?i-v+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(c,Ca)}};function Fa(t){const e=[],n=[],i=[];let s=t;const r=t-4+1+Aa.length;for(let a=0;a<r;a++){const r=Math.pow(2,s);n.push(r);let o=1/r;a>t-4?o=Aa[a-t+4-1]:0===a&&(o=0),i.push(o);const l=1/(r-2),c=-l,u=1+l,h=[c,c,u,c,u,u,c,c,u,u,c,u],d=6,p=6,m=3,f=2,g=1,v=new Float32Array(m*p*d),y=new Float32Array(f*p*d),_=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,m*p*t),y.set(h,f*p*t);const s=[t,t,t,t,t,t];_.set(s,g*p*t)}const x=new Cr;x.setAttribute("position",new dr(v,m)),x.setAttribute("uv",new dr(y,f)),x.setAttribute("faceIndex",new dr(_,g)),e.push(x),s>4&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function Ba(t,e,n){const i=new Ei(t,e,n);return i.texture.mapping=dt,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function ka(t,e,n,i,s){t.viewport.set(e,n,i,s),t.scissor.set(e,n,i,s)}function Ha(){return new Yr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Wa(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:m,depthTest:!1,depthWrite:!1})}function Ga(){return new Yr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Wa(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:m,depthTest:!1,depthWrite:!1})}function Wa(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function ja(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const s=e.get(n);void 0!==s&&(e.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const r=s.mapping,a=r===ut||r===ht,o=r===lt||r===ct;if(a||o){let r=e.get(s);const l=void 0!==r?r.texture.pmremVersion:0;if(s.isRenderTargetTexture&&s.pmremVersion!==l)return null===n&&(n=new Va(t)),r=a?n.fromEquirectangular(s,r):n.fromCubemap(s,r),r.texture.pmremVersion=s.pmremVersion,e.set(s,r),r.texture;if(void 0!==r)return r.texture;{const l=s.image;return a&&l&&l.height>0||o&&l&&function(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(l)?(n=new Va(t),r=a?n.fromEquirectangular(s):n.fromCubemap(s),r.texture.pmremVersion=s.pmremVersion,e.set(s,r),s.addEventListener("dispose",i),r.texture):null}}}return s},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Xa(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&ci("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function qa(t,e,n,i){const s={},r=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);for(const t in o.morphAttributes){const n=o.morphAttributes[t];for(let t=0,i=n.length;t<i;t++)e.remove(n[t])}o.removeEventListener("dispose",a),delete s[o.id];const l=r.get(o);l&&(e.remove(l),r.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,s=t.attributes.position;let a=0;if(null!==i){const t=i.array;a=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],s=t[e+1],r=t[e+2];n.push(i,s,s,r,r,i)}}else{if(void 0===s)return;{const t=s.array;a=s.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,s=e+2;n.push(t,i,i,s,s,t)}}}const o=new(ii(n)?_r:vr)(n,1);o.version=a;const l=r.get(t);l&&e.remove(l),r.set(t,o)}return{get:function(t,e){return!0===s[e.id]||(e.addEventListener("dispose",a),s[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER);const s=n.morphAttributes;for(const n in s){const i=s[n];for(let n=0,s=i.length;n<s;n++)e.update(i[n],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return r.get(t)}}}function Ya(t,e,n){let i,s,r;function a(e,a,o){0!==o&&(t.drawElementsInstanced(i,a,s,e*r,o),n.update(a,i,o))}this.setMode=function(t){i=t},this.setIndex=function(t){s=t.type,r=t.bytesPerElement},this.render=function(e,a){t.drawElements(i,a,s,e*r),n.update(a,i,1)},this.renderInstances=a,this.renderMultiDraw=function(t,r,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,r,0,s,t,0,a);let o=0;for(let t=0;t<a;t++)o+=r[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(t,o,l,c){if(0===l)return;const u=e.get("WEBGL_multi_draw");if(null===u)for(let e=0;e<t.length;e++)a(t[e]/r,o[e],c[e]);else{u.multiDrawElementsInstancedWEBGL(i,o,0,s,t,0,c,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t];for(let t=0;t<c.length;t++)n.update(e,i,c[t])}}}function Za(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,s){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=s*(n/3);break;case t.LINES:e.lines+=s*(n/2);break;case t.LINE_STRIP:e.lines+=s*(n-1);break;case t.LINE_LOOP:e.lines+=s*n;break;case t.POINTS:e.points+=s*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function $a(t,e,n){const i=new WeakMap,s=new Si;return{update:function(r,a,o){const l=r.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=void 0!==c?c.length:0;let h=i.get(a);if(void 0===h||h.count!==u){void 0!==h&&h.texture.dispose();const d=void 0!==a.morphAttributes.position,p=void 0!==a.morphAttributes.normal,m=void 0!==a.morphAttributes.color,f=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],v=a.morphAttributes.color||[];let y=0;!0===d&&(y=1),!0===p&&(y=2),!0===m&&(y=3);let _=a.attributes.position.count*y,x=1;_>e.maxTextureSize&&(x=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const M=new Float32Array(_*x*4*u),b=new Ai(M,_,x,u);b.type=Lt,b.needsUpdate=!0;const T=4*y;for(let w=0;w<u;w++){const E=f[w],A=g[w],N=v[w],C=_*x*4*w;for(let R=0;R<E.count;R++){const I=R*T;!0===d&&(s.fromBufferAttribute(E,R),M[C+I+0]=s.x,M[C+I+1]=s.y,M[C+I+2]=s.z,M[C+I+3]=0),!0===p&&(s.fromBufferAttribute(A,R),M[C+I+4]=s.x,M[C+I+5]=s.y,M[C+I+6]=s.z,M[C+I+7]=0),!0===m&&(s.fromBufferAttribute(N,R),M[C+I+8]=s.x,M[C+I+9]=s.y,M[C+I+10]=s.z,M[C+I+11]=4===N.itemSize?s.w:1)}}function S(){b.dispose(),i.delete(a),a.removeEventListener("dispose",S)}h={count:u,texture:b,size:new ti(_,x)},i.set(a,h),a.addEventListener("dispose",S)}if(!0===r.isInstancedMesh&&null!==r.morphTexture)o.getUniforms().setValue(t,"morphTexture",r.morphTexture,n);else{let L=0;for(let U=0;U<l.length;U++)L+=l[U];const P=a.morphTargetsRelative?1:1-L;o.getUniforms().setValue(t,"morphTargetBaseInfluence",P),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",h.texture,n),o.getUniforms().setValue(t,"morphTargetsTextureSize",h.size)}}}function Ja(t,e,n,i){let s=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=e.get(a,l);if(s.get(c)!==o&&(e.update(c),s.set(c,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",r)&&a.addEventListener("dispose",r),s.get(a)!==o&&(n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER),s.set(a,o))),a.isSkinnedMesh){const t=a.skeleton;s.get(t)!==o&&(t.update(),s.set(t,o))}return c},dispose:function(){s=new WeakMap}}}class Ka extends Ti{constructor(t,e,n,i,s,r,a,o,l,c=1026){if(c!==Gt&&c!==Wt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===Gt&&(n=It),void 0===n&&c===Wt&&(n=Ot),super(null,i,s,r,a,o,c,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:gt,this.minFilter=void 0!==o?o:gt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}const Qa=new Ti,to=new Ka(1,1),eo=new Ai,no=new Ci,io=new na,so=[],ro=[],ao=new Float32Array(16),oo=new Float32Array(9),lo=new Float32Array(4);function co(t,e,n){const i=t[0];if(i<=0||i>0)return t;const s=e*n;let r=so[s];if(void 0===r&&(r=new Float32Array(s),so[s]=r),0!==e){i.toArray(r,0);for(let i=1,s=0;i!==e;++i)s+=n,t[i].toArray(r,s)}return r}function uo(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function ho(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function po(t,e){let n=ro[e];void 0===n&&(n=new Int32Array(e),ro[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function mo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function fo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(uo(n,e))return;t.uniform2fv(this.addr,e),ho(n,e)}}function go(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(uo(n,e))return;t.uniform3fv(this.addr,e),ho(n,e)}}function vo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(uo(n,e))return;t.uniform4fv(this.addr,e),ho(n,e)}}function yo(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(uo(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ho(n,e)}else{if(uo(n,i))return;lo.set(i),t.uniformMatrix2fv(this.addr,!1,lo),ho(n,i)}}function _o(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(uo(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ho(n,e)}else{if(uo(n,i))return;oo.set(i),t.uniformMatrix3fv(this.addr,!1,oo),ho(n,i)}}function xo(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(uo(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ho(n,e)}else{if(uo(n,i))return;ao.set(i),t.uniformMatrix4fv(this.addr,!1,ao),ho(n,i)}}function Mo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function bo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(uo(n,e))return;t.uniform2iv(this.addr,e),ho(n,e)}}function To(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(uo(n,e))return;t.uniform3iv(this.addr,e),ho(n,e)}}function So(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(uo(n,e))return;t.uniform4iv(this.addr,e),ho(n,e)}}function wo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Eo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(uo(n,e))return;t.uniform2uiv(this.addr,e),ho(n,e)}}function Ao(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(uo(n,e))return;t.uniform3uiv(this.addr,e),ho(n,e)}}function No(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(uo(n,e))return;t.uniform4uiv(this.addr,e),ho(n,e)}}function Co(t,e,n){const i=this.cache,s=n.allocateTextureUnit();let r;i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),this.type===t.SAMPLER_2D_SHADOW?(to.compareFunction=Sn,r=to):r=Qa,n.setTexture2D(e||r,s)}function Ro(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||no,s)}function Io(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||io,s)}function Lo(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||eo,s)}function Po(t,e){t.uniform1fv(this.addr,e)}function Uo(t,e){const n=co(e,this.size,2);t.uniform2fv(this.addr,n)}function Do(t,e){const n=co(e,this.size,3);t.uniform3fv(this.addr,n)}function Oo(t,e){const n=co(e,this.size,4);t.uniform4fv(this.addr,n)}function zo(t,e){const n=co(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Vo(t,e){const n=co(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Fo(t,e){const n=co(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Bo(t,e){t.uniform1iv(this.addr,e)}function ko(t,e){t.uniform2iv(this.addr,e)}function Ho(t,e){t.uniform3iv(this.addr,e)}function Go(t,e){t.uniform4iv(this.addr,e)}function Wo(t,e){t.uniform1uiv(this.addr,e)}function jo(t,e){t.uniform2uiv(this.addr,e)}function Xo(t,e){t.uniform3uiv(this.addr,e)}function qo(t,e){t.uniform4uiv(this.addr,e)}function Yo(t,e,n){const i=this.cache,s=e.length,r=po(n,s);uo(i,r)||(t.uniform1iv(this.addr,r),ho(i,r));for(let t=0;t!==s;++t)n.setTexture2D(e[t]||Qa,r[t])}function Zo(t,e,n){const i=this.cache,s=e.length,r=po(n,s);uo(i,r)||(t.uniform1iv(this.addr,r),ho(i,r));for(let t=0;t!==s;++t)n.setTexture3D(e[t]||no,r[t])}function $o(t,e,n){const i=this.cache,s=e.length,r=po(n,s);uo(i,r)||(t.uniform1iv(this.addr,r),ho(i,r));for(let t=0;t!==s;++t)n.setTextureCube(e[t]||io,r[t])}function Jo(t,e,n){const i=this.cache,s=e.length,r=po(n,s);uo(i,r)||(t.uniform1iv(this.addr,r),ho(i,r));for(let t=0;t!==s;++t)n.setTexture2DArray(e[t]||eo,r[t])}class Ko{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return mo;case 35664:return fo;case 35665:return go;case 35666:return vo;case 35674:return yo;case 35675:return _o;case 35676:return xo;case 5124:case 35670:return Mo;case 35667:case 35671:return bo;case 35668:case 35672:return To;case 35669:case 35673:return So;case 5125:return wo;case 36294:return Eo;case 36295:return Ao;case 36296:return No;case 35678:case 36198:case 36298:case 36306:case 35682:return Co;case 35679:case 36299:case 36307:return Ro;case 35680:case 36300:case 36308:case 36293:return Io;case 36289:case 36303:case 36311:case 36292:return Lo}}(e.type)}}class Qo{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Po;case 35664:return Uo;case 35665:return Do;case 35666:return Oo;case 35674:return zo;case 35675:return Vo;case 35676:return Fo;case 5124:case 35670:return Bo;case 35667:case 35671:return ko;case 35668:case 35672:return Ho;case 35669:case 35673:return Go;case 5125:return Wo;case 36294:return jo;case 36295:return Xo;case 36296:return qo;case 35678:case 36198:case 36298:case 36306:case 35682:return Yo;case 35679:case 36299:case 36307:return Zo;case 35680:case 36300:case 36308:case 36293:return $o;case 36289:case 36303:case 36311:case 36292:return Jo}}(e.type)}}class tl{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const r=i[s];r.setValue(t,e[r.id],n)}}}const el=/(\w+)(\])?(\[|\.)?/g;function nl(t,e){t.seq.push(e),t.map[e.id]=e}function il(t,e,n){const i=t.name,s=i.length;for(el.lastIndex=0;;){const r=el.exec(i),a=el.lastIndex;let o=r[1];const l="]"===r[2],c=r[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===s){nl(n,void 0===c?new Ko(o,t,e):new Qo(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new tl(o),nl(n,t)),n=t}}}class sl{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);il(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const s=this.map[e];void 0!==s&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,r=e.length;s!==r;++s){const r=e[s],a=n[r.id];!1!==a.needsUpdate&&r.setValue(t,a.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const s=t[i];s.id in e&&n.push(s)}return n}}function rl(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}const al=37297;let ol=0;function ll(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),s=t.getShaderInfoLog(e).trim();if(i&&""===s)return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const i=parseInt(r[1]);return n.toUpperCase()+"\n\n"+s+"\n\n"+function(t,e){const n=t.split("\n"),i=[],s=Math.max(e-6,0),r=Math.min(e+6,n.length);for(let t=s;t<r;t++){const s=t+1;i.push(`${s===e?">":" "} ${s}: ${n[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return s}function cl(t,e){const n=function(t){const e=mi.getPrimaries(mi.workingColorSpace),n=mi.getPrimaries(t);let i;switch(e===n?i="":e===sn&&n===nn?i="LinearDisplayP3ToLinearSRGB":e===nn&&n===sn&&(i="LinearSRGBToLinearDisplayP3"),t){case Je:case Qe:return[i,"LinearTransferOETF"];case $e:case Ke:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",t),[i,"LinearTransferOETF"]}}(e);return`vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function ul(t,e){let n;switch(e){case K:n="Linear";break;case Q:n="Reinhard";break;case tt:n="Cineon";break;case et:n="ACESFilmic";break;case it:n="AgX";break;case st:n="Neutral";break;case nt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const hl=new Li;function dl(){mi.getLuminanceCoefficients(hl);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${hl.x.toFixed(4)}, ${hl.y.toFixed(4)}, ${hl.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function pl(t){return""!==t}function ml(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function fl(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const gl=/^[ \t]*#include +<([\w\d./]+)>/gm;function vl(t){return t.replace(gl,_l)}const yl=new Map;function _l(t,e){let n=ma[e];if(void 0===n){const t=yl.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=ma[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return vl(n)}const xl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ml(t){return t.replace(xl,bl)}function bl(t,e,n,i){let s="";for(let t=parseInt(e);t<parseInt(n);t++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return s}function Tl(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Sl(t,e,n,i){const s=t.getContext(),r=n.defines;let a=n.vertexShader,o=n.fragmentShader;const h=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===l?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===c?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===u&&(e="SHADOWMAP_TYPE_VSM"),e}(n),d=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case lt:case ct:e="ENVMAP_TYPE_CUBE";break;case dt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),p=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===ct&&(e="ENVMAP_MODE_REFRACTION");return e}(n),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Y:e="ENVMAP_BLENDING_MULTIPLY";break;case Z:e="ENVMAP_BLENDING_MIX";break;case $:e="ENVMAP_BLENDING_ADD"}return e}(n),f=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),g=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(pl).join("\n")}(n),v=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(r),y=s.createProgram();let _,x,M=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,v].filter(pl).join("\n"),_.length>0&&(_+="\n"),x=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,v].filter(pl).join("\n"),x.length>0&&(x+="\n")):(_=[Tl(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,v,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(pl).join("\n"),x=[Tl(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,v,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.envMap?"#define "+p:"",n.envMap?"#define "+m:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==J?"#define TONE_MAPPING":"",n.toneMapping!==J?ma.tonemapping_pars_fragment:"",n.toneMapping!==J?ul("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",ma.colorspace_pars_fragment,cl("linearToOutputTexel",n.outputColorSpace),dl(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(pl).join("\n")),a=vl(a),a=ml(a,n),a=fl(a,n),o=vl(o),o=ml(o,n),o=fl(o,n),a=Ml(a),o=Ml(o),!0!==n.isRawShaderMaterial&&(M="#version 300 es\n",_=[g,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+_,x=["#define varying in",n.glslVersion===Fn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Fn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const b=M+_+a,T=M+x+o,S=rl(s,s.VERTEX_SHADER,b),w=rl(s,s.FRAGMENT_SHADER,T);function E(e){if(t.debug.checkShaderErrors){const n=s.getProgramInfoLog(y).trim(),i=s.getShaderInfoLog(S).trim(),r=s.getShaderInfoLog(w).trim();let a=!0,o=!0;if(!1===s.getProgramParameter(y,s.LINK_STATUS))if(a=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(s,y,S,w);else{const t=ll(s,S,"vertex"),i=ll(s,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(y,s.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+n+"\n"+t+"\n"+i)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==i&&""!==r||(o=!1);o&&(e.diagnostics={runnable:a,programLog:n,vertexShader:{log:i,prefix:_},fragmentShader:{log:r,prefix:x}})}s.deleteShader(S),s.deleteShader(w),A=new sl(s,y),N=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const i=t.getActiveAttrib(e,s),r=i.name;let a=1;i.type===t.FLOAT_MAT2&&(a=2),i.type===t.FLOAT_MAT3&&(a=3),i.type===t.FLOAT_MAT4&&(a=4),n[r]={type:i.type,location:t.getAttribLocation(e,r),locationSize:a}}return n}(s,y)}let A,N;s.attachShader(y,S),s.attachShader(y,w),void 0!==n.index0AttributeName?s.bindAttribLocation(y,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(y,0,"position"),s.linkProgram(y),this.getUniforms=function(){return void 0===A&&E(this),A},this.getAttributes=function(){return void 0===N&&E(this),N};let C=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===C&&(C=s.getProgramParameter(y,al)),C},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(y),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=ol++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=S,this.fragmentShader=w,this}let wl=0;class El{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(t);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Al(t),e.set(t,n)),n}}class Al{constructor(t){this.id=wl++,this.code=t,this.usedTimes=0}}function Nl(t,e,n,i,s,r,a){const o=new _s,l=new El,c=new Set,u=[],h=s.logarithmicDepthBuffer,p=s.reverseDepthBuffer,m=s.vertexTextures;let f=s.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(r,o,u,y,_){const x=y.fog,M=_.geometry,b=r.isMeshStandardMaterial?y.environment:null,T=(r.isMeshStandardMaterial?n:e).get(r.envMap||b),S=T&&T.mapping===dt?T.image.height:null,w=g[r.type];null!==r.precision&&(f=s.getMaxPrecision(r.precision),f!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",f,"instead."));const E=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,A=void 0!==E?E.length:0;let N,C,R,I,L=0;if(void 0!==M.morphAttributes.position&&(L=1),void 0!==M.morphAttributes.normal&&(L=2),void 0!==M.morphAttributes.color&&(L=3),w){const t=ga[w];N=t.vertexShader,C=t.fragmentShader}else N=r.vertexShader,C=r.fragmentShader,l.update(r),R=l.getVertexShaderID(r),I=l.getFragmentShaderID(r);const P=t.getRenderTarget(),U=!0===_.isInstancedMesh,D=!0===_.isBatchedMesh,O=!!r.map,z=!!r.matcap,V=!!T,F=!!r.aoMap,B=!!r.lightMap,k=!!r.bumpMap,H=!!r.normalMap,G=!!r.displacementMap,W=!!r.emissiveMap,j=!!r.metalnessMap,X=!!r.roughnessMap,q=r.anisotropy>0,Y=r.clearcoat>0,Z=r.dispersion>0,$=r.iridescence>0,K=r.sheen>0,Q=r.transmission>0,tt=q&&!!r.anisotropyMap,et=Y&&!!r.clearcoatMap,nt=Y&&!!r.clearcoatNormalMap,it=Y&&!!r.clearcoatRoughnessMap,st=$&&!!r.iridescenceMap,rt=$&&!!r.iridescenceThicknessMap,at=K&&!!r.sheenColorMap,ot=K&&!!r.sheenRoughnessMap,lt=!!r.specularMap,ct=!!r.specularColorMap,ut=!!r.specularIntensityMap,ht=Q&&!!r.transmissionMap,pt=Q&&!!r.thicknessMap,mt=!!r.gradientMap,ft=!!r.alphaMap,gt=r.alphaTest>0,vt=!!r.alphaHash,yt=!!r.extensions;let _t=J;r.toneMapped&&(null!==P&&!0!==P.isXRRenderTarget||(_t=t.toneMapping));const xt={shaderID:w,shaderType:r.type,shaderName:r.name,vertexShader:N,fragmentShader:C,defines:r.defines,customVertexShaderID:R,customFragmentShaderID:I,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:f,batching:D,batchingColor:D&&null!==_._colorsTexture,instancing:U,instancingColor:U&&null!==_.instanceColor,instancingMorph:U&&null!==_.morphTexture,supportsVertexTextures:m,outputColorSpace:null===P?t.outputColorSpace:!0===P.isXRRenderTarget?P.texture.colorSpace:Je,alphaToCoverage:!!r.alphaToCoverage,map:O,matcap:z,envMap:V,envMapMode:V&&T.mapping,envMapCubeUVHeight:S,aoMap:F,lightMap:B,bumpMap:k,normalMap:H,displacementMap:m&&G,emissiveMap:W,normalMapObjectSpace:H&&1===r.normalMapType,normalMapTangentSpace:H&&0===r.normalMapType,metalnessMap:j,roughnessMap:X,anisotropy:q,anisotropyMap:tt,clearcoat:Y,clearcoatMap:et,clearcoatNormalMap:nt,clearcoatRoughnessMap:it,dispersion:Z,iridescence:$,iridescenceMap:st,iridescenceThicknessMap:rt,sheen:K,sheenColorMap:at,sheenRoughnessMap:ot,specularMap:lt,specularColorMap:ct,specularIntensityMap:ut,transmission:Q,transmissionMap:ht,thicknessMap:pt,gradientMap:mt,opaque:!1===r.transparent&&1===r.blending&&!1===r.alphaToCoverage,alphaMap:ft,alphaTest:gt,alphaHash:vt,combine:r.combine,mapUv:O&&v(r.map.channel),aoMapUv:F&&v(r.aoMap.channel),lightMapUv:B&&v(r.lightMap.channel),bumpMapUv:k&&v(r.bumpMap.channel),normalMapUv:H&&v(r.normalMap.channel),displacementMapUv:G&&v(r.displacementMap.channel),emissiveMapUv:W&&v(r.emissiveMap.channel),metalnessMapUv:j&&v(r.metalnessMap.channel),roughnessMapUv:X&&v(r.roughnessMap.channel),anisotropyMapUv:tt&&v(r.anisotropyMap.channel),clearcoatMapUv:et&&v(r.clearcoatMap.channel),clearcoatNormalMapUv:nt&&v(r.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:it&&v(r.clearcoatRoughnessMap.channel),iridescenceMapUv:st&&v(r.iridescenceMap.channel),iridescenceThicknessMapUv:rt&&v(r.iridescenceThicknessMap.channel),sheenColorMapUv:at&&v(r.sheenColorMap.channel),sheenRoughnessMapUv:ot&&v(r.sheenRoughnessMap.channel),specularMapUv:lt&&v(r.specularMap.channel),specularColorMapUv:ct&&v(r.specularColorMap.channel),specularIntensityMapUv:ut&&v(r.specularIntensityMap.channel),transmissionMapUv:ht&&v(r.transmissionMap.channel),thicknessMapUv:pt&&v(r.thicknessMap.channel),alphaMapUv:ft&&v(r.alphaMap.channel),vertexTangents:!!M.attributes.tangent&&(H||q),vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!M.attributes.color&&4===M.attributes.color.itemSize,pointsUvs:!0===_.isPoints&&!!M.attributes.uv&&(O||ft),fog:!!x,useFog:!0===r.fog,fogExp2:!!x&&x.isFogExp2,flatShading:!0===r.flatShading,sizeAttenuation:!0===r.sizeAttenuation,logarithmicDepthBuffer:h,reverseDepthBuffer:p,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==M.morphAttributes.position,morphNormals:void 0!==M.morphAttributes.normal,morphColors:void 0!==M.morphAttributes.color,morphTargetsCount:A,morphTextureStride:L,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.length>0,shadowMapType:t.shadowMap.type,toneMapping:_t,decodeVideoTexture:O&&!0===r.map.isVideoTexture&&mi.getTransfer(r.map.colorSpace)===en,premultipliedAlpha:r.premultipliedAlpha,doubleSided:2===r.side,flipSided:r.side===d,useDepthPacking:r.depthPacking>=0,depthPacking:r.depthPacking||0,index0AttributeName:r.index0AttributeName,extensionClipCullDistance:yt&&!0===r.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(yt&&!0===r.extensions.multiDraw||D)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:r.customProgramCacheKey()};return xt.vertexUv1s=c.has(1),xt.vertexUv2s=c.has(2),xt.vertexUv3s=c.has(3),c.clear(),xt},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0);e.instancing&&o.enable(1);e.instancingColor&&o.enable(2);e.instancingMorph&&o.enable(3);e.matcap&&o.enable(4);e.envMap&&o.enable(5);e.normalMapObjectSpace&&o.enable(6);e.normalMapTangentSpace&&o.enable(7);e.clearcoat&&o.enable(8);e.iridescence&&o.enable(9);e.alphaTest&&o.enable(10);e.vertexColors&&o.enable(11);e.vertexAlphas&&o.enable(12);e.vertexUv1s&&o.enable(13);e.vertexUv2s&&o.enable(14);e.vertexUv3s&&o.enable(15);e.vertexTangents&&o.enable(16);e.anisotropy&&o.enable(17);e.alphaHash&&o.enable(18);e.batching&&o.enable(19);e.dispersion&&o.enable(20);e.batchingColor&&o.enable(21);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.reverseDepthBuffer&&o.enable(4);e.skinning&&o.enable(5);e.morphTargets&&o.enable(6);e.morphNormals&&o.enable(7);e.morphColors&&o.enable(8);e.premultipliedAlpha&&o.enable(9);e.shadowMapEnabled&&o.enable(10);e.doubleSided&&o.enable(11);e.flipSided&&o.enable(12);e.useDepthPacking&&o.enable(13);e.dithering&&o.enable(14);e.transmission&&o.enable(15);e.sheen&&o.enable(16);e.opaque&&o.enable(17);e.pointsUvs&&o.enable(18);e.decodeVideoTexture&&o.enable(19);e.alphaToCoverage&&o.enable(20);t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=g[t.type];let n;if(e){const t=ga[e];n=qr.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=u.length;t<e;t++){const e=u[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Sl(t,n,e,r),u.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=u.indexOf(t);u[e]=u[u.length-1],u.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:u,dispose:function(){l.dispose()}}}function Cl(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Rl(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Il(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ll(){const t=[];let e=0;const n=[],i=[],s=[];function r(n,i,s,r,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:s,groupOrder:r,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=s,l.groupOrder=r,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:s,init:function(){e=0,n.length=0,i.length=0,s.length=0},push:function(t,e,a,o,l,c){const u=r(t,e,a,o,l,c);a.transmission>0?i.push(u):!0===a.transparent?s.push(u):n.push(u)},unshift:function(t,e,a,o,l,c){const u=r(t,e,a,o,l,c);a.transmission>0?i.unshift(u):!0===a.transparent?s.unshift(u):n.unshift(u)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Rl),i.length>1&&i.sort(e||Il),s.length>1&&s.sort(e||Il)}}}function Pl(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let s;return void 0===i?(s=new Ll,t.set(e,[s])):n>=i.length?(s=new Ll,i.push(s)):s=i[n],s},dispose:function(){t=new WeakMap}}}function Ul(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Li,color:new tr};break;case"SpotLight":n={position:new Li,direction:new Li,color:new tr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Li,color:new tr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Li,skyColor:new tr,groundColor:new tr};break;case"RectAreaLight":n={color:new tr,position:new Li,halfWidth:new Li,halfHeight:new Li}}return t[e.id]=n,n}}}let Dl=0;function Ol(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function zl(t){const e=new Ul,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ti};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ti,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)i.probe.push(new Li);const s=new Li,r=new ls,a=new ls;return{setup:function(s){let r=0,a=0,o=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,c=0,u=0,h=0,d=0,p=0,m=0,f=0,g=0,v=0,y=0;s.sort(Ol);for(let t=0,_=s.length;t<_;t++){const _=s[t],x=_.color,M=_.intensity,b=_.distance,T=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)r+=x.r*M,a+=x.g*M,o+=x.b*M;else if(_.isLightProbe){for(let t=0;t<9;t++)i.probe[t].addScaledVector(_.sh.coefficients[t],M);y++}else if(_.isDirectionalLight){const t=e.get(_);if(t.color.copy(_.color).multiplyScalar(_.intensity),_.castShadow){const t=_.shadow,e=n.get(_);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,i.directionalShadow[l]=e,i.directionalShadowMap[l]=T,i.directionalShadowMatrix[l]=_.shadow.matrix,p++}i.directional[l]=t,l++}else if(_.isSpotLight){const t=e.get(_);t.position.setFromMatrixPosition(_.matrixWorld),t.color.copy(x).multiplyScalar(M),t.distance=b,t.coneCos=Math.cos(_.angle),t.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),t.decay=_.decay,i.spot[u]=t;const s=_.shadow;if(_.map&&(i.spotLightMap[g]=_.map,g++,s.updateMatrices(_),_.castShadow&&v++),i.spotLightMatrix[u]=s.matrix,_.castShadow){const t=n.get(_);t.shadowIntensity=s.intensity,t.shadowBias=s.bias,t.shadowNormalBias=s.normalBias,t.shadowRadius=s.radius,t.shadowMapSize=s.mapSize,i.spotShadow[u]=t,i.spotShadowMap[u]=T,f++}u++}else if(_.isRectAreaLight){const t=e.get(_);t.color.copy(x).multiplyScalar(M),t.halfWidth.set(.5*_.width,0,0),t.halfHeight.set(0,.5*_.height,0),i.rectArea[h]=t,h++}else if(_.isPointLight){const t=e.get(_);if(t.color.copy(_.color).multiplyScalar(_.intensity),t.distance=_.distance,t.decay=_.decay,_.castShadow){const t=_.shadow,e=n.get(_);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,i.pointShadow[c]=e,i.pointShadowMap[c]=T,i.pointShadowMatrix[c]=_.shadow.matrix,m++}i.point[c]=t,c++}else if(_.isHemisphereLight){const t=e.get(_);t.skyColor.copy(_.color).multiplyScalar(M),t.groundColor.copy(_.groundColor).multiplyScalar(M),i.hemi[d]=t,d++}}h>0&&(!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=fa.LTC_FLOAT_1,i.rectAreaLTC2=fa.LTC_FLOAT_2):(i.rectAreaLTC1=fa.LTC_HALF_1,i.rectAreaLTC2=fa.LTC_HALF_2)),i.ambient[0]=r,i.ambient[1]=a,i.ambient[2]=o;const _=i.hash;_.directionalLength===l&&_.pointLength===c&&_.spotLength===u&&_.rectAreaLength===h&&_.hemiLength===d&&_.numDirectionalShadows===p&&_.numPointShadows===m&&_.numSpotShadows===f&&_.numSpotMaps===g&&_.numLightProbes===y||(i.directional.length=l,i.spot.length=u,i.rectArea.length=h,i.point.length=c,i.hemi.length=d,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=f,i.spotShadowMap.length=f,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=m,i.spotLightMatrix.length=f+g-v,i.spotLightMap.length=g,i.numSpotLightShadowsWithMaps=v,i.numLightProbes=y,_.directionalLength=l,_.pointLength=c,_.spotLength=u,_.rectAreaLength=h,_.hemiLength=d,_.numDirectionalShadows=p,_.numPointShadows=m,_.numSpotShadows=f,_.numSpotMaps=g,_.numLightProbes=y,i.version=Dl++)},setupView:function(t,e){let n=0,o=0,l=0,c=0,u=0;const h=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),n++}else if(d.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),a.identity(),r.copy(d.matrixWorld),r.premultiply(h),a.extractRotation(r),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(d.isPointLight){const t=i.point[o];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),o++}else if(d.isHemisphereLight){const t=i.hemi[u];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(h),u++}}},state:i}}function Vl(t){const e=new zl(t),n=[],i=[];const s={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){s.camera=t,n.length=0,i.length=0},state:s,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){i.push(t)}}}function Fl(t){let e=new WeakMap;return{get:function(n,i=0){const s=e.get(n);let r;return void 0===s?(r=new Vl(t),e.set(n,[r])):i>=s.length?(r=new Vl(t),s.push(r)):r=s[i],r},dispose:function(){e=new WeakMap}}}class Bl extends ir{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class kl extends ir{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Hl(t,e,n){let i=new ua;const s=new ti,r=new ti,a=new Si,o=new Bl({depthPacking:3201}),c=new kl,f={},g=n.maxTextureSize,v={[h]:d,[d]:h,[p]:2},y=new Yr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ti},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=y.clone();_.defines.HORIZONTAL_PASS=1;const x=new Cr;x.setAttribute("position",new dr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new kr(x,y),b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=l;let T=this.type;function S(n,i){const r=e.update(M);y.defines.VSM_SAMPLES!==n.blurSamples&&(y.defines.VSM_SAMPLES=n.blurSamples,_.defines.VSM_SAMPLES=n.blurSamples,y.needsUpdate=!0,_.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Ei(s.x,s.y)),y.uniforms.shadow_pass.value=n.map.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,y,M,null),_.uniforms.shadow_pass.value=n.mapPass.texture,_.uniforms.resolution.value=n.mapSize,_.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,_,M,null)}function w(e,n,i,s){let r=null;const a=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)r=a;else if(r=!0===i.isPointLight?c:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=r.uuid,e=n.uuid;let i=f[t];void 0===i&&(i={},f[t]=i);let s=i[e];void 0===s&&(s=r.clone(),i[e]=s,n.addEventListener("dispose",A)),r=s}if(r.visible=n.visible,r.wireframe=n.wireframe,r.side=s===u?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:v[n.side],r.alphaMap=n.alphaMap,r.alphaTest=n.alphaTest,r.map=n.map,r.clipShadows=n.clipShadows,r.clippingPlanes=n.clippingPlanes,r.clipIntersection=n.clipIntersection,r.displacementMap=n.displacementMap,r.displacementScale=n.displacementScale,r.displacementBias=n.displacementBias,r.wireframeLinewidth=n.wireframeLinewidth,r.linewidth=n.linewidth,!0===i.isPointLight&&!0===r.isMeshDistanceMaterial){t.properties.get(r).light=i}return r}function E(n,s,r,a,o){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===u)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let c=0,u=e.length;c<u;c++){const u=e[c],h=l[u.materialIndex];if(h&&h.visible){const e=w(n,h,a,o);n.onBeforeShadow(t,n,s,r,i,e,u),t.renderBufferDirect(r,null,i,e,n,u),n.onAfterShadow(t,n,s,r,i,e,u)}}}else if(l.visible){const e=w(n,l,a,o);n.onBeforeShadow(t,n,s,r,i,e,null),t.renderBufferDirect(r,null,i,e,n,null),n.onAfterShadow(t,n,s,r,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)E(l[t],s,r,a,o)}function A(t){t.target.removeEventListener("dispose",A);for(const e in f){const n=f[e],i=t.target.uuid;if(i in n){n[i].dispose(),delete n[i]}}}this.render=function(e,n,o){if(!1===b.enabled)return;if(!1===b.autoUpdate&&!1===b.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(m),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=T!==u&&this.type===u,f=T===u&&this.type!==u;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=c.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;s.copy(h.mapSize);const m=h.getFrameExtents();if(s.multiply(m),r.copy(h.mapSize),(s.x>g||s.y>g)&&(s.x>g&&(r.x=Math.floor(g/m.x),s.x=r.x*m.x,h.mapSize.x=r.x),s.y>g&&(r.y=Math.floor(g/m.y),s.y=r.y*m.y,h.mapSize.y=r.y)),null===h.map||!0===p||!0===f){const t=this.type!==u?{minFilter:gt,magFilter:gt}:{};null!==h.map&&h.map.dispose(),h.map=new Ei(s.x,s.y,t),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}t.setRenderTarget(h.map),t.clear();const v=h.getViewportCount();for(let t=0;t<v;t++){const e=h.getViewport(t);a.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),d.viewport(a),h.updateMatrices(c,t),i=h.getFrustum(),E(n,o,h.camera,c,this.type)}!0!==h.isPointLightShadow&&this.type===u&&S(h,o),h.needsUpdate=!1}T=this.type,b.needsUpdate=!1,t.setRenderTarget(l,c,h)}}const Gl={[B]:1,[H]:6,[W]:7,[G]:5,[k]:0,[X]:2,[q]:4,[j]:3};function Wl(t){const e=new function(){let e=!1;const n=new Si;let i=null;const s=new Si(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,r,a,o){!0===o&&(e*=a,i*=a,r*=a),n.set(e,i,r,a),!1===s.equals(n)&&(t.clearColor(e,i,r,a),s.copy(n))},reset:function(){e=!1,i=null,s.set(-1,0,0,0)}}},n=new function(){let e=!1,n=!1,i=null,s=null,r=null;return{setReversed:function(t){n=t},setTest:function(e){e?rt(t.DEPTH_TEST):at(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n&&(e=Gl[e]),s!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}s=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,s=null,r=null}}},i=new function(){let e=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?rt(t.STENCIL_TEST):at(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,a){i===e&&s===n&&r===a||(t.stencilFunc(e,n,a),i=e,s=n,r=a)},setOp:function(e,n,i){a===e&&o===n&&l===i||(t.stencilOp(e,n,i),a=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null}}},s=new WeakMap,r=new WeakMap;let a={},o={},l=new WeakMap,c=[],u=null,h=!1,p=null,f=null,g=null,v=null,y=null,_=null,T=null,S=new tr(0,0,0),B=0,k=!1,H=null,G=null,W=null,j=null,X=null;const q=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Y=!1,Z=0;const $=t.getParameter(t.VERSION);-1!==$.indexOf("WebGL")?(Z=parseFloat(/^WebGL (\d)/.exec($)[1]),Y=Z>=1):-1!==$.indexOf("OpenGL ES")&&(Z=parseFloat(/^OpenGL ES (\d)/.exec($)[1]),Y=Z>=2);let J=null,K={};const Q=t.getParameter(t.SCISSOR_BOX),tt=t.getParameter(t.VIEWPORT),et=(new Si).fromArray(Q),nt=(new Si).fromArray(tt);function it(e,n,i,s){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let a=0;a<i;a++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,s,0,t.RGBA,t.UNSIGNED_BYTE,r):t.texImage2D(n+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}const st={};function rt(e){!0!==a[e]&&(t.enable(e),a[e]=!0)}function at(e){!1!==a[e]&&(t.disable(e),a[e]=!1)}st[t.TEXTURE_2D]=it(t.TEXTURE_2D,t.TEXTURE_2D,1),st[t.TEXTURE_CUBE_MAP]=it(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),st[t.TEXTURE_2D_ARRAY]=it(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),st[t.TEXTURE_3D]=it(t.TEXTURE_3D,t.TEXTURE_3D,1,1),e.setClear(0,0,0,1),n.setClear(1),i.setClear(0),rt(t.DEPTH_TEST),n.setFunc(3),ut(!1),ht(1),rt(t.CULL_FACE),ct(m);const ot={[x]:t.FUNC_ADD,[M]:t.FUNC_SUBTRACT,[b]:t.FUNC_REVERSE_SUBTRACT};ot[103]=t.MIN,ot[104]=t.MAX;const lt={[w]:t.ZERO,[E]:t.ONE,[A]:t.SRC_COLOR,[C]:t.SRC_ALPHA,[D]:t.SRC_ALPHA_SATURATE,[P]:t.DST_COLOR,[I]:t.DST_ALPHA,[N]:t.ONE_MINUS_SRC_COLOR,[R]:t.ONE_MINUS_SRC_ALPHA,[U]:t.ONE_MINUS_DST_COLOR,[L]:t.ONE_MINUS_DST_ALPHA,[O]:t.CONSTANT_COLOR,[z]:t.ONE_MINUS_CONSTANT_COLOR,[V]:t.CONSTANT_ALPHA,[F]:t.ONE_MINUS_CONSTANT_ALPHA};function ct(e,n,i,s,r,a,o,l,c,u){if(e!==m){if(!1===h&&(rt(t.BLEND),h=!0),5===e)r=r||n,a=a||i,o=o||s,n===f&&r===y||(t.blendEquationSeparate(ot[n],ot[r]),f=n,y=r),i===g&&s===v&&a===_&&o===T||(t.blendFuncSeparate(lt[i],lt[s],lt[a],lt[o]),g=i,v=s,_=a,T=o),!1!==l.equals(S)&&c===B||(t.blendColor(l.r,l.g,l.b,c),S.copy(l),B=c),p=e,k=!1;else if(e!==p||u!==k){if(f===x&&y===x||(t.blendEquation(t.FUNC_ADD),f=x,y=x),u)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}g=null,v=null,_=null,T=null,S.set(0,0,0),B=0,p=e,k=u}}else!0===h&&(at(t.BLEND),h=!1)}function ut(e){H!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),H=e)}function ht(e){0!==e?(rt(t.CULL_FACE),e!==G&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):at(t.CULL_FACE),G=e}function dt(e,n,i){e?(rt(t.POLYGON_OFFSET_FILL),j===n&&X===i||(t.polygonOffset(n,i),j=n,X=i)):at(t.POLYGON_OFFSET_FILL)}return{buffers:{color:e,depth:n,stencil:i},enable:rt,disable:at,bindFramebuffer:function(e,n){return o[e]!==n&&(t.bindFramebuffer(e,n),o[e]=n,e===t.DRAW_FRAMEBUFFER&&(o[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(o[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let i=c,s=!1;if(e){i=l.get(n),void 0===i&&(i=[],l.set(n,i));const r=e.textures;if(i.length!==r.length||i[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=r.length;e<n;e++)i[e]=t.COLOR_ATTACHMENT0+e;i.length=r.length,s=!0}}else i[0]!==t.BACK&&(i[0]=t.BACK,s=!0);s&&t.drawBuffers(i)},useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:ct,setMaterial:function(s,r){2===s.side?at(t.CULL_FACE):rt(t.CULL_FACE);let a=s.side===d;r&&(a=!a),ut(a),1===s.blending&&!1===s.transparent?ct(m):ct(s.blending,s.blendEquation,s.blendSrc,s.blendDst,s.blendEquationAlpha,s.blendSrcAlpha,s.blendDstAlpha,s.blendColor,s.blendAlpha,s.premultipliedAlpha),n.setFunc(s.depthFunc),n.setTest(s.depthTest),n.setMask(s.depthWrite),e.setMask(s.colorWrite);const o=s.stencilWrite;i.setTest(o),o&&(i.setMask(s.stencilWriteMask),i.setFunc(s.stencilFunc,s.stencilRef,s.stencilFuncMask),i.setOp(s.stencilFail,s.stencilZFail,s.stencilZPass)),dt(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits),!0===s.alphaToCoverage?rt(t.SAMPLE_ALPHA_TO_COVERAGE):at(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:ut,setCullFace:ht,setLineWidth:function(e){e!==W&&(Y&&t.lineWidth(e),W=e)},setPolygonOffset:dt,setScissorTest:function(e){e?rt(t.SCISSOR_TEST):at(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+q-1),J!==e&&(t.activeTexture(e),J=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===J?t.TEXTURE0+q-1:J);let s=K[i];void 0===s&&(s={type:void 0,texture:void 0},K[i]=s),s.type===e&&s.texture===n||(J!==i&&(t.activeTexture(i),J=i),t.bindTexture(e,n||st[e]),s.type=e,s.texture=n)},unbindTexture:function(){const e=K[J];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let i=r.get(n);void 0===i&&(i=new WeakMap,r.set(n,i));let s=i.get(e);void 0===s&&(s=t.getUniformBlockIndex(n,e.name),i.set(e,s))},uniformBlockBinding:function(e,n){const i=r.get(n).get(e);s.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),s.set(n,i))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===et.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),et.copy(e))},viewport:function(e){!1===nt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),nt.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),a={},J=null,K={},o={},l=new WeakMap,c=[],u=null,h=!1,p=null,f=null,g=null,v=null,y=null,_=null,T=null,S=new tr(0,0,0),B=0,k=!1,H=null,G=null,W=null,j=null,X=null,et.set(0,0,t.canvas.width,t.canvas.height),nt.set(0,0,t.canvas.width,t.canvas.height),e.reset(),n.reset(),i.reset()}}}function jl(t,e,n,i){const s=function(t){switch(t){case Et:case At:return{byteLength:1,components:1};case Ct:case Nt:case Pt:return{byteLength:2,components:1};case Ut:case Dt:return{byteLength:2,components:4};case It:case Rt:case Lt:return{byteLength:4,components:1};case zt:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(i);switch(n){case Vt:case kt:return t*e;case Ht:return t*e*2;case jt:case Xt:return t*e/s.components*s.byteLength;case qt:case Yt:return t*e*2/s.components*s.byteLength;case Ft:return t*e*3/s.components*s.byteLength;case Bt:case $t:return t*e*4/s.components*s.byteLength;case Jt:case Kt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case Qt:case te:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case ne:case se:return Math.max(t,16)*Math.max(e,8)/4;case ee:case ie:return Math.max(t,8)*Math.max(e,8)/2;case re:case ae:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case oe:case le:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case ce:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case ue:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case he:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case de:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case pe:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case me:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case fe:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case ge:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case ve:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case ye:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case _e:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case xe:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Me:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case be:case Te:case Se:return Math.ceil(t/4)*Math.ceil(e/4)*16;case we:case Ee:return Math.ceil(t/4)*Math.ceil(e/4)*8;case Ae:case Ne:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}const Xl={contain:function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2):(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0),t},cover:function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0):(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2),t},fill:function(t){return t.repeat.x=1,t.repeat.y=1,t.offset.x=0,t.offset.y=0,t},getByteLength:jl};function ql(t,e,n,i,s,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new ti,u=new WeakMap;let h;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return p?new OffscreenCanvas(t,e):ai("canvas")}function f(t,e,n){let i=1;const s=B(t);if((s.width>n||s.height>n)&&(i=n/Math.max(s.width,s.height)),i<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(i*s.width),r=Math.floor(i*s.height);void 0===h&&(h=m(n,r));const a=e?m(n,r):h;a.width=n,a.height=r;return a.getContext("2d").drawImage(t,0,0,n,r),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+s.width+"x"+s.height+") to ("+n+"x"+r+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+s.width+"x"+s.height+")."),t}return t}function g(t){return t.generateMipmaps&&t.minFilter!==gt&&t.minFilter!==Mt}function v(e){t.generateMipmap(e)}function y(n,i,s,r,a=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===t.RED&&(s===t.FLOAT&&(o=t.R32F),s===t.HALF_FLOAT&&(o=t.R16F),s===t.UNSIGNED_BYTE&&(o=t.R8)),i===t.RED_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.R8UI),s===t.UNSIGNED_SHORT&&(o=t.R16UI),s===t.UNSIGNED_INT&&(o=t.R32UI),s===t.BYTE&&(o=t.R8I),s===t.SHORT&&(o=t.R16I),s===t.INT&&(o=t.R32I)),i===t.RG&&(s===t.FLOAT&&(o=t.RG32F),s===t.HALF_FLOAT&&(o=t.RG16F),s===t.UNSIGNED_BYTE&&(o=t.RG8)),i===t.RG_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RG8UI),s===t.UNSIGNED_SHORT&&(o=t.RG16UI),s===t.UNSIGNED_INT&&(o=t.RG32UI),s===t.BYTE&&(o=t.RG8I),s===t.SHORT&&(o=t.RG16I),s===t.INT&&(o=t.RG32I)),i===t.RGB_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RGB8UI),s===t.UNSIGNED_SHORT&&(o=t.RGB16UI),s===t.UNSIGNED_INT&&(o=t.RGB32UI),s===t.BYTE&&(o=t.RGB8I),s===t.SHORT&&(o=t.RGB16I),s===t.INT&&(o=t.RGB32I)),i===t.RGBA_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),s===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),s===t.UNSIGNED_INT&&(o=t.RGBA32UI),s===t.BYTE&&(o=t.RGBA8I),s===t.SHORT&&(o=t.RGBA16I),s===t.INT&&(o=t.RGBA32I)),i===t.RGB&&s===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),i===t.RGBA){const e=a?tn:mi.getTransfer(r);s===t.FLOAT&&(o=t.RGBA32F),s===t.HALF_FLOAT&&(o=t.RGBA16F),s===t.UNSIGNED_BYTE&&(o=e===en?t.SRGB8_ALPHA8:t.RGBA8),s===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),s===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function _(e,n){let i;return e?null===n||n===It||n===Ot?i=t.DEPTH24_STENCIL8:n===Lt?i=t.DEPTH32F_STENCIL8:n===Ct&&(i=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===It||n===Ot?i=t.DEPTH_COMPONENT24:n===Lt?i=t.DEPTH_COMPONENT32F:n===Ct&&(i=t.DEPTH_COMPONENT16),i}function x(t,e){return!0===g(t)||t.isFramebufferTexture&&t.minFilter!==gt&&t.minFilter!==Mt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function M(t){const e=t.target;e.removeEventListener("dispose",M),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,s=d.get(n);if(s){const i=s[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&T(t),0===Object.keys(s).length&&d.delete(n)}i.remove(t)}(e),e.isVideoTexture&&u.delete(e)}function b(e){const n=e.target;n.removeEventListener("dispose",b),function(e){const n=i.get(e);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let i=0;i<n.__webglFramebuffer[e].length;i++)t.deleteFramebuffer(n.__webglFramebuffer[e][i]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const s=e.textures;for(let e=0,n=s.length;e<n;e++){const n=i.get(s[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),a.memory.textures--),i.remove(s[e])}i.remove(e)}(n)}function T(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const s=e.source;delete d.get(s)[n.__cacheKey],a.memory.textures--}let S=0;function w(e,s){const r=i.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;u.get(t)!==e&&(u.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void I(r,e,s);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(t.TEXTURE_2D,r.__webglTexture,t.TEXTURE0+s)}const E={[pt]:t.REPEAT,[mt]:t.CLAMP_TO_EDGE,[ft]:t.MIRRORED_REPEAT},A={[gt]:t.NEAREST,[vt]:t.NEAREST_MIPMAP_NEAREST,[_t]:t.NEAREST_MIPMAP_LINEAR,[Mt]:t.LINEAR,[bt]:t.LINEAR_MIPMAP_NEAREST,[St]:t.LINEAR_MIPMAP_LINEAR},N={[Mn]:t.NEVER,[Nn]:t.ALWAYS,[bn]:t.LESS,[Sn]:t.LEQUAL,[Tn]:t.EQUAL,[An]:t.GEQUAL,[wn]:t.GREATER,[En]:t.NOTEQUAL};function C(n,r){if(r.type!==Lt||!1!==e.has("OES_texture_float_linear")||r.magFilter!==Mt&&r.magFilter!==bt&&r.magFilter!==_t&&r.magFilter!==St&&r.minFilter!==Mt&&r.minFilter!==bt&&r.minFilter!==_t&&r.minFilter!==St||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,E[r.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,E[r.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,E[r.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,A[r.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,A[r.minFilter]),r.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,N[r.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(r.magFilter===gt)return;if(r.minFilter!==_t&&r.minFilter!==St)return;if(r.type===Lt&&!1===e.has("OES_texture_float_linear"))return;if(r.anisotropy>1||i.get(r).__currentAnisotropy){const a=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,s.getMaxAnisotropy())),i.get(r).__currentAnisotropy=r.anisotropy}}}function R(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",M));const s=n.source;let r=d.get(s);void 0===r&&(r={},d.set(s,r));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===r[o]&&(r[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,i=!0),r[o].usedTimes++;const s=r[e.__cacheKey];void 0!==s&&(r[e.__cacheKey].usedTimes--,0===s.usedTimes&&T(n)),e.__cacheKey=o,e.__webglTexture=r[o].texture}return i}function I(e,a,o){let l=t.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=t.TEXTURE_3D);const c=R(e,a),u=a.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const h=i.get(u);if(u.version!==h.__version||!0===c){n.activeTexture(t.TEXTURE0+o);const e=mi.getPrimaries(mi.workingColorSpace),i=a.colorSpace===Ze?null:mi.getPrimaries(a.colorSpace),d=a.colorSpace===Ze||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=f(a.image,!1,s.maxTextureSize);p=F(a,p);const m=r.convert(a.format,a.colorSpace),M=r.convert(a.type);let b,T=y(a.internalFormat,m,M,a.colorSpace,a.isVideoTexture);C(l,a);const S=a.mipmaps,w=!0!==a.isVideoTexture,E=void 0===h.__version||!0===c,A=u.dataReady,N=x(a,p);if(a.isDepthTexture)T=_(a.format===Wt,a.type),E&&(w?n.texStorage2D(t.TEXTURE_2D,1,T,p.width,p.height):n.texImage2D(t.TEXTURE_2D,0,T,p.width,p.height,0,m,M,null));else if(a.isDataTexture)if(S.length>0){w&&E&&n.texStorage2D(t.TEXTURE_2D,N,T,S[0].width,S[0].height);for(let e=0,i=S.length;e<i;e++)b=S[e],w?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,b.width,b.height,m,M,b.data):n.texImage2D(t.TEXTURE_2D,e,T,b.width,b.height,0,m,M,b.data);a.generateMipmaps=!1}else w?(E&&n.texStorage2D(t.TEXTURE_2D,N,T,p.width,p.height),A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,p.width,p.height,m,M,p.data)):n.texImage2D(t.TEXTURE_2D,0,T,p.width,p.height,0,m,M,p.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){w&&E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,N,T,S[0].width,S[0].height,p.depth);for(let e=0,i=S.length;e<i;e++)if(b=S[e],a.format!==Bt)if(null!==m)if(w){if(A)if(a.layerUpdates.size>0){const i=jl(b.width,b.height,a.format,a.type);for(const s of a.layerUpdates){const r=b.data.subarray(s*i/b.data.BYTES_PER_ELEMENT,(s+1)*i/b.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,s,b.width,b.height,1,m,r,0,0)}a.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,b.width,b.height,p.depth,m,b.data,0,0)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,T,b.width,b.height,p.depth,0,b.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else w?A&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,b.width,b.height,p.depth,m,M,b.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,T,b.width,b.height,p.depth,0,m,M,b.data)}else{w&&E&&n.texStorage2D(t.TEXTURE_2D,N,T,S[0].width,S[0].height);for(let e=0,i=S.length;e<i;e++)b=S[e],a.format!==Bt?null!==m?w?A&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,b.width,b.height,m,b.data):n.compressedTexImage2D(t.TEXTURE_2D,e,T,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):w?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,b.width,b.height,m,M,b.data):n.texImage2D(t.TEXTURE_2D,e,T,b.width,b.height,0,m,M,b.data)}else if(a.isDataArrayTexture)if(w){if(E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,N,T,p.width,p.height,p.depth),A)if(a.layerUpdates.size>0){const e=jl(p.width,p.height,a.format,a.type);for(const i of a.layerUpdates){const s=p.data.subarray(i*e/p.data.BYTES_PER_ELEMENT,(i+1)*e/p.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,i,p.width,p.height,1,m,M,s)}a.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,m,M,p.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,T,p.width,p.height,p.depth,0,m,M,p.data);else if(a.isData3DTexture)w?(E&&n.texStorage3D(t.TEXTURE_3D,N,T,p.width,p.height,p.depth),A&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,m,M,p.data)):n.texImage3D(t.TEXTURE_3D,0,T,p.width,p.height,p.depth,0,m,M,p.data);else if(a.isFramebufferTexture){if(E)if(w)n.texStorage2D(t.TEXTURE_2D,N,T,p.width,p.height);else{let e=p.width,i=p.height;for(let s=0;s<N;s++)n.texImage2D(t.TEXTURE_2D,s,T,e,i,0,m,M,null),e>>=1,i>>=1}}else if(S.length>0){if(w&&E){const e=B(S[0]);n.texStorage2D(t.TEXTURE_2D,N,T,e.width,e.height)}for(let e=0,i=S.length;e<i;e++)b=S[e],w?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,m,M,b):n.texImage2D(t.TEXTURE_2D,e,T,m,M,b);a.generateMipmaps=!1}else if(w){if(E){const e=B(p);n.texStorage2D(t.TEXTURE_2D,N,T,e.width,e.height)}A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,m,M,p)}else n.texImage2D(t.TEXTURE_2D,0,T,m,M,p);g(a)&&v(l),h.__version=u.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function L(e,s,a,l,c,u){const h=r.convert(a.format,a.colorSpace),d=r.convert(a.type),p=y(a.internalFormat,h,d,a.colorSpace);if(!i.get(s).__hasExternalTextures){const e=Math.max(1,s.width>>u),i=Math.max(1,s.height>>u);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?n.texImage3D(c,u,p,e,i,s.depth,0,h,d,null):n.texImage2D(c,u,p,e,i,0,h,d,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),V(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,c,i.get(a).__webglTexture,0,z(s)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,c,i.get(a).__webglTexture,u),n.bindFramebuffer(t.FRAMEBUFFER,null)}function P(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const s=n.depthTexture,r=s&&s.isDepthTexture?s.type:null,a=_(n.stencilBuffer,r),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=z(n);V(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,c,a,n.width,n.height):i?t.renderbufferStorageMultisample(t.RENDERBUFFER,c,a,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,a,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let s=0;s<e.length;s++){const a=e[s],l=r.convert(a.format,a.colorSpace),c=r.convert(a.type),u=y(a.internalFormat,l,c,a.colorSpace),h=z(n);i&&!1===V(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,u,n.width,n.height):V(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,u,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,u,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function U(e){const s=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(s.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(s.__depthDisposeCallback&&s.__depthDisposeCallback(),t){const e=()=>{delete s.__boundDepthTexture,delete s.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),s.__depthDisposeCallback=e}s.__boundDepthTexture=t}if(e.depthTexture&&!s.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),w(s.depthTexture,0);const r=i.get(s.depthTexture).__webglTexture,a=z(s);if(s.depthTexture.format===Gt)V(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(s.depthTexture.format!==Wt)throw new Error("Unknown depthTexture format");V(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(s.__webglFramebuffer,e)}else if(r){s.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer[i]),void 0===s.__webglDepthbuffer[i])s.__webglDepthbuffer[i]=t.createRenderbuffer(),P(s.__webglDepthbuffer[i],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,r=s.__webglDepthbuffer[i];t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,r)}}else if(n.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer),void 0===s.__webglDepthbuffer)s.__webglDepthbuffer=t.createRenderbuffer(),P(s.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,i=s.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,i)}n.bindFramebuffer(t.FRAMEBUFFER,null)}const D=[],O=[];function z(t){return Math.min(s.maxSamples,t.samples)}function V(t){const n=i.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function F(t,e){const n=t.colorSpace,i=t.format,s=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==Je&&n!==Ze&&(mi.getTransfer(n)===en?i===Bt&&s===Et||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function B(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(c.width=t.naturalWidth||t.width,c.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(c.width=t.displayWidth,c.height=t.displayHeight):(c.width=t.width,c.height=t.height),c}this.allocateTextureUnit=function(){const t=S;return t>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+s.maxTextures),S+=1,t},this.resetTextureUnits=function(){S=0},this.setTexture2D=w,this.setTexture2DArray=function(e,s){const r=i.get(e);e.version>0&&r.__version!==e.version?I(r,e,s):n.bindTexture(t.TEXTURE_2D_ARRAY,r.__webglTexture,t.TEXTURE0+s)},this.setTexture3D=function(e,s){const r=i.get(e);e.version>0&&r.__version!==e.version?I(r,e,s):n.bindTexture(t.TEXTURE_3D,r.__webglTexture,t.TEXTURE0+s)},this.setTextureCube=function(e,a){const o=i.get(e);e.version>0&&o.__version!==e.version?function(e,a,o){if(6!==a.image.length)return;const l=R(e,a),c=a.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const u=i.get(c);if(c.version!==u.__version||!0===l){n.activeTexture(t.TEXTURE0+o);const e=mi.getPrimaries(mi.workingColorSpace),i=a.colorSpace===Ze?null:mi.getPrimaries(a.colorSpace),h=a.colorSpace===Ze||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);const d=a.isCompressedTexture||a.image[0].isCompressedTexture,p=a.image[0]&&a.image[0].isDataTexture,m=[];for(let t=0;t<6;t++)m[t]=d||p?p?a.image[t].image:a.image[t]:f(a.image[t],!0,s.maxCubemapSize),m[t]=F(a,m[t]);const _=m[0],M=r.convert(a.format,a.colorSpace),b=r.convert(a.type),T=y(a.internalFormat,M,b,a.colorSpace),S=!0!==a.isVideoTexture,w=void 0===u.__version||!0===l,E=c.dataReady;let A,N=x(a,_);if(C(t.TEXTURE_CUBE_MAP,a),d){S&&w&&n.texStorage2D(t.TEXTURE_CUBE_MAP,N,T,_.width,_.height);for(let e=0;e<6;e++){A=m[e].mipmaps;for(let i=0;i<A.length;i++){const s=A[i];a.format!==Bt?null!==M?S?E&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,M,s.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,T,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):S?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,M,b,s.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,T,s.width,s.height,0,M,b,s.data)}}}else{if(A=a.mipmaps,S&&w){A.length>0&&N++;const e=B(m[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,N,T,e.width,e.height)}for(let e=0;e<6;e++)if(p){S?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,m[e].width,m[e].height,M,b,m[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,T,m[e].width,m[e].height,0,M,b,m[e].data);for(let i=0;i<A.length;i++){const s=A[i].image[e].image;S?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,s.width,s.height,M,b,s.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,T,s.width,s.height,0,M,b,s.data)}}else{S?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,M,b,m[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,T,M,b,m[e]);for(let i=0;i<A.length;i++){const s=A[i];S?E&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,M,b,s.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,T,M,b,s.image[e])}}}g(a)&&v(t.TEXTURE_CUBE_MAP),u.__version=c.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}(o,e,a):n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+a)},this.rebindTextures=function(e,n,s){const r=i.get(e);void 0!==n&&L(r.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==s&&U(e)},this.setupRenderTarget=function(e){const s=e.texture,o=i.get(e),l=i.get(s);e.addEventListener("dispose",b);const c=e.textures,u=!0===e.isWebGLCubeRenderTarget,h=c.length>1;if(h||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=s.version,a.memory.textures++),u){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(s.mipmaps&&s.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let n=0;n<s.mipmaps.length;n++)o.__webglFramebuffer[e][n]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(s.mipmaps&&s.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<s.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(h)for(let e=0,n=c.length;e<n;e++){const n=i.get(c[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),a.memory.textures++)}if(e.samples>0&&!1===V(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<c.length;n++){const i=c[n];o.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const s=r.convert(i.format,i.colorSpace),a=r.convert(i.type),l=y(i.internalFormat,s,a,i.colorSpace,!0===e.isXRRenderTarget),u=z(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,u,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,o.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),P(o.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(u){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),C(t.TEXTURE_CUBE_MAP,s);for(let n=0;n<6;n++)if(s.mipmaps&&s.mipmaps.length>0)for(let i=0;i<s.mipmaps.length;i++)L(o.__webglFramebuffer[n][i],e,s,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else L(o.__webglFramebuffer[n],e,s,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(s)&&v(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){for(let s=0,r=c.length;s<r;s++){const r=c[s],a=i.get(r);n.bindTexture(t.TEXTURE_2D,a.__webglTexture),C(t.TEXTURE_2D,r),L(o.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0+s,t.TEXTURE_2D,0),g(r)&&v(t.TEXTURE_2D)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),C(i,s),s.mipmaps&&s.mipmaps.length>0)for(let n=0;n<s.mipmaps.length;n++)L(o.__webglFramebuffer[n],e,s,t.COLOR_ATTACHMENT0,i,n);else L(o.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0,i,0);g(s)&&v(i),n.unbindTexture()}e.depthBuffer&&U(e)},this.updateRenderTargetMipmap=function(e){const s=e.textures;for(let r=0,a=s.length;r<a;r++){const a=s[r];if(g(a)){const s=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,r=i.get(a).__webglTexture;n.bindTexture(s,r),v(s),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===V(e)){const s=e.textures,r=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,u=i.get(e),h=s.length>1;if(h)for(let e=0;e<s.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,u.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<s.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),h){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,u.__webglColorRenderbuffer[n]);const e=i.get(s[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,r,a,0,0,r,a,o,t.NEAREST),!0===l&&(D.length=0,O.length=0,D.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&(D.push(c),O.push(c),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,O)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,D))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),h)for(let e=0;e<s.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,u.__webglColorRenderbuffer[e]);const r=i.get(s[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,u.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=U,this.setupFrameBufferTexture=L,this.useMultisampledRTT=V}function Yl(t,e){return{convert:function(n,i=""){let s;const r=mi.getTransfer(i);if(n===Et)return t.UNSIGNED_BYTE;if(n===Ut)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Dt)return t.UNSIGNED_SHORT_5_5_5_1;if(n===zt)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===At)return t.BYTE;if(n===Nt)return t.SHORT;if(n===Ct)return t.UNSIGNED_SHORT;if(n===Rt)return t.INT;if(n===It)return t.UNSIGNED_INT;if(n===Lt)return t.FLOAT;if(n===Pt)return t.HALF_FLOAT;if(n===Vt)return t.ALPHA;if(n===Ft)return t.RGB;if(n===Bt)return t.RGBA;if(n===kt)return t.LUMINANCE;if(n===Ht)return t.LUMINANCE_ALPHA;if(n===Gt)return t.DEPTH_COMPONENT;if(n===Wt)return t.DEPTH_STENCIL;if(n===jt)return t.RED;if(n===Xt)return t.RED_INTEGER;if(n===qt)return t.RG;if(n===Yt)return t.RG_INTEGER;if(n===$t)return t.RGBA_INTEGER;if(n===Jt||n===Kt||n===Qt||n===te)if(r===en){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===Jt)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Kt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Qt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===te)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===Jt)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Kt)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Qt)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===te)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===ee||n===ne||n===ie||n===se){if(s=e.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(n===ee)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ne)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ie)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===se)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===re||n===ae||n===oe){if(s=e.get("WEBGL_compressed_texture_etc"),null===s)return null;if(n===re||n===ae)return r===en?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===oe)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(n===le||n===ce||n===ue||n===he||n===de||n===pe||n===me||n===fe||n===ge||n===ve||n===ye||n===_e||n===xe||n===Me){if(s=e.get("WEBGL_compressed_texture_astc"),null===s)return null;if(n===le)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===ce)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ue)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===he)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===de)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===pe)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===me)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===fe)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===ge)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ve)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ye)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===_e)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===xe)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Me)return r===en?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===be||n===Te||n===Se){if(s=e.get("EXT_texture_compression_bptc"),null===s)return null;if(n===be)return r===en?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Te)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Se)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===we||n===Ee||n===Ae||n===Ne){if(s=e.get("EXT_texture_compression_rgtc"),null===s)return null;if(n===be)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Ee)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Ae)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ne)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Ot?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class Zl extends Qr{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class $l extends Ds{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Jl={type:"move"};class Kl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new $l,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new $l,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Li,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Li),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new $l,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Li,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Li),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,r=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n),s=this._getHandJoint(l,i);null!==t&&(s.matrix.fromArray(t.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,s.jointRadius=t.radius),s.visible=null!==t}const i=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],a=i.position.distanceTo(s.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),null!==s&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==s&&(i=s),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Jl)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==s),null!==l&&(l.visible=null!==r),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new $l;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Ql{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(null===this.texture){const i=new Ti;t.properties.get(i).__webglTexture=e.texture,e.depthNear==n.depthNear&&e.depthFar==n.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new Yr({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new kr(new pa(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class tc extends Hn{constructor(t,e){super();const n=this;let i=null,s=1,r=null,a="local-floor",o=1,l=null,c=null,u=null,h=null,d=null,p=null;const m=new Ql,f=e.getContextAttributes();let g=null,v=null;const y=[],_=[],x=new ti;let M=null;const b=new Qr;b.layers.enable(1),b.viewport=new Si;const T=new Qr;T.layers.enable(2),T.viewport=new Si;const S=[b,T],w=new Zl;w.layers.enable(1),w.layers.enable(2);let E=null,A=null;function N(t){const e=_.indexOf(t.inputSource);if(-1===e)return;const n=y[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||r),n.dispatchEvent({type:t.type,data:t.inputSource}))}function C(){i.removeEventListener("select",N),i.removeEventListener("selectstart",N),i.removeEventListener("selectend",N),i.removeEventListener("squeeze",N),i.removeEventListener("squeezestart",N),i.removeEventListener("squeezeend",N),i.removeEventListener("end",C),i.removeEventListener("inputsourceschange",R);for(let t=0;t<y.length;t++){const e=_[t];null!==e&&(_[t]=null,y[t]&&y[t].disconnect(e))}E=null,A=null,m.reset(),t.setRenderTarget(g),d=null,h=null,u=null,i=null,v=null,D.stop(),n.isPresenting=!1,t.setPixelRatio(M),t.setSize(x.width,x.height,!1),n.dispatchEvent({type:"sessionend"})}function R(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=_.indexOf(n);i>=0&&(_[i]=null,y[i]&&y[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=_.indexOf(n);if(-1===i){for(let t=0;t<y.length;t++){if(t>=_.length){_.push(n),i=t;break}if(null===_[t]){_[t]=n,i=t;break}}if(-1===i)break}const s=y[i];s&&s.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.controllerAutoUpdate=!0,this.getController=function(t){let e=y[t];return void 0===e&&(e=new Kl,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new Kl,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new Kl,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||r},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(g=t.getRenderTarget(),i.addEventListener("select",N),i.addEventListener("selectstart",N),i.addEventListener("selectend",N),i.addEventListener("squeeze",N),i.addEventListener("squeezestart",N),i.addEventListener("squeezeend",N),i.addEventListener("end",C),i.addEventListener("inputsourceschange",R),!0!==f.xrCompatible&&await e.makeXRCompatible(),M=t.getPixelRatio(),t.getSize(x),void 0===i.renderState.layers){const n={antialias:f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),v=new Ei(d.framebufferWidth,d.framebufferHeight,{format:Bt,type:Et,colorSpace:t.outputColorSpace,stencilBuffer:f.stencil})}else{let n=null,r=null,a=null;f.depth&&(a=f.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=f.stencil?Wt:Gt,r=f.stencil?Ot:It);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:s};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(o),i.updateRenderState({layers:[h]}),t.setPixelRatio(1),t.setSize(h.textureWidth,h.textureHeight,!1),v=new Ei(h.textureWidth,h.textureHeight,{format:Bt,type:Et,depthTexture:new Ka(h.textureWidth,h.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,colorSpace:t.outputColorSpace,samples:f.antialias?4:0,resolveDepthBuffer:!1===h.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(o),l=null,r=await i.requestReferenceSpace(a),D.setContext(i),D.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};const I=new Li,L=new Li;function P(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;let e=t.near,n=t.far;null!==m.texture&&(m.depthNear>0&&(e=m.depthNear),m.depthFar>0&&(n=m.depthFar)),w.near=T.near=b.near=e,w.far=T.far=b.far=n,E===w.near&&A===w.far||(i.updateRenderState({depthNear:w.near,depthFar:w.far}),E=w.near,A=w.far);const s=t.parent,r=w.cameras;P(w,s);for(let t=0;t<r.length;t++)P(r[t],s);2===r.length?function(t,e,n){I.setFromMatrixPosition(e.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const i=I.distanceTo(L),s=e.projectionMatrix.elements,r=n.projectionMatrix.elements,a=s[14]/(s[10]-1),o=s[14]/(s[10]+1),l=(s[9]+1)/s[5],c=(s[9]-1)/s[5],u=(s[8]-1)/s[0],h=(r[8]+1)/r[0],d=a*u,p=a*h,m=i/(-u+h),f=m*-u;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===s[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=a+m,n=o+m,s=d-f,r=p+(i-f),u=l*o/n*e,h=c*o/n*e;t.projectionMatrix.makePerspective(s,r,u,h,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(w,b,T):w.projectionMatrix.copy(b.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld));t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*Xn*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,w,s)},this.getCamera=function(){return w},this.getFoveation=function(){if(null!==h||null!==d)return o},this.setFoveation=function(t){o=t,null!==h&&(h.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==m.texture},this.getDepthSensingMesh=function(){return m.getMesh(w)};let U=null;const D=new ha;D.setAnimationLoop((function(e,s){if(c=s.getViewerPose(l||r),p=s,null!==c){const e=c.views;null!==d&&(t.setRenderTargetFramebuffer(v,d.framebuffer),t.setRenderTarget(v));let n=!1;e.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const s=e[i];let r=null;if(null!==d)r=d.getViewport(s);else{const e=u.getViewSubImage(h,s);r=e.viewport,0===i&&(t.setRenderTargetTextures(v,e.colorTexture,h.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(v))}let a=S[i];void 0===a&&(a=new Qr,a.layers.enable(i),a.viewport=new Si,S[i]=a),a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(s.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(r.x,r.y,r.width,r.height),0===i&&(w.matrix.copy(a.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),!0===n&&w.cameras.push(a)}const s=i.enabledFeatures;if(s&&s.includes("depth-sensing")){const n=u.getDepthInformation(e[0]);n&&n.isValid&&n.texture&&m.init(t,n,i.renderState)}}if(n.controllerAutoUpdate)for(let t=0;t<y.length;t++){const e=_[t],n=y[t];null!==e&&void 0!==n&&n.update(e,s,l||r)}U&&U(e,s),s.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:s}),p=null})),this.setAnimationLoop=function(t){U=t},this.dispose=function(){}}}const ec=new ys,nc=new ls;function ic(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,n(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,n(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,n(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,i.side===d&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,n(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),i.side===d&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,n(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,n(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const s=e.get(i),r=s.envMap,a=s.envMapRotation;r&&(t.envMap.value=r,ec.copy(a),ec.x*=-1,ec.y*=-1,ec.z*=-1,r.isCubeTexture&&!1===r.isRenderTargetTexture&&(ec.y*=-1,ec.z*=-1),t.envMapRotation.value.setFromMatrix4(nc.makeRotationFromEuler(ec)),t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,Xr(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,s,r,a,o){s.isMeshBasicMaterial||s.isMeshLambertMaterial?i(t,s):s.isMeshToonMaterial?(i(t,s),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,s)):s.isMeshPhongMaterial?(i(t,s),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,s)):s.isMeshStandardMaterial?(i(t,s),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform));t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform));e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,s),s.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform)));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===d&&t.clearcoatNormalScale.value.negate()));e.dispersion>0&&(t.dispersion.value=e.dispersion);e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform));e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,s,o)):s.isMeshMatcapMaterial?(i(t,s),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,s)):s.isMeshDepthMaterial?i(t,s):s.isMeshDistanceMaterial?(i(t,s),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,s)):s.isMeshNormalMaterial?i(t,s):s.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,s),s.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,s)):s.isPointsMaterial?function(t,e,i,s){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*s,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,s,r,a):s.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,s):s.isShadowMaterial?(t.color.value.copy(s.color),t.opacity.value=s.opacity):s.isShaderMaterial&&(s.uniformsNeedUpdate=!1)}}}function sc(t,e,n,i){let s={},r={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,i){const s=t.value,r=e+"_"+n;if(void 0===i[r])return i[r]="number"==typeof s||"boolean"==typeof s?s:s.clone(),!0;{const t=i[r];if("number"==typeof s||"boolean"==typeof s){if(t!==s)return i[r]=s,!0}else if(!1===t.equals(s))return t.copy(s),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function u(e){const n=e.target;n.removeEventListener("dispose",u);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),t.deleteBuffer(s[n.id]),delete s[n.id],delete r[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,h){let d=s[n.id];void 0===d&&(!function(t){const e=t.uniforms;let n=0;const i=16;for(let t=0,s=e.length;t<s;t++){const s=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=s.length;t<e;t++){const e=s[t],r=Array.isArray(e.value)?e.value:[e.value];for(let t=0,s=r.length;t<s;t++){const s=c(r[t]),a=n%i,o=a%s.boundary,l=a+o;n+=o,0!==l&&i-l<s.storage&&(n+=i-l),e.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=s.storage}}}const s=n%i;s>0&&(n+=i-s);t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const i=t.createBuffer(),s=e.__size,r=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,s,r),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),s[n.id]=d,n.addEventListener("dispose",u));const p=h.program;i.updateUBOMapping(n,p);const m=e.render.frame;r[n.id]!==m&&(!function(e){const n=s[e.id],i=e.uniforms,r=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=i.length;e<n;e++){const n=Array.isArray(i[e])?i[e]:[i[e]];for(let i=0,s=n.length;i<s;i++){const s=n[i];if(!0===l(s,e,i,r)){const e=s.__offset,n=Array.isArray(s.value)?s.value:[s.value];let i=0;for(let r=0;r<n.length;r++){const a=n[r],o=c(a);"number"==typeof a||"boolean"==typeof a?(s.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,e+i,s.__data)):a.isMatrix3?(s.__data[0]=a.elements[0],s.__data[1]=a.elements[1],s.__data[2]=a.elements[2],s.__data[3]=0,s.__data[4]=a.elements[3],s.__data[5]=a.elements[4],s.__data[6]=a.elements[5],s.__data[7]=0,s.__data[8]=a.elements[6],s.__data[9]=a.elements[7],s.__data[10]=a.elements[8],s.__data[11]=0):(a.toArray(s.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,s.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),r[n.id]=m)},dispose:function(){for(const e in s)t.deleteBuffer(s[e]);a=[],s={},r={}}}}class rc{constructor(e={}){const{canvas:n=oi(),context:i=null,depth:s=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:p=!1}=e;let m;if(this.isWebGLRenderer=!0,null!==i){if("undefined"!=typeof WebGLRenderingContext&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=i.getContextAttributes().alpha}else m=a;const f=new Uint32Array(4),g=new Int32Array(4);let v=null,y=null;const _=[],x=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=$e,this.toneMapping=J,this.toneMappingExposure=1;const M=this;let b=!1,T=0,S=0,w=null,E=-1,A=null;const N=new Si,C=new Si;let R=null;const I=new tr(0);let L=0,P=n.width,U=n.height,D=1,O=null,z=null;const V=new Si(0,0,P,U),F=new Si(0,0,P,U);let B=!1;const k=new ua;let H=!1,G=!1;const W=new ls,j=new ls,X=new Li,q=new Si,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Z=!1;function $(){return null===w?D:1}let K,Q,tt,et,nt,it,st,rt,at,ot,lt,ct,ut,ht,dt,pt,mt,ft,gt,vt,yt,_t,xt,Mt,bt=i;function Tt(t,e){return n.getContext(t,e)}try{const e={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:p};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${t}`),n.addEventListener("webglcontextlost",Nt,!1),n.addEventListener("webglcontextrestored",Rt,!1),n.addEventListener("webglcontextcreationerror",Lt,!1),null===bt){const t="webgl2";if(bt=Tt(t,e),null===bt)throw Tt(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function wt(){K=new Xa(bt),K.init(),_t=new Yl(bt,K),Q=new Ta(bt,K,e,_t),tt=new Wl(bt),Q.reverseDepthBuffer&&tt.buffers.depth.setReversed(!0),et=new Za(bt),nt=new Cl,it=new ql(bt,K,tt,nt,Q,_t,et),st=new wa(M),rt=new ja(M),at=new da(bt),xt=new Ma(bt,at),ot=new qa(bt,at,et,xt),lt=new Ja(bt,ot,at,et),gt=new $a(bt,Q,it),pt=new Sa(nt),ct=new Nl(M,st,rt,K,Q,xt,pt),ut=new ic(M,nt),ht=new Pl,dt=new Fl(K),ft=new xa(M,st,rt,tt,lt,m,l),mt=new Hl(M,lt,Q),Mt=new sc(bt,et,Q,tt),vt=new ba(bt,K,et),yt=new Ya(bt,K,et),et.programs=ct.programs,M.capabilities=Q,M.extensions=K,M.properties=nt,M.renderLists=ht,M.shadowMap=mt,M.state=tt,M.info=et}wt();const At=new tc(M,bt);function Nt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Rt(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const t=et.autoReset,e=mt.enabled,n=mt.autoUpdate,i=mt.needsUpdate,s=mt.type;wt(),et.autoReset=t,mt.enabled=e,mt.autoUpdate=n,mt.needsUpdate=i,mt.type=s}function Lt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function zt(t){const e=t.target;e.removeEventListener("dispose",zt),function(t){(function(t){const e=nt.get(t).programs;void 0!==e&&(e.forEach((function(t){ct.releaseProgram(t)})),t.isShaderMaterial&&ct.releaseShaderCache(t))})(t),nt.remove(t)}(e)}function Vt(t,e,n){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=d,t.needsUpdate=!0,Jt(t,e,n),t.side=h,t.needsUpdate=!0,Jt(t,e,n),t.side=2):Jt(t,e,n)}this.xr=At,this.getContext=function(){return bt},this.getContextAttributes=function(){return bt.getContextAttributes()},this.forceContextLoss=function(){const t=K.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=K.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(t){void 0!==t&&(D=t,this.setSize(P,U,!1))},this.getSize=function(t){return t.set(P,U)},this.setSize=function(t,e,i=!0){At.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,U=e,n.width=Math.floor(t*D),n.height=Math.floor(e*D),!0===i&&(n.style.width=t+"px",n.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(t){return t.set(P*D,U*D).floor()},this.setDrawingBufferSize=function(t,e,i){P=t,U=e,D=i,n.width=Math.floor(t*i),n.height=Math.floor(e*i),this.setViewport(0,0,t,e)},this.getCurrentViewport=function(t){return t.copy(N)},this.getViewport=function(t){return t.copy(V)},this.setViewport=function(t,e,n,i){t.isVector4?V.set(t.x,t.y,t.z,t.w):V.set(t,e,n,i),tt.viewport(N.copy(V).multiplyScalar(D).round())},this.getScissor=function(t){return t.copy(F)},this.setScissor=function(t,e,n,i){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,n,i),tt.scissor(C.copy(F).multiplyScalar(D).round())},this.getScissorTest=function(){return B},this.setScissorTest=function(t){tt.setScissorTest(B=t)},this.setOpaqueSort=function(t){O=t},this.setTransparentSort=function(t){z=t},this.getClearColor=function(t){return t.copy(ft.getClearColor())},this.setClearColor=function(){ft.setClearColor.apply(ft,arguments)},this.getClearAlpha=function(){return ft.getClearAlpha()},this.setClearAlpha=function(){ft.setClearAlpha.apply(ft,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==w){const e=w.texture.format;t=e===$t||e===Yt||e===Xt}if(t){const t=w.texture.type,e=t===Et||t===It||t===Ct||t===Ot||t===Ut||t===Dt,n=ft.getClearColor(),i=ft.getClearAlpha(),s=n.r,r=n.g,a=n.b;e?(f[0]=s,f[1]=r,f[2]=a,f[3]=i,bt.clearBufferuiv(bt.COLOR,0,f)):(g[0]=s,g[1]=r,g[2]=a,g[3]=i,bt.clearBufferiv(bt.COLOR,0,g))}else i|=bt.COLOR_BUFFER_BIT}e&&(i|=bt.DEPTH_BUFFER_BIT,bt.clearDepth(this.capabilities.reverseDepthBuffer?0:1)),n&&(i|=bt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),bt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Nt,!1),n.removeEventListener("webglcontextrestored",Rt,!1),n.removeEventListener("webglcontextcreationerror",Lt,!1),ht.dispose(),dt.dispose(),nt.dispose(),st.dispose(),rt.dispose(),lt.dispose(),xt.dispose(),Mt.dispose(),ct.dispose(),At.dispose(),At.removeEventListener("sessionstart",Bt),At.removeEventListener("sessionend",kt),Ht.stop()},this.renderBufferDirect=function(t,e,n,i,s,r){null===e&&(e=Y);const a=s.isMesh&&s.matrixWorld.determinant()<0,o=function(t,e,n,i,s){!0!==e.isScene&&(e=Y);it.resetTextureUnits();const r=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===w?M.outputColorSpace:!0===w.isXRRenderTarget?w.texture.colorSpace:Je,l=(i.isMeshStandardMaterial?rt:st).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let m=J;i.toneMapped&&(null!==w&&!0!==w.isXRRenderTarget||(m=M.toneMapping));const f=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==f?f.length:0,v=nt.get(i),_=y.state.lights;if(!0===H&&(!0===G||t!==A)){const e=t===A&&i.id===E;pt.setState(i,t,e)}let x=!1;i.version===v.__version?v.needsLights&&v.lightsStateVersion!==_.state.version||v.outputColorSpace!==o||s.isBatchedMesh&&!1===v.batching?x=!0:s.isBatchedMesh||!0!==v.batching?s.isBatchedMesh&&!0===v.batchingColor&&null===s.colorTexture||s.isBatchedMesh&&!1===v.batchingColor&&null!==s.colorTexture||s.isInstancedMesh&&!1===v.instancing?x=!0:s.isInstancedMesh||!0!==v.instancing?s.isSkinnedMesh&&!1===v.skinning?x=!0:s.isSkinnedMesh||!0!==v.skinning?s.isInstancedMesh&&!0===v.instancingColor&&null===s.instanceColor||s.isInstancedMesh&&!1===v.instancingColor&&null!==s.instanceColor||s.isInstancedMesh&&!0===v.instancingMorph&&null===s.morphTexture||s.isInstancedMesh&&!1===v.instancingMorph&&null!==s.morphTexture||v.envMap!==l||!0===i.fog&&v.fog!==r?x=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===pt.numPlanes&&v.numIntersection===pt.numIntersection?(v.vertexAlphas!==c||v.vertexTangents!==u||v.morphTargets!==h||v.morphNormals!==d||v.morphColors!==p||v.toneMapping!==m||v.morphTargetsCount!==g)&&(x=!0):x=!0:x=!0:x=!0:x=!0:(x=!0,v.__version=i.version);let b=v.currentProgram;!0===x&&(b=Jt(i,e,s));let T=!1,S=!1,N=!1;const C=b.getUniforms(),R=v.uniforms;tt.useProgram(b.program)&&(T=!0,S=!0,N=!0);i.id!==E&&(E=i.id,S=!0);if(T||A!==t){Q.reverseDepthBuffer?(W.copy(t.projectionMatrix),function(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}(W),function(t){const e=t.elements;-1===e[11]?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}(W),C.setValue(bt,"projectionMatrix",W)):C.setValue(bt,"projectionMatrix",t.projectionMatrix),C.setValue(bt,"viewMatrix",t.matrixWorldInverse);const e=C.map.cameraPosition;void 0!==e&&e.setValue(bt,X.setFromMatrixPosition(t.matrixWorld)),Q.logarithmicDepthBuffer&&C.setValue(bt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&C.setValue(bt,"isOrthographic",!0===t.isOrthographicCamera),A!==t&&(A=t,S=!0,N=!0)}if(s.isSkinnedMesh){C.setOptional(bt,s,"bindMatrix"),C.setOptional(bt,s,"bindMatrixInverse");const t=s.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),C.setValue(bt,"boneTexture",t.boneTexture,it))}s.isBatchedMesh&&(C.setOptional(bt,s,"batchingTexture"),C.setValue(bt,"batchingTexture",s._matricesTexture,it),C.setOptional(bt,s,"batchingIdTexture"),C.setValue(bt,"batchingIdTexture",s._indirectTexture,it),C.setOptional(bt,s,"batchingColorTexture"),null!==s._colorsTexture&&C.setValue(bt,"batchingColorTexture",s._colorsTexture,it));const I=n.morphAttributes;void 0===I.position&&void 0===I.normal&&void 0===I.color||gt.update(s,n,b);(S||v.receiveShadow!==s.receiveShadow)&&(v.receiveShadow=s.receiveShadow,C.setValue(bt,"receiveShadow",s.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(R.envMap.value=l,R.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);i.isMeshStandardMaterial&&null===i.envMap&&null!==e.environment&&(R.envMapIntensity.value=e.environmentIntensity);S&&(C.setValue(bt,"toneMappingExposure",M.toneMappingExposure),v.needsLights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(R,N),r&&!0===i.fog&&ut.refreshFogUniforms(R,r),ut.refreshMaterialUniforms(R,i,D,U,y.state.transmissionRenderTarget[t.id]),sl.upload(bt,Kt(v),R,it));i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(sl.upload(bt,Kt(v),R,it),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&C.setValue(bt,"center",s.center);if(C.setValue(bt,"modelViewMatrix",s.modelViewMatrix),C.setValue(bt,"normalMatrix",s.normalMatrix),C.setValue(bt,"modelMatrix",s.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];Mt.update(n,b),Mt.bind(n,b)}}return b}(t,e,n,i,s);tt.setMaterial(i,a);let l=n.index,c=1;if(!0===i.wireframe){if(l=ot.getWireframeAttribute(n),void 0===l)return;c=2}const u=n.drawRange,h=n.attributes.position;let d=u.start*c,p=(u.start+u.count)*c;null!==r&&(d=Math.max(d,r.start*c),p=Math.min(p,(r.start+r.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=h&&(d=Math.max(d,0),p=Math.min(p,h.count));const m=p-d;if(m<0||m===1/0)return;let f;xt.setup(s,i,o,n,l);let g=vt;if(null!==l&&(f=at.get(l),g=yt,g.setIndex(f)),s.isMesh)!0===i.wireframe?(tt.setLineWidth(i.wireframeLinewidth*$()),g.setMode(bt.LINES)):g.setMode(bt.TRIANGLES);else if(s.isLine){let t=i.linewidth;void 0===t&&(t=1),tt.setLineWidth(t*$()),s.isLineSegments?g.setMode(bt.LINES):s.isLineLoop?g.setMode(bt.LINE_LOOP):g.setMode(bt.LINE_STRIP)}else s.isPoints?g.setMode(bt.POINTS):s.isSprite&&g.setMode(bt.TRIANGLES);if(s.isBatchedMesh)if(null!==s._multiDrawInstances)g.renderMultiDrawInstances(s._multiDrawStarts,s._multiDrawCounts,s._multiDrawCount,s._multiDrawInstances);else if(K.get("WEBGL_multi_draw"))g.renderMultiDraw(s._multiDrawStarts,s._multiDrawCounts,s._multiDrawCount);else{const t=s._multiDrawStarts,e=s._multiDrawCounts,n=s._multiDrawCount,r=l?at.get(l).bytesPerElement:1,a=nt.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)a.setValue(bt,"_gl_DrawID",i),g.render(t[i]/r,e[i])}else if(s.isInstancedMesh)g.renderInstances(d,m,s.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);g.renderInstances(d,m,e)}else g.render(d,m)},this.compile=function(t,e,n=null){null===n&&(n=t),y=dt.get(n),y.init(e),x.push(y),n.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(y.pushLight(t),t.castShadow&&y.pushShadow(t))})),t!==n&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(y.pushLight(t),t.castShadow&&y.pushShadow(t))})),y.setupLights();const i=new Set;return t.traverse((function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let s=0;s<e.length;s++){const r=e[s];Vt(r,n,t),i.add(r)}else Vt(e,n,t),i.add(e)})),x.pop(),y=null,i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise((e=>{function n(){i.forEach((function(t){nt.get(t).currentProgram.isReady()&&i.delete(t)})),0!==i.size?setTimeout(n,10):e(t)}null!==K.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let Ft=null;function Bt(){Ht.stop()}function kt(){Ht.start()}const Ht=new ha;function Gt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)y.pushLight(t),t.castShadow&&y.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||k.intersectsSprite(t)){i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=lt.update(t),s=t.material;s.visible&&v.push(t,e,s,n,q.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||k.intersectsObject(t))){const e=lt.update(t),s=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),q.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),q.copy(e.boundingSphere.center)),q.applyMatrix4(t.matrixWorld).applyMatrix4(j)),Array.isArray(s)){const i=e.groups;for(let r=0,a=i.length;r<a;r++){const a=i[r],o=s[a.materialIndex];o&&o.visible&&v.push(t,e,o,n,q.z,a)}}else s.visible&&v.push(t,e,s,n,q.z,null)}const s=t.children;for(let t=0,r=s.length;t<r;t++)Gt(s[t],e,n,i)}function Wt(t,e,n,i){const s=t.opaque,r=t.transmissive,a=t.transparent;y.setupLightsView(n),!0===H&&pt.setGlobalState(M.clippingPlanes,n),i&&tt.viewport(N.copy(i)),s.length>0&&qt(s,e,n),r.length>0&&qt(r,e,n),a.length>0&&qt(a,e,n),tt.buffers.depth.setTest(!0),tt.buffers.depth.setMask(!0),tt.buffers.color.setMask(!0),tt.setPolygonOffset(!1)}function jt(t,e,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===y.state.transmissionRenderTarget[i.id]&&(y.state.transmissionRenderTarget[i.id]=new Ei(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")||K.has("EXT_color_buffer_float")?Pt:Et,minFilter:St,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:mi.workingColorSpace}));const s=y.state.transmissionRenderTarget[i.id],a=i.viewport||N;s.setSize(a.z,a.w);const o=M.getRenderTarget();M.setRenderTarget(s),M.getClearColor(I),L=M.getClearAlpha(),L<1&&M.setClearColor(16777215,.5),M.clear(),Z&&ft.render(n);const l=M.toneMapping;M.toneMapping=J;const c=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),y.setupLightsView(i),!0===H&&pt.setGlobalState(M.clippingPlanes,i),qt(t,n,i),it.updateMultisampleRenderTarget(s),it.updateRenderTargetMipmap(s),!1===K.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let s=0,r=e.length;s<r;s++){const r=e[s],a=r.object,o=r.geometry,l=r.material,c=r.group;if(2===l.side&&a.layers.test(i.layers)){const e=l.side;l.side=d,l.needsUpdate=!0,Zt(a,n,i,o,l,c),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(it.updateMultisampleRenderTarget(s),it.updateRenderTargetMipmap(s))}M.setRenderTarget(o),M.setClearColor(I,L),void 0!==c&&(i.viewport=c),M.toneMapping=l}function qt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let s=0,r=t.length;s<r;s++){const r=t[s],a=r.object,o=r.geometry,l=null===i?r.material:i,c=r.group;a.layers.test(n.layers)&&Zt(a,e,n,o,l,c)}}function Zt(t,e,n,i,s,r){t.onBeforeRender(M,e,n,i,s,r),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),s.onBeforeRender(M,e,n,i,t,r),!0===s.transparent&&2===s.side&&!1===s.forceSinglePass?(s.side=d,s.needsUpdate=!0,M.renderBufferDirect(n,e,i,s,t,r),s.side=h,s.needsUpdate=!0,M.renderBufferDirect(n,e,i,s,t,r),s.side=2):M.renderBufferDirect(n,e,i,s,t,r),t.onAfterRender(M,e,n,i,s,r)}function Jt(t,e,n){!0!==e.isScene&&(e=Y);const i=nt.get(t),s=y.state.lights,r=y.state.shadowsArray,a=s.state.version,o=ct.getParameters(t,s.state,r,e,n),l=ct.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?rt:st).get(t.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===c&&(t.addEventListener("dispose",zt),c=new Map,i.programs=c);let u=c.get(l);if(void 0!==u){if(i.currentProgram===u&&i.lightsStateVersion===a)return Qt(t,o),u}else o.uniforms=ct.getUniforms(t),t.onBuild(n,o,M),t.onBeforeCompile(o,M),u=ct.acquireProgram(o,l),c.set(l,u),i.uniforms=o.uniforms;const h=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=pt.uniform),Qt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(h.ambientLightColor.value=s.state.ambient,h.lightProbe.value=s.state.probe,h.directionalLights.value=s.state.directional,h.directionalLightShadows.value=s.state.directionalShadow,h.spotLights.value=s.state.spot,h.spotLightShadows.value=s.state.spotShadow,h.rectAreaLights.value=s.state.rectArea,h.ltc_1.value=s.state.rectAreaLTC1,h.ltc_2.value=s.state.rectAreaLTC2,h.pointLights.value=s.state.point,h.pointLightShadows.value=s.state.pointShadow,h.hemisphereLights.value=s.state.hemi,h.directionalShadowMap.value=s.state.directionalShadowMap,h.directionalShadowMatrix.value=s.state.directionalShadowMatrix,h.spotShadowMap.value=s.state.spotShadowMap,h.spotLightMatrix.value=s.state.spotLightMatrix,h.spotLightMap.value=s.state.spotLightMap,h.pointShadowMap.value=s.state.pointShadowMap,h.pointShadowMatrix.value=s.state.pointShadowMatrix),i.currentProgram=u,i.uniformsList=null,u}function Kt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=sl.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function Qt(t,e){const n=nt.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Ht.setAnimationLoop((function(t){Ft&&Ft(t)})),"undefined"!=typeof self&&Ht.setContext(self),this.setAnimationLoop=function(t){Ft=t,At.setAnimationLoop(t),null===t?Ht.stop():Ht.start()},At.addEventListener("sessionstart",Bt),At.addEventListener("sessionend",kt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===At.enabled&&!0===At.isPresenting&&(!0===At.cameraAutoUpdate&&At.updateCamera(e),e=At.getCamera()),!0===t.isScene&&t.onBeforeRender(M,t,e,w),y=dt.get(t,x.length),y.init(e),x.push(y),j.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),k.setFromProjectionMatrix(j),G=this.localClippingEnabled,H=pt.init(this.clippingPlanes,G),v=ht.get(t,_.length),v.init(),_.push(v),!0===At.enabled&&!0===At.isPresenting){const t=M.xr.getDepthSensingMesh();null!==t&&Gt(t,e,-1/0,M.sortObjects)}Gt(t,e,0,M.sortObjects),v.finish(),!0===M.sortObjects&&v.sort(O,z),Z=!1===At.enabled||!1===At.isPresenting||!1===At.hasDepthSensing(),Z&&ft.addToRenderList(v,t),this.info.render.frame++,!0===H&&pt.beginShadows();const n=y.state.shadowsArray;mt.render(n,t,e),!0===H&&pt.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=v.opaque,s=v.transmissive;if(y.setupLights(),e.isArrayCamera){const n=e.cameras;if(s.length>0)for(let e=0,r=n.length;e<r;e++){jt(i,s,t,n[e])}Z&&ft.render(t);for(let e=0,i=n.length;e<i;e++){const i=n[e];Wt(v,t,i,i.viewport)}}else s.length>0&&jt(i,s,t,e),Z&&ft.render(t),Wt(v,t,e);null!==w&&(it.updateMultisampleRenderTarget(w),it.updateRenderTargetMipmap(w)),!0===t.isScene&&t.onAfterRender(M,t,e),xt.resetDefaultState(),E=-1,A=null,x.pop(),x.length>0?(y=x[x.length-1],!0===H&&pt.setGlobalState(M.clippingPlanes,y.state.camera)):y=null,_.pop(),v=_.length>0?_[_.length-1]:null},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(t,e,n){nt.get(t.texture).__webglTexture=e,nt.get(t.depthTexture).__webglTexture=n;const i=nt.get(t);i.__hasExternalTextures=!0,i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===K.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(t,e){const n=nt.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){w=t,T=e,S=n;let i=!0,s=null,r=!1,a=!1;if(t){const o=nt.get(t);if(void 0!==o.__useDefaultFramebuffer)tt.bindFramebuffer(bt.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)it.setupRenderTarget(t);else if(o.__hasExternalTextures)it.rebindTextures(t,nt.get(t.texture).__webglTexture,nt.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&nt.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");it.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const c=nt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(s=Array.isArray(c[e])?c[e][n]:c[e],r=!0):s=t.samples>0&&!1===it.useMultisampledRTT(t)?nt.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,N.copy(t.viewport),C.copy(t.scissor),R=t.scissorTest}else N.copy(V).multiplyScalar(D).floor(),C.copy(F).multiplyScalar(D).floor(),R=B;if(tt.bindFramebuffer(bt.FRAMEBUFFER,s)&&i&&tt.drawBuffers(t,s),tt.viewport(N),tt.scissor(C),tt.setScissorTest(R),r){const i=nt.get(t.texture);bt.framebufferTexture2D(bt.FRAMEBUFFER,bt.COLOR_ATTACHMENT0,bt.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(a){const i=nt.get(t.texture),s=e||0;bt.framebufferTextureLayer(bt.FRAMEBUFFER,bt.COLOR_ATTACHMENT0,i.__webglTexture,n||0,s)}E=-1},this.readRenderTargetPixels=function(t,e,n,i,s,r,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){tt.bindFramebuffer(bt.FRAMEBUFFER,o);try{const a=t.texture,o=a.format,l=a.type;if(!Q.textureFormatReadable(o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!Q.textureTypeReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-s&&bt.readPixels(e,n,i,s,_t.convert(o),_t.convert(l),r)}finally{const t=null!==w?nt.get(w).__webglFramebuffer:null;tt.bindFramebuffer(bt.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,i,s,r,a){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){const a=t.texture,l=a.format,c=a.type;if(!Q.textureFormatReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Q.textureTypeReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(e>=0&&e<=t.width-i&&n>=0&&n<=t.height-s){tt.bindFramebuffer(bt.FRAMEBUFFER,o);const t=bt.createBuffer();bt.bindBuffer(bt.PIXEL_PACK_BUFFER,t),bt.bufferData(bt.PIXEL_PACK_BUFFER,r.byteLength,bt.STREAM_READ),bt.readPixels(e,n,i,s,_t.convert(l),_t.convert(c),0);const a=null!==w?nt.get(w).__webglFramebuffer:null;tt.bindFramebuffer(bt.FRAMEBUFFER,a);const u=bt.fenceSync(bt.SYNC_GPU_COMMANDS_COMPLETE,0);return bt.flush(),await function(t,e,n){return new Promise((function(i,s){setTimeout((function r(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:s();break;case t.TIMEOUT_EXPIRED:setTimeout(r,n);break;default:i()}}),n)}))}(bt,u,4),bt.bindBuffer(bt.PIXEL_PACK_BUFFER,t),bt.getBufferSubData(bt.PIXEL_PACK_BUFFER,0,r),bt.deleteBuffer(t),bt.deleteSync(u),r}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,n=0){!0!==t.isTexture&&(ci("WebGLRenderer: copyFramebufferToTexture function signature has changed."),e=arguments[0]||null,t=arguments[1]);const i=Math.pow(2,-n),s=Math.floor(t.image.width*i),r=Math.floor(t.image.height*i),a=null!==e?e.x:0,o=null!==e?e.y:0;it.setTexture2D(t,0),bt.copyTexSubImage2D(bt.TEXTURE_2D,n,0,0,a,o,s,r),tt.unbindTexture()},this.copyTextureToTexture=function(t,e,n=null,i=null,s=0){let r,a,o,l,c,u;!0!==t.isTexture&&(ci("WebGLRenderer: copyTextureToTexture function signature has changed."),i=arguments[0]||null,t=arguments[1],e=arguments[2],s=arguments[3]||0,n=null),null!==n?(r=n.max.x-n.min.x,a=n.max.y-n.min.y,o=n.min.x,l=n.min.y):(r=t.image.width,a=t.image.height,o=0,l=0),null!==i?(c=i.x,u=i.y):(c=0,u=0);const h=_t.convert(e.format),d=_t.convert(e.type);it.setTexture2D(e,0),bt.pixelStorei(bt.UNPACK_FLIP_Y_WEBGL,e.flipY),bt.pixelStorei(bt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),bt.pixelStorei(bt.UNPACK_ALIGNMENT,e.unpackAlignment);const p=bt.getParameter(bt.UNPACK_ROW_LENGTH),m=bt.getParameter(bt.UNPACK_IMAGE_HEIGHT),f=bt.getParameter(bt.UNPACK_SKIP_PIXELS),g=bt.getParameter(bt.UNPACK_SKIP_ROWS),v=bt.getParameter(bt.UNPACK_SKIP_IMAGES),y=t.isCompressedTexture?t.mipmaps[s]:t.image;bt.pixelStorei(bt.UNPACK_ROW_LENGTH,y.width),bt.pixelStorei(bt.UNPACK_IMAGE_HEIGHT,y.height),bt.pixelStorei(bt.UNPACK_SKIP_PIXELS,o),bt.pixelStorei(bt.UNPACK_SKIP_ROWS,l),t.isDataTexture?bt.texSubImage2D(bt.TEXTURE_2D,s,c,u,r,a,h,d,y.data):t.isCompressedTexture?bt.compressedTexSubImage2D(bt.TEXTURE_2D,s,c,u,y.width,y.height,h,y.data):bt.texSubImage2D(bt.TEXTURE_2D,s,c,u,r,a,h,d,y),bt.pixelStorei(bt.UNPACK_ROW_LENGTH,p),bt.pixelStorei(bt.UNPACK_IMAGE_HEIGHT,m),bt.pixelStorei(bt.UNPACK_SKIP_PIXELS,f),bt.pixelStorei(bt.UNPACK_SKIP_ROWS,g),bt.pixelStorei(bt.UNPACK_SKIP_IMAGES,v),0===s&&e.generateMipmaps&&bt.generateMipmap(bt.TEXTURE_2D),tt.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n=null,i=null,s=0){let r,a,o,l,c,u,h,d,p;!0!==t.isTexture&&(ci("WebGLRenderer: copyTextureToTexture3D function signature has changed."),n=arguments[0]||null,i=arguments[1]||null,t=arguments[2],e=arguments[3],s=arguments[4]||0);const m=t.isCompressedTexture?t.mipmaps[s]:t.image;null!==n?(r=n.max.x-n.min.x,a=n.max.y-n.min.y,o=n.max.z-n.min.z,l=n.min.x,c=n.min.y,u=n.min.z):(r=m.width,a=m.height,o=m.depth,l=0,c=0,u=0),null!==i?(h=i.x,d=i.y,p=i.z):(h=0,d=0,p=0);const f=_t.convert(e.format),g=_t.convert(e.type);let v;if(e.isData3DTexture)it.setTexture3D(e,0),v=bt.TEXTURE_3D;else{if(!e.isDataArrayTexture&&!e.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");it.setTexture2DArray(e,0),v=bt.TEXTURE_2D_ARRAY}bt.pixelStorei(bt.UNPACK_FLIP_Y_WEBGL,e.flipY),bt.pixelStorei(bt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),bt.pixelStorei(bt.UNPACK_ALIGNMENT,e.unpackAlignment);const y=bt.getParameter(bt.UNPACK_ROW_LENGTH),_=bt.getParameter(bt.UNPACK_IMAGE_HEIGHT),x=bt.getParameter(bt.UNPACK_SKIP_PIXELS),M=bt.getParameter(bt.UNPACK_SKIP_ROWS),b=bt.getParameter(bt.UNPACK_SKIP_IMAGES);bt.pixelStorei(bt.UNPACK_ROW_LENGTH,m.width),bt.pixelStorei(bt.UNPACK_IMAGE_HEIGHT,m.height),bt.pixelStorei(bt.UNPACK_SKIP_PIXELS,l),bt.pixelStorei(bt.UNPACK_SKIP_ROWS,c),bt.pixelStorei(bt.UNPACK_SKIP_IMAGES,u),t.isDataTexture||t.isData3DTexture?bt.texSubImage3D(v,s,h,d,p,r,a,o,f,g,m.data):e.isCompressedArrayTexture?bt.compressedTexSubImage3D(v,s,h,d,p,r,a,o,f,m.data):bt.texSubImage3D(v,s,h,d,p,r,a,o,f,g,m),bt.pixelStorei(bt.UNPACK_ROW_LENGTH,y),bt.pixelStorei(bt.UNPACK_IMAGE_HEIGHT,_),bt.pixelStorei(bt.UNPACK_SKIP_PIXELS,x),bt.pixelStorei(bt.UNPACK_SKIP_ROWS,M),bt.pixelStorei(bt.UNPACK_SKIP_IMAGES,b),0===s&&e.generateMipmaps&&bt.generateMipmap(v),tt.unbindTexture()},this.initRenderTarget=function(t){void 0===nt.get(t).__webglFramebuffer&&it.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?it.setTextureCube(t,0):t.isData3DTexture?it.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?it.setTexture2DArray(t,0):it.setTexture2D(t,0),tt.unbindTexture()},this.resetState=function(){T=0,S=0,w=null,tt.reset(),xt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Bn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===Ke?"display-p3":"srgb",e.unpackColorSpace=mi.workingColorSpace===Qe?"display-p3":"srgb"}}class ac{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new tr(t),this.density=e}clone(){return new ac(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class oc{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new tr(t),this.near=e,this.far=n}clone(){return new oc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class lc extends Ds{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ys,this.environmentIntensity=1,this.environmentRotation=new ys,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class cc{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Cn,this.updateRanges=[],this.version=0,this.uuid=qn()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const uc=new Li;class hc{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)uc.fromBufferAttribute(this,e),uc.applyMatrix4(t),this.setXYZ(e,uc.x,uc.y,uc.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)uc.fromBufferAttribute(this,e),uc.applyNormalMatrix(t),this.setXYZ(e,uc.x,uc.y,uc.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)uc.fromBufferAttribute(this,e),uc.transformDirection(t),this.setXYZ(e,uc.x,uc.y,uc.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Kn(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=Kn(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Kn(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Kn(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Kn(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Jn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Jn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Jn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Jn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=Kn(e,this.array),n=Kn(n,this.array),i=Kn(i,this.array),s=Kn(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new dr(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new hc(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class dc extends ir{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new tr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let pc;const mc=new Li,fc=new Li,gc=new Li,vc=new ti,yc=new ti,_c=new ls,xc=new Li,Mc=new Li,bc=new Li,Tc=new ti,Sc=new ti,wc=new ti;class Ec extends Ds{constructor(t=new dc){if(super(),this.isSprite=!0,this.type="Sprite",void 0===pc){pc=new Cr;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new cc(t,5);pc.setIndex([0,1,2,0,2,3]),pc.setAttribute("position",new hc(e,3,0,!1)),pc.setAttribute("uv",new hc(e,2,3,!1))}this.geometry=pc,this.material=t,this.center=new ti(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fc.setFromMatrixScale(this.matrixWorld),_c.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),gc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&fc.multiplyScalar(-gc.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const r=this.center;Ac(xc.set(-.5,-.5,0),gc,r,fc,i,s),Ac(Mc.set(.5,-.5,0),gc,r,fc,i,s),Ac(bc.set(.5,.5,0),gc,r,fc,i,s),Tc.set(0,0),Sc.set(1,0),wc.set(1,1);let a=t.ray.intersectTriangle(xc,Mc,bc,!1,mc);if(null===a&&(Ac(Mc.set(-.5,.5,0),gc,r,fc,i,s),Sc.set(0,1),a=t.ray.intersectTriangle(xc,bc,Mc,!1,mc),null===a))return;const o=t.ray.origin.distanceTo(mc);o<t.near||o>t.far||e.push({distance:o,point:mc.clone(),uv:Zs.getInterpolation(mc,xc,Mc,bc,Tc,Sc,wc,new ti),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Ac(t,e,n,i,s,r){vc.subVectors(t,n).addScalar(.5).multiply(i),void 0!==s?(yc.x=r*vc.x-s*vc.y,yc.y=s*vc.x+r*vc.y):yc.copy(vc),t.copy(e),t.x+=yc.x,t.y+=yc.y,t.applyMatrix4(_c)}const Nc=new Li,Cc=new Li;class Rc extends Ds{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance,n.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let s;for(s=0;s<i.length&&!(e<i[s].distance);s++);return i.splice(s,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const t=e.splice(n,1);return this.remove(t[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let i=e[n].distance;if(e[n].object.visible&&(i-=i*e[n].hysteresis),t<i)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Nc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Nc);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Nc.setFromMatrixPosition(t.matrixWorld),Cc.setFromMatrixPosition(this.matrixWorld);const n=Nc.distanceTo(Cc)/t.zoom;let i,s;for(e[0].object.visible=!0,i=1,s=e.length;i<s;i++){let t=e[i].distance;if(e[i].object.visible&&(t-=t*e[i].hysteresis),!(n>=t))break;e[i-1].object.visible=!1,e[i].object.visible=!0}for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance,hysteresis:i.hysteresis})}return e}}const Ic=new Li,Lc=new Si,Pc=new Si,Uc=new Li,Dc=new ls,Oc=new Li,zc=new Qi,Vc=new ls,Fc=new os;class Bc extends kr{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=rt,this.bindMatrix=new ls,this.bindMatrixInverse=new ls,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;null===this.boundingBox&&(this.boundingBox=new Di),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Oc),this.boundingBox.expandByPoint(Oc)}computeBoundingSphere(){const t=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Qi),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Oc),this.boundingSphere.expandByPoint(Oc)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),zc.copy(this.boundingSphere),zc.applyMatrix4(i),!1!==t.ray.intersectsSphere(zc)&&(Vc.copy(i).invert(),Fc.copy(t.ray).applyMatrix4(Vc),null!==this.boundingBox&&!1===Fc.intersectsBox(this.boundingBox)||this._computeIntersections(t,e,Fc)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Si,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===rt?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===at?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Lc.fromBufferAttribute(i.attributes.skinIndex,t),Pc.fromBufferAttribute(i.attributes.skinWeight,t),Ic.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Pc.getComponent(t);if(0!==i){const s=Lc.getComponent(t);Dc.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),e.addScaledVector(Uc.copy(Ic).applyMatrix4(Dc),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}class kc extends Ds{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Hc extends Ti{constructor(t=null,e=1,n=1,i,s,r,a,o,l=1003,c=1003,u,h){super(null,r,a,o,l,c,i,s,u,h),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Gc=new ls,Wc=new ls;class jc{constructor(t=[],e=[]){this.uuid=qn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new ls)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new ls;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,s=t.length;i<s;i++){const s=t[i]?t[i].matrixWorld:Wc;Gc.multiplyMatrices(s,e[i]),Gc.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new jc(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Hc(e,t,t,Bt,Lt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let s=e[i];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),s=new kc),this.bones.push(s),this.boneInverses.push((new ls).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const s=e[i];t.bones.push(s.uuid);const r=n[i];t.boneInverses.push(r.toArray())}return t}}class Xc extends dr{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const qc=new ls,Yc=new ls,Zc=[],$c=new Di,Jc=new ls,Kc=new kr,Qc=new Qi;class tu extends kr{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Xc(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let t=0;t<n;t++)this.setMatrixAt(t,Jc)}computeBoundingBox(){const t=this.geometry,e=this.count;null===this.boundingBox&&(this.boundingBox=new Di),null===t.boundingBox&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,qc),$c.copy(t.boundingBox).applyMatrix4(qc),this.boundingBox.union($c)}computeBoundingSphere(){const t=this.geometry,e=this.count;null===this.boundingSphere&&(this.boundingSphere=new Qi),null===t.boundingSphere&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,qc),Qc.copy(t.boundingSphere).applyMatrix4(qc),this.boundingSphere.union(Qc)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.morphTexture&&(this.morphTexture=t.morphTexture.clone()),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,s=t*(n.length+1)+1;for(let t=0;t<n.length;t++)n[t]=i[s+t]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Kc.geometry=this.geometry,Kc.material=this.material,void 0!==Kc.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),Qc.copy(this.boundingSphere),Qc.applyMatrix4(n),!1!==t.ray.intersectsSphere(Qc)))for(let s=0;s<i;s++){this.getMatrixAt(s,qc),Yc.multiplyMatrices(n,qc),Kc.matrixWorld=Yc,Kc.raycast(t,Zc);for(let t=0,n=Zc.length;t<n;t++){const n=Zc[t];n.instanceId=s,n.object=this,e.push(n)}Zc.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Xc(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new Hc(new Float32Array(i*this.count),i,this.count,jt,Lt));const s=this.morphTexture.source.data.data;let r=0;for(let t=0;t<n.length;t++)r+=n[t];const a=this.geometry.morphTargetsRelative?1:1-r,o=i*t;s[o]=a,s.set(n,o+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function eu(t,e){return t.z-e.z}function nu(t,e){return e.z-t.z}class iu{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n){const i=this.pool,s=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1,index:-1});const r=i[this.index];s.push(r),this.index++,r.start=t.start,r.count=t.count,r.z=e,r.index=n}reset(){this.list.length=0,this.index=0}}const su=new ls,ru=new ls,au=new ls,ou=new tr(1,1,1),lu=new ls,cu=new ua,uu=new Di,hu=new Qi,du=new Li,pu=new Li,mu=new Li,fu=new iu,gu=new kr,vu=[];function yu(t,e,n=0){const i=e.itemSize;if(t.isInterleavedBufferAttribute||t.array.constructor!==e.array.constructor){const s=t.count;for(let r=0;r<s;r++)for(let s=0;s<i;s++)e.setComponent(r+n,s,t.getComponent(r,s))}else e.array.set(t.array,n*i);e.needsUpdate=!0}class _u extends kr{get maxInstanceCount(){return this._maxInstanceCount}constructor(t,e,n=2*e,i){super(new Cr,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawInfo=[],this._availableInstanceIds=[],this._drawRanges=[],this._reservedRanges=[],this._bounds=[],this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._visibilityChanged=!0,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let t=Math.sqrt(4*this._maxInstanceCount);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new Hc(e,t,t,Bt,Lt);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new Hc(e,t,t,Xt,It);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new Hc(e,t,t,Bt,Lt);n.colorSpace=mi.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(!1===this._geometryInitialized){for(const i in t.attributes){const s=t.getAttribute(i),{array:r,itemSize:a,normalized:o}=s,l=new r.constructor(n*a),c=new dr(l,a,o);e.setAttribute(i,c)}if(null!==t.getIndex()){const t=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new dr(t,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(Boolean(t.getIndex())!==Boolean(e.getIndex()))throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),s=e.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Di);const t=this.boundingBox,e=this._drawInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,su),this.getBoundingBoxAt(i,uu).applyMatrix4(su),t.union(uu)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Qi);const t=this.boundingSphere,e=this._drawInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,su),this.getBoundingSphereAt(i,hu).applyMatrix4(su),t.union(hu)}}addInstance(t){if(this._drawInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw new Error("BatchedMesh: Maximum item count reached.");const e={visible:!0,active:!0,geometryIndex:t};let n=null;this._availableInstanceIds.length>0?(n=this._availableInstanceIds.pop(),this._drawInfo[n]=e):(n=this._drawInfo.length,this._drawInfo.push(e));const i=this._matricesTexture,s=i.image.data;au.toArray(s,16*n),i.needsUpdate=!0;const r=this._colorsTexture;return r&&(ou.toArray(r.image.data,4*n),r.needsUpdate=!0),n}addGeometry(t,e=-1,n=-1){if(this._initializeGeometry(t),this._validateGeometry(t),this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const r=this._reservedRanges,a=this._drawRanges,o=this._bounds;0!==this._geometryCount&&(s=r[r.length-1]),i.vertexCount=-1===e?t.getAttribute("position").count:e,i.vertexStart=null===s?0:s.vertexStart+s.vertexCount;const l=t.getIndex(),c=null!==l;if(c&&(i.indexCount=-1===n?l.count:n,i.indexStart=null===s?0:s.indexStart+s.indexCount),-1!==i.indexStart&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const u=this._geometryCount;return this._geometryCount++,r.push(i),a.push({start:c?i.indexStart:i.vertexStart,count:-1}),o.push({boxInitialized:!1,box:new Di,sphereInitialized:!1,sphere:new Qi}),this.setGeometryAt(u,t),u}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=null!==n.getIndex(),s=n.getIndex(),r=e.getIndex(),a=this._reservedRanges[t];if(i&&r.count>a.indexCount||e.attributes.position.count>a.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const o=a.vertexStart,l=a.vertexCount;for(const t in n.attributes){const i=e.getAttribute(t),s=n.getAttribute(t);yu(i,s,o);const r=i.itemSize;for(let t=i.count,e=l;t<e;t++){const e=o+t;for(let t=0;t<r;t++)s.setComponent(e,t,0)}s.needsUpdate=!0,s.addUpdateRange(o*r,l*r)}if(i){const t=a.indexStart;for(let e=0;e<r.count;e++)s.setX(t+e,o+r.getX(e));for(let e=r.count,n=a.indexCount;e<n;e++)s.setX(t+e,o);s.needsUpdate=!0,s.addUpdateRange(t,a.indexCount)}const c=this._bounds[t];null!==e.boundingBox?(c.box.copy(e.boundingBox),c.boxInitialized=!0):c.boxInitialized=!1,null!==e.boundingSphere?(c.sphere.copy(e.boundingSphere),c.sphereInitialized=!0):c.sphereInitialized=!1;const u=this._drawRanges[t],h=e.getAttribute("position");return u.count=i?r.count:h.count,this._visibilityChanged=!0,t}deleteInstance(t){const e=this._drawInfo;return t>=e.length||!1===e[t].active||(e[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0),this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this._bounds[t],i=n.box,s=this.geometry;if(!1===n.boxInitialized){i.makeEmpty();const e=s.index,r=s.attributes.position,a=this._drawRanges[t];for(let t=a.start,n=a.start+a.count;t<n;t++){let n=t;e&&(n=e.getX(n)),i.expandByPoint(du.fromBufferAttribute(r,n))}n.boxInitialized=!0}return e.copy(i),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this._bounds[t],i=n.sphere,s=this.geometry;if(!1===n.sphereInitialized){i.makeEmpty(),this.getBoundingBoxAt(t,uu),uu.getCenter(i.center);const e=s.index,r=s.attributes.position,a=this._drawRanges[t];let o=0;for(let t=a.start,n=a.start+a.count;t<n;t++){let n=t;e&&(n=e.getX(n)),du.fromBufferAttribute(r,n),o=Math.max(o,i.center.distanceToSquared(du))}i.radius=Math.sqrt(o),n.sphereInitialized=!0}return e.copy(i),e}setMatrixAt(t,e){const n=this._drawInfo,i=this._matricesTexture,s=this._matricesTexture.image.data;return t>=n.length||!1===n[t].active||(e.toArray(s,16*t),i.needsUpdate=!0),this}getMatrixAt(t,e){const n=this._drawInfo,i=this._matricesTexture.image.data;return t>=n.length||!1===n[t].active?null:e.fromArray(i,16*t)}setColorAt(t,e){null===this._colorsTexture&&this._initColorsTexture();const n=this._colorsTexture,i=this._colorsTexture.image.data,s=this._drawInfo;return t>=s.length||!1===s[t].active||(e.toArray(i,4*t),n.needsUpdate=!0),this}getColorAt(t,e){const n=this._colorsTexture.image.data,i=this._drawInfo;return t>=i.length||!1===i[t].active?null:e.fromArray(n,4*t)}setVisibleAt(t,e){const n=this._drawInfo;return t>=n.length||!1===n[t].active||n[t].visible===e||(n[t].visible=e,this._visibilityChanged=!0),this}getVisibleAt(t){const e=this._drawInfo;return!(t>=e.length||!1===e[t].active)&&e[t].visible}setGeometryIdAt(t,e){const n=this._drawInfo;return t>=n.length||!1===n[t].active||e<0||e>=this._geometryCount?null:(n[t].geometryIndex=e,this)}getGeometryIdAt(t){const e=this._drawInfo;return t>=e.length||!1===e[t].active?-1:e[t].geometryIndex}getGeometryRangeAt(t,e={}){if(t<0||t>=this._geometryCount)return null;const n=this._drawRanges[t];return e.start=n.start,e.count=n.count,e}raycast(t,e){const n=this._drawInfo,i=this._drawRanges,s=this.matrixWorld,r=this.geometry;gu.material=this.material,gu.geometry.index=r.index,gu.geometry.attributes=r.attributes,null===gu.geometry.boundingBox&&(gu.geometry.boundingBox=new Di),null===gu.geometry.boundingSphere&&(gu.geometry.boundingSphere=new Qi);for(let r=0,a=n.length;r<a;r++){if(!n[r].visible||!n[r].active)continue;const a=n[r].geometryIndex,o=i[a];gu.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(r,gu.matrixWorld).premultiply(s),this.getBoundingBoxAt(a,gu.geometry.boundingBox),this.getBoundingSphereAt(a,gu.geometry.boundingSphere),gu.raycast(t,vu);for(let t=0,n=vu.length;t<n;t++){const n=vu[t];n.object=this,n.batchId=r,e.push(n)}vu.length=0}gu.material=null,gu.geometry.index=null,gu.geometry.attributes={},gu.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=null!==t.boundingBox?t.boundingBox.clone():null,this.boundingSphere=null!==t.boundingSphere?t.boundingSphere.clone():null,this._drawRanges=t._drawRanges.map((t=>({...t}))),this._reservedRanges=t._reservedRanges.map((t=>({...t}))),this._drawInfo=t._drawInfo.map((t=>({...t}))),this._bounds=t._bounds.map((t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()}))),this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._geometryCount=t._geometryCount,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(t,e,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const r=i.getIndex(),a=null===r?1:r.array.BYTES_PER_ELEMENT,o=this._drawInfo,l=this._multiDrawStarts,c=this._multiDrawCounts,u=this._drawRanges,h=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data;h&&(lu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),cu.setFromProjectionMatrix(lu,t.coordinateSystem));let m=0;if(this.sortObjects){ru.copy(this.matrixWorld).invert(),du.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ru),pu.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ru);for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;this.getMatrixAt(t,su),this.getBoundingSphereAt(e,hu).applyMatrix4(su);let n=!1;if(h&&(n=!cu.intersectsSphere(hu)),!n){const n=mu.subVectors(hu.center,du).dot(pu);fu.push(u[e],n,t)}}const t=fu.list,e=this.customSort;null===e?t.sort(s.transparent?nu:eu):e.call(this,t,n);for(let e=0,n=t.length;e<n;e++){const n=t[e];l[m]=n.start*a,c[m]=n.count,p[m]=n.index,m++}fu.reset()}else for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;let n=!1;if(h&&(this.getMatrixAt(t,su),this.getBoundingSphereAt(e,hu).applyMatrix4(su),n=!cu.intersectsSphere(hu)),!n){const n=u[e];l[m]=n.start*a,c[m]=n.count,p[m]=t,m++}}d.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,s,r){this.onBeforeRender(t,null,i,s,r)}}class xu extends ir{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new tr(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Mu=new Li,bu=new Li,Tu=new ls,Su=new os,wu=new Qi,Eu=new Li,Au=new Li;class Nu extends Ds{constructor(t=new Cr,e=new xu){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Mu.fromBufferAttribute(e,t-1),bu.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Mu.distanceTo(bu);t.setAttribute("lineDistance",new Mr(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),wu.copy(n.boundingSphere),wu.applyMatrix4(i),wu.radius+=s,!1===t.ray.intersectsSphere(wu))return;Tu.copy(i).invert(),Su.copy(t.ray).applyMatrix4(Tu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,c=n.index,u=n.attributes.position;if(null!==c){const n=Math.max(0,r.start),i=Math.min(c.count,r.start+r.count);for(let s=n,r=i-1;s<r;s+=l){const n=c.getX(s),i=c.getX(s+1),r=Cu(this,t,Su,o,n,i);r&&e.push(r)}if(this.isLineLoop){const s=c.getX(i-1),r=c.getX(n),a=Cu(this,t,Su,o,s,r);a&&e.push(a)}}else{const n=Math.max(0,r.start),i=Math.min(u.count,r.start+r.count);for(let s=n,r=i-1;s<r;s+=l){const n=Cu(this,t,Su,o,s,s+1);n&&e.push(n)}if(this.isLineLoop){const s=Cu(this,t,Su,o,i-1,n);s&&e.push(s)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Cu(t,e,n,i,s,r){const a=t.geometry.attributes.position;Mu.fromBufferAttribute(a,s),bu.fromBufferAttribute(a,r);if(n.distanceSqToSegment(Mu,bu,Eu,Au)>i)return;Eu.applyMatrix4(t.matrixWorld);const o=e.ray.origin.distanceTo(Eu);return o<e.near||o>e.far?void 0:{distance:o,point:Au.clone().applyMatrix4(t.matrixWorld),index:s,face:null,faceIndex:null,barycoord:null,object:t}}const Ru=new Li,Iu=new Li;class Lu extends Nu{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Ru.fromBufferAttribute(e,t),Iu.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Ru.distanceTo(Iu);t.setAttribute("lineDistance",new Mr(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Pu extends Nu{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Uu extends ir{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new tr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Du=new ls,Ou=new os,zu=new Qi,Vu=new Li;class Fu extends Ds{constructor(t=new Cr,e=new Uu){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),zu.copy(n.boundingSphere),zu.applyMatrix4(i),zu.radius+=s,!1===t.ray.intersectsSphere(zu))return;Du.copy(i).invert(),Ou.copy(t.ray).applyMatrix4(Du);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l){for(let n=Math.max(0,r.start),s=Math.min(l.count,r.start+r.count);n<s;n++){const s=l.getX(n);Vu.fromBufferAttribute(c,s),Bu(Vu,s,o,i,t,e,this)}}else{for(let n=Math.max(0,r.start),s=Math.min(c.count,r.start+r.count);n<s;n++)Vu.fromBufferAttribute(c,n),Bu(Vu,n,o,i,t,e,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Bu(t,e,n,i,s,r,a){const o=Ou.distanceSqToPoint(t);if(o<n){const n=new Li;Ou.closestPointToPoint(t,n),n.applyMatrix4(i);const l=s.ray.origin.distanceTo(n);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class ku extends Ti{constructor(t,e,n,i,s,r,a,o,l){super(t,e,n,i,s,r,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==r?r:Mt,this.magFilter=void 0!==s?s:Mt,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Hu extends Ti{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=gt,this.minFilter=gt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Gu extends Ti{constructor(t,e,n,i,s,r,a,o,l,c,u,h){super(null,r,a,o,l,c,i,s,u,h),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class Wu extends Gu{constructor(t,e,n,i,s,r){super(t,e,n,s,r),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=mt,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class ju extends Gu{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,lt),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class Xu extends Ti{constructor(t,e,n,i,s,r,a,o,l){super(t,e,n,i,s,r,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class qu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const s=n.length;let r;r=e||t*n[s-1];let a,o=0,l=s-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-r,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===r)return i/(s-1);const c=n[i];return(i+(r-c)/(n[i+1]-c))/(s-1)}getTangent(t,e){const n=1e-4;let i=t-n,s=t+n;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),o=e||(r.isVector2?new ti:new Li);return o.copy(a).sub(r).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new Li,i=[],s=[],r=[],a=new Li,o=new ls;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new Li)}s[0]=new Li,r[0]=new Li;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let e=1;e<=t;e++){if(s[e]=s[e-1].clone(),r[e]=r[e-1].clone(),a.crossVectors(i[e-1],i[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(Yn(i[e-1].dot(i[e]),-1,1));s[e].applyMatrix4(o.makeRotationAxis(a,t))}r[e].crossVectors(i[e],s[e])}if(!0===e){let e=Math.acos(Yn(s[0].dot(s[t]),-1,1));e/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(e=-e);for(let n=1;n<=t;n++)s[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),r[n].crossVectors(i[n],s[n])}return{tangents:i,normals:s,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Yu extends qu{constructor(t=0,e=0,n=1,i=1,s=0,r=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new ti){const n=e,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=r?0:i),!0!==this.aClockwise||r||(s===i?s=-i:s-=i);const a=this.aStartAngle+t*s;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Zu extends Yu{constructor(t,e,n,i,s,r){super(t,e,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function $u(){let t=0,e=0,n=0,i=0;function s(s,r,a,o){t=s,e=a,n=-3*s+3*r-2*a-o,i=2*s-2*r+a+o}return{initCatmullRom:function(t,e,n,i,r){s(e,n,r*(n-t),r*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,r,a,o){let l=(e-t)/r-(n-t)/(r+a)+(n-e)/a,c=(n-e)/a-(i-e)/(a+o)+(i-n)/o;l*=a,c*=a,s(e,n,l,c)},calc:function(s){const r=s*s;return t+e*s+n*r+i*(r*s)}}}const Ju=new Li,Ku=new $u,Qu=new $u,th=new $u;class eh extends qu{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new Li){const n=e,i=this.points,s=i.length,r=(s-(this.closed?0:1))*t;let a,o,l=Math.floor(r),c=r-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:0===c&&l===s-1&&(l=s-2,c=1),this.closed||l>0?a=i[(l-1)%s]:(Ju.subVectors(i[0],i[1]).add(i[0]),a=Ju);const u=i[l%s],h=i[(l+1)%s];if(this.closed||l+2<s?o=i[(l+2)%s]:(Ju.subVectors(i[s-1],i[s-2]).add(i[s-1]),o=Ju),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Ku.initNonuniformCatmullRom(a.x,u.x,h.x,o.x,e,n,i),Qu.initNonuniformCatmullRom(a.y,u.y,h.y,o.y,e,n,i),th.initNonuniformCatmullRom(a.z,u.z,h.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Ku.initCatmullRom(a.x,u.x,h.x,o.x,this.tension),Qu.initCatmullRom(a.y,u.y,h.y,o.y,this.tension),th.initCatmullRom(a.z,u.z,h.z,o.z,this.tension));return n.set(Ku.calc(c),Qu.calc(c),th.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Li).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function nh(t,e,n,i,s){const r=.5*(i-e),a=.5*(s-n),o=t*t;return(2*n-2*i+r+a)*(t*o)+(-3*n+3*i-2*r-a)*o+r*t+n}function ih(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function sh(t,e,n,i,s){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,s)}class rh extends qu{constructor(t=new ti,e=new ti,n=new ti,i=new ti){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ti){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(sh(t,i.x,s.x,r.x,a.x),sh(t,i.y,s.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ah extends qu{constructor(t=new Li,e=new Li,n=new Li,i=new Li){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Li){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(sh(t,i.x,s.x,r.x,a.x),sh(t,i.y,s.y,r.y,a.y),sh(t,i.z,s.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class oh extends qu{constructor(t=new ti,e=new ti){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ti){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ti){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class lh extends qu{constructor(t=new Li,e=new Li){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Li){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Li){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ch extends qu{constructor(t=new ti,e=new ti,n=new ti){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ti){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(ih(t,i.x,s.x,r.x),ih(t,i.y,s.y,r.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class uh extends qu{constructor(t=new Li,e=new Li,n=new Li){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Li){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(ih(t,i.x,s.x,r.x),ih(t,i.y,s.y,r.y),ih(t,i.z,s.z,r.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class hh extends qu{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ti){const n=e,i=this.points,s=(i.length-1)*t,r=Math.floor(s),a=s-r,o=i[0===r?r:r-1],l=i[r],c=i[r>i.length-2?i.length-1:r+1],u=i[r>i.length-3?i.length-1:r+2];return n.set(nh(a,o.x,l.x,c.x,u.x),nh(a,o.y,l.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ti).fromArray(n))}return this}}var dh=Object.freeze({__proto__:null,ArcCurve:Zu,CatmullRomCurve3:eh,CubicBezierCurve:rh,CubicBezierCurve3:ah,EllipseCurve:Yu,LineCurve:oh,LineCurve3:lh,QuadraticBezierCurve:ch,QuadraticBezierCurve3:uh,SplineCurve:hh});class ph extends qu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new dh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const t=i[s]-n,r=this.curves[s],a=r.getLength(),o=0===a?0:1-t/a;return r.getPointAt(o,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r.isEllipseCurve?2*t:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?t*r.points.length:t,o=r.getPoints(a);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new dh[n.type]).fromJSON(n))}return this}}class mh extends ph{constructor(t){super(),this.type="Path",this.currentPoint=new ti,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new oh(this.currentPoint.clone(),new ti(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new ch(this.currentPoint.clone(),new ti(t,e),new ti(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,r){const a=new rh(this.currentPoint.clone(),new ti(t,e),new ti(n,i),new ti(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new hh(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,r){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,s,r),this}absarc(t,e,n,i,s,r){return this.absellipse(t,e,n,n,i,s,r),this}ellipse(t,e,n,i,s,r,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,s,r,a,o),this}absellipse(t,e,n,i,s,r,a,o){const l=new Yu(t,e,n,i,s,r,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class fh extends Cr{constructor(t=[new ti(0,-.5),new ti(.5,0),new ti(0,.5)],e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=Yn(i,0,2*Math.PI);const s=[],r=[],a=[],o=[],l=[],c=1/e,u=new Li,h=new ti,d=new Li,p=new Li,m=new Li;let f=0,g=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,m.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(m.x,m.y,m.z);break;default:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),o.push(d.x,d.y,d.z),m.copy(p)}for(let s=0;s<=e;s++){const d=n+s*c*i,p=Math.sin(d),m=Math.cos(d);for(let n=0;n<=t.length-1;n++){u.x=t[n].x*p,u.y=t[n].y,u.z=t[n].x*m,r.push(u.x,u.y,u.z),h.x=s/e,h.y=n/(t.length-1),a.push(h.x,h.y);const i=o[3*n+0]*p,c=o[3*n+1],d=o[3*n+0]*m;l.push(i,c,d)}}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,r=i,a=i+t.length,o=i+t.length+1,l=i+1;s.push(r,a,l),s.push(o,l,a)}this.setIndex(s),this.setAttribute("position",new Mr(r,3)),this.setAttribute("uv",new Mr(a,2)),this.setAttribute("normal",new Mr(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new fh(t.points,t.segments,t.phiStart,t.phiLength)}}class gh extends fh{constructor(t=1,e=1,n=4,i=8){const s=new mh;s.absarc(0,-e/2,t,1.5*Math.PI,0),s.absarc(0,e/2,t,0,.5*Math.PI),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:n,radialSegments:i}}static fromJSON(t){return new gh(t.radius,t.length,t.capSegments,t.radialSegments)}}class vh extends Cr{constructor(t=1,e=32,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],r=[],a=[],o=[],l=new Li,c=new ti;r.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let s=0,u=3;s<=e;s++,u+=3){const h=n+s/e*i;l.x=t*Math.cos(h),l.y=t*Math.sin(h),r.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(r[u]/t+1)/2,c.y=(r[u+1]/t+1)/2,o.push(c.x,c.y)}for(let t=1;t<=e;t++)s.push(t,t+1,0);this.setIndex(s),this.setAttribute("position",new Mr(r,3)),this.setAttribute("normal",new Mr(a,3)),this.setAttribute("uv",new Mr(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vh(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class yh extends Cr{constructor(t=1,e=1,n=1,i=32,s=1,r=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),s=Math.floor(s);const c=[],u=[],h=[],d=[];let p=0;const m=[],f=n/2;let g=0;function v(n){const s=p,r=new ti,m=new Li;let v=0;const y=!0===n?t:e,_=!0===n?1:-1;for(let t=1;t<=i;t++)u.push(0,f*_,0),h.push(0,_,0),d.push(.5,.5),p++;const x=p;for(let t=0;t<=i;t++){const e=t/i*o+a,n=Math.cos(e),s=Math.sin(e);m.x=y*s,m.y=f*_,m.z=y*n,u.push(m.x,m.y,m.z),h.push(0,_,0),r.x=.5*n+.5,r.y=.5*s*_+.5,d.push(r.x,r.y),p++}for(let t=0;t<i;t++){const e=s+t,i=x+t;!0===n?c.push(i,i+1,e):c.push(i+1,i,e),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}!function(){const r=new Li,v=new Li;let y=0;const _=(e-t)/n;for(let l=0;l<=s;l++){const c=[],g=l/s,y=g*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,s=e*o+a,l=Math.sin(s),m=Math.cos(s);v.x=y*l,v.y=-g*n+f,v.z=y*m,u.push(v.x,v.y,v.z),r.set(l,_,m).normalize(),h.push(r.x,r.y,r.z),d.push(e,1-g),c.push(p++)}m.push(c)}for(let n=0;n<i;n++)for(let i=0;i<s;i++){const s=m[i][n],r=m[i+1][n],a=m[i+1][n+1],o=m[i][n+1];t>0&&(c.push(s,r,o),y+=3),e>0&&(c.push(r,a,o),y+=3)}l.addGroup(g,y,0),g+=y}(),!1===r&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new Mr(u,3)),this.setAttribute("normal",new Mr(h,3)),this.setAttribute("uv",new Mr(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yh(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class _h extends yh{constructor(t=1,e=1,n=32,i=1,s=!1,r=0,a=2*Math.PI){super(0,t,e,n,i,s,r,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(t){return new _h(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class xh extends Cr{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],r=[];function a(t,e,n,i){const s=i+1,r=[];for(let i=0;i<=s;i++){r[i]=[];const a=t.clone().lerp(n,i/s),o=e.clone().lerp(n,i/s),l=s-i;for(let t=0;t<=l;t++)r[i][t]=0===t&&i===s?a:a.clone().lerp(o,t/l)}for(let t=0;t<s;t++)for(let e=0;e<2*(s-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(r[t][n+1]),o(r[t+1][n]),o(r[t][n])):(o(r[t][n+1]),o(r[t+1][n+1]),o(r[t+1][n]))}}function o(t){s.push(t.x,t.y,t.z)}function l(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function c(t,e,n,i){i<0&&1===t.x&&(r[e]=t.x-1),0===n.x&&0===n.z&&(r[e]=i/2/Math.PI+.5)}function u(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new Li,i=new Li,s=new Li;for(let r=0;r<e.length;r+=3)l(e[r+0],n),l(e[r+1],i),l(e[r+2],s),a(n,i,s,t)}(i),function(t){const e=new Li;for(let n=0;n<s.length;n+=3)e.x=s[n+0],e.y=s[n+1],e.z=s[n+2],e.normalize().multiplyScalar(t),s[n+0]=e.x,s[n+1]=e.y,s[n+2]=e.z}(n),function(){const t=new Li;for(let n=0;n<s.length;n+=3){t.x=s[n+0],t.y=s[n+1],t.z=s[n+2];const i=u(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);r.push(i,1-a)}var e;(function(){const t=new Li,e=new Li,n=new Li,i=new Li,a=new ti,o=new ti,l=new ti;for(let h=0,d=0;h<s.length;h+=9,d+=6){t.set(s[h+0],s[h+1],s[h+2]),e.set(s[h+3],s[h+4],s[h+5]),n.set(s[h+6],s[h+7],s[h+8]),a.set(r[d+0],r[d+1]),o.set(r[d+2],r[d+3]),l.set(r[d+4],r[d+5]),i.copy(t).add(e).add(n).divideScalar(3);const p=u(i);c(a,d+0,t,p),c(o,d+2,e,p),c(l,d+4,n,p)}})(),function(){for(let t=0;t<r.length;t+=6){const e=r[t+0],n=r[t+2],i=r[t+4],s=Math.max(e,n,i),a=Math.min(e,n,i);s>.9&&a<.1&&(e<.2&&(r[t+0]+=1),n<.2&&(r[t+2]+=1),i<.2&&(r[t+4]+=1))}}()}(),this.setAttribute("position",new Mr(s,3)),this.setAttribute("normal",new Mr(s.slice(),3)),this.setAttribute("uv",new Mr(r,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xh(t.vertices,t.indices,t.radius,t.details)}}class Mh extends xh{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Mh(t.radius,t.detail)}}const bh=new Li,Th=new Li,Sh=new Li,wh=new Zs;class Eh extends Cr{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,i=Math.pow(10,n),s=Math.cos(jn*e),r=t.getIndex(),a=t.getAttribute("position"),o=r?r.count:a.count,l=[0,0,0],c=["a","b","c"],u=new Array(3),h={},d=[];for(let t=0;t<o;t+=3){r?(l[0]=r.getX(t),l[1]=r.getX(t+1),l[2]=r.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=wh;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),wh.getNormal(Sh),u[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,u[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,u[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=u[t],i=u[e],r=wh[c[t]],a=wh[c[e]],o=`${n}_${i}`,p=`${i}_${n}`;p in h&&h[p]?(Sh.dot(h[p].normal)<=s&&(d.push(r.x,r.y,r.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:Sh.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];bh.fromBufferAttribute(a,e),Th.fromBufferAttribute(a,n),d.push(bh.x,bh.y,bh.z),d.push(Th.x,Th.y,Th.z)}this.setAttribute("position",new Mr(d,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ah extends mh{constructor(t){super(t),this.uuid=qn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new mh).fromJSON(n))}return this}}const Nh=function(t,e,n=2){const i=e&&e.length,s=i?e[0]*n:t.length;let r=Ch(t,0,s,n,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,u,h,d,p;if(i&&(r=function(t,e,n,i){const s=[];let r,a,o,l,c;for(r=0,a=e.length;r<a;r++)o=e[r]*i,l=r<a-1?e[r+1]*i:t.length,c=Ch(t,o,l,i,!1),c===c.next&&(c.steiner=!0),s.push(Bh(c));for(s.sort(Oh),r=0;r<s.length;r++)n=zh(s[r],n);return n}(t,e,r,n)),t.length>80*n){o=c=t[0],l=u=t[1];for(let e=n;e<s;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-o,u-l),p=0!==p?32767/p:0}return Ih(r,a,n,o,l,p,0),a};function Ch(t,e,n,i,s){let r,a;if(s===function(t,e,n,i){let s=0;for(let r=e,a=n-i;r<n;r+=i)s+=(t[a]-t[r])*(t[r+1]+t[a+1]),a=r;return s}(t,e,n,i)>0)for(r=e;r<n;r+=i)a=$h(r,t[r],t[r+1],a);else for(r=n-i;r>=e;r-=i)a=$h(r,t[r],t[r+1],a);return a&&Wh(a,a.next)&&(Jh(a),a=a.next),a}function Rh(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Wh(i,i.next)&&0!==Gh(i.prev,i,i.next))i=i.next;else{if(Jh(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Ih(t,e,n,i,s,r,a){if(!t)return;!a&&r&&function(t,e,n,i){let s=t;do{0===s.z&&(s.z=Fh(s.x,s.y,e,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function(t){let e,n,i,s,r,a,o,l,c=1;do{for(n=t,t=null,r=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(s=n,n=n.nextZ,o--):(s=i,i=i.nextZ,l--),r?r.nextZ=s:t=s,s.prevZ=r,r=s;n=i}r.nextZ=null,c*=2}while(a>1)}(s)}(t,i,s,r);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,r?Ph(t,i,s,r):Lh(t))e.push(o.i/n|0),e.push(t.i/n|0),e.push(l.i/n|0),Jh(t),t=l.next,c=l.next;else if((t=l)===c){a?1===a?Ih(t=Uh(Rh(t),e,n),e,n,i,s,r,2):2===a&&Dh(t,e,n,i,s,r):Ih(Rh(t),e,n,i,s,r,1);break}}function Lh(t){const e=t.prev,n=t,i=t.next;if(Gh(e,n,i)>=0)return!1;const s=e.x,r=n.x,a=i.x,o=e.y,l=n.y,c=i.y,u=s<r?s<a?s:a:r<a?r:a,h=o<l?o<c?o:c:l<c?l:c,d=s>r?s>a?s:a:r>a?r:a,p=o>l?o>c?o:c:l>c?l:c;let m=i.next;for(;m!==e;){if(m.x>=u&&m.x<=d&&m.y>=h&&m.y<=p&&kh(s,o,r,l,a,c,m.x,m.y)&&Gh(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Ph(t,e,n,i){const s=t.prev,r=t,a=t.next;if(Gh(s,r,a)>=0)return!1;const o=s.x,l=r.x,c=a.x,u=s.y,h=r.y,d=a.y,p=o<l?o<c?o:c:l<c?l:c,m=u<h?u<d?u:d:h<d?h:d,f=o>l?o>c?o:c:l>c?l:c,g=u>h?u>d?u:d:h>d?h:d,v=Fh(p,m,e,n,i),y=Fh(f,g,e,n,i);let _=t.prevZ,x=t.nextZ;for(;_&&_.z>=v&&x&&x.z<=y;){if(_.x>=p&&_.x<=f&&_.y>=m&&_.y<=g&&_!==s&&_!==a&&kh(o,u,l,h,c,d,_.x,_.y)&&Gh(_.prev,_,_.next)>=0)return!1;if(_=_.prevZ,x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==s&&x!==a&&kh(o,u,l,h,c,d,x.x,x.y)&&Gh(x.prev,x,x.next)>=0)return!1;x=x.nextZ}for(;_&&_.z>=v;){if(_.x>=p&&_.x<=f&&_.y>=m&&_.y<=g&&_!==s&&_!==a&&kh(o,u,l,h,c,d,_.x,_.y)&&Gh(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;x&&x.z<=y;){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==s&&x!==a&&kh(o,u,l,h,c,d,x.x,x.y)&&Gh(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function Uh(t,e,n){let i=t;do{const s=i.prev,r=i.next.next;!Wh(s,r)&&jh(s,i,i.next,r)&&Yh(s,r)&&Yh(r,s)&&(e.push(s.i/n|0),e.push(i.i/n|0),e.push(r.i/n|0),Jh(i),Jh(i.next),i=t=r),i=i.next}while(i!==t);return Rh(i)}function Dh(t,e,n,i,s,r){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&Hh(a,t)){let o=Zh(a,t);return a=Rh(a,a.next),o=Rh(o,o.next),Ih(a,e,n,i,s,r,0),void Ih(o,e,n,i,s,r,0)}t=t.next}a=a.next}while(a!==t)}function Oh(t,e){return t.x-e.x}function zh(t,e){const n=function(t,e){let n,i=e,s=-1/0;const r=t.x,a=t.y;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){const t=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=r&&t>s&&(s=t,n=i.x<i.next.x?i:i.next,t===r))return n}i=i.next}while(i!==e);if(!n)return null;const o=n,l=n.x,c=n.y;let u,h=1/0;i=n;do{r>=i.x&&i.x>=l&&r!==i.x&&kh(a<c?r:s,a,l,c,a<c?s:r,a,i.x,i.y)&&(u=Math.abs(a-i.y)/(r-i.x),Yh(i,t)&&(u<h||u===h&&(i.x>n.x||i.x===n.x&&Vh(n,i)))&&(n=i,h=u)),i=i.next}while(i!==o);return n}(t,e);if(!n)return e;const i=Zh(n,t);return Rh(i,i.next),Rh(n,n.next)}function Vh(t,e){return Gh(t.prev,t,e.prev)<0&&Gh(e.next,t,t.next)<0}function Fh(t,e,n,i,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*s|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*s|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Bh(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function kh(t,e,n,i,s,r,a,o){return(s-a)*(e-o)>=(t-a)*(r-o)&&(t-a)*(i-o)>=(n-a)*(e-o)&&(n-a)*(r-o)>=(s-a)*(i-o)}function Hh(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&jh(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Yh(t,e)&&Yh(e,t)&&function(t,e){let n=t,i=!1;const s=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Gh(t.prev,t,e.prev)||Gh(t,e.prev,e))||Wh(t,e)&&Gh(t.prev,t,t.next)>0&&Gh(e.prev,e,e.next)>0)}function Gh(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Wh(t,e){return t.x===e.x&&t.y===e.y}function jh(t,e,n,i){const s=qh(Gh(t,e,n)),r=qh(Gh(t,e,i)),a=qh(Gh(n,i,t)),o=qh(Gh(n,i,e));return s!==r&&a!==o||(!(0!==s||!Xh(t,n,e))||(!(0!==r||!Xh(t,i,e))||(!(0!==a||!Xh(n,t,i))||!(0!==o||!Xh(n,e,i)))))}function Xh(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function qh(t){return t>0?1:t<0?-1:0}function Yh(t,e){return Gh(t.prev,t,t.next)<0?Gh(t,e,t.next)>=0&&Gh(t,t.prev,e)>=0:Gh(t,e,t.prev)<0||Gh(t,t.next,e)<0}function Zh(t,e){const n=new Kh(t.i,t.x,t.y),i=new Kh(e.i,e.x,e.y),s=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function $h(t,e,n,i){const s=new Kh(t,e,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function Jh(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Kh(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Qh{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return.5*n}static isClockWise(t){return Qh.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];td(t),ed(n,t);let r=t.length;e.forEach(td);for(let t=0;t<e.length;t++)i.push(r),r+=e[t].length,ed(n,e[t]);const a=Nh(n,i);for(let t=0;t<a.length;t+=3)s.push(a.slice(t,t+3));return s}}function td(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function ed(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class nd extends Cr{constructor(t=new Ah([new ti(.5,.5),new ti(-.5,.5),new ti(-.5,-.5),new ti(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let e=0,n=t.length;e<n;e++){r(t[e])}function r(t){const r=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:u-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:id;let g,v,y,_,x,M=!1;m&&(g=m.getSpacedPoints(o),M=!0,c=!1,v=m.computeFrenetFrames(o,!1),y=new Li,_=new Li,x=new Li),c||(p=0,u=0,h=0,d=0);const b=t.extractPoints(a);let T=b.shape;const S=b.holes;if(!Qh.isClockWise(T)){T=T.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];Qh.isClockWise(e)&&(S[t]=e.reverse())}}const w=Qh.triangulateShape(T,S),E=T;for(let t=0,e=S.length;t<e;t++){const e=S[t];T=T.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,n)}const N=T.length,C=w.length;function R(t,e,n){let i,s,r;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,u=a*a+o*o,h=a*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(l*l+c*c),p=e.x-o/h,m=e.y+a/h,f=((n.x-c/d-p)*c-(n.y+l/d-m)*l)/(a*c-o*l);i=p+a*f-t.x,s=m+o*f-t.y;const g=i*i+s*s;if(g<=2)return new ti(i,s);r=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,s=a,r=Math.sqrt(u)):(i=a,s=o,r=Math.sqrt(u/2))}return new ti(i/r,s/r)}const I=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),I[t]=R(E[t],E[n],E[i]);const L=[];let P,U=I.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];P=[];for(let t=0,n=e.length,i=n-1,s=t+1;t<n;t++,i++,s++)i===n&&(i=0),s===n&&(s=0),P[t]=R(e[t],e[i],e[s]);L.push(P),U=U.concat(P)}for(let t=0;t<p;t++){const e=t/p,n=u*Math.cos(e*Math.PI/2),i=h*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],I[t],i);z(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];P=L[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],P[t],i);z(s.x,s.y,-n)}}}const D=h+d;for(let t=0;t<N;t++){const e=c?A(T[t],U[t],D):T[t];M?(_.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),x.copy(g[0]).add(_).add(y),z(x.x,x.y,x.z)):z(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<N;e++){const n=c?A(T[e],U[e],D):T[e];M?(_.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),x.copy(g[t]).add(_).add(y),z(x.x,x.y,x.z)):z(n.x,n.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=u*Math.cos(e*Math.PI/2),i=h*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],I[t],i);z(e.x,e.y,l+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];P=L[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],P[t],i);M?z(s.x,s.y+g[o-1].y,g[o-1].x+n):z(s.x,s.y,l+n)}}}function O(t,e){let n=t.length;for(;--n>=0;){const i=n;let s=n-1;s<0&&(s=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=N*t,r=N*(t+1);F(e+i+n,e+s+n,e+s+r,e+i+r)}}}function z(t,e,n){r.push(t),r.push(e),r.push(n)}function V(t,e,s){B(t),B(e),B(s);const r=i.length/3,a=f.generateTopUV(n,i,r-3,r-2,r-1);k(a[0]),k(a[1]),k(a[2])}function F(t,e,s,r){B(t),B(e),B(r),B(e),B(s),B(r);const a=i.length/3,o=f.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);k(o[0]),k(o[1]),k(o[3]),k(o[1]),k(o[2]),k(o[3])}function B(t){i.push(r[3*t+0]),i.push(r[3*t+1]),i.push(r[3*t+2])}function k(t){s.push(t.x),s.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=N*t;for(let t=0;t<C;t++){const n=w[t];V(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=N*t;for(let t=0;t<C;t++){const n=w[t];V(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<C;t++){const e=w[t];V(e[2],e[1],e[0])}for(let t=0;t<C;t++){const e=w[t];V(e[0]+N*o,e[1]+N*o,e[2]+N*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;O(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];O(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Mr(i,3)),this.setAttribute("uv",new Mr(s,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const s=e[t.shapes[i]];n.push(s)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new dh[i.type]).fromJSON(i)),new nd(n,t.options)}}const id={generateTopUV:function(t,e,n,i,s){const r=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*s],u=e[3*s+1];return[new ti(r,a),new ti(o,l),new ti(c,u)]},generateSideWallUV:function(t,e,n,i,s,r){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],u=e[3*i+1],h=e[3*i+2],d=e[3*s],p=e[3*s+1],m=e[3*s+2],f=e[3*r],g=e[3*r+1],v=e[3*r+2];return Math.abs(o-u)<Math.abs(a-c)?[new ti(a,1-l),new ti(c,1-h),new ti(d,1-m),new ti(f,1-v)]:[new ti(o,1-l),new ti(u,1-h),new ti(p,1-m),new ti(g,1-v)]}};class sd extends xh{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new sd(t.radius,t.detail)}}class rd extends xh{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new rd(t.radius,t.detail)}}class ad extends Cr{constructor(t=.5,e=1,n=32,i=1,s=0,r=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:r},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let u=t;const h=(e-t)/(i=Math.max(1,i)),d=new Li,p=new ti;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=s+t/n*r;d.x=u*Math.cos(i),d.y=u*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}u+=h}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,s=i,r=i+n+1,o=i+n+2,l=i+1;a.push(s,r,l),a.push(r,o,l)}}this.setIndex(a),this.setAttribute("position",new Mr(o,3)),this.setAttribute("normal",new Mr(l,3)),this.setAttribute("uv",new Mr(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ad(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class od extends Cr{constructor(t=new Ah([new ti(0,.5),new ti(-.5,-.5),new ti(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],r=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=i.length/3,l=t.extractPoints(e);let c=l.shape;const u=l.holes;!1===Qh.isClockWise(c)&&(c=c.reverse());for(let t=0,e=u.length;t<e;t++){const e=u[t];!0===Qh.isClockWise(e)&&(u[t]=e.reverse())}const h=Qh.triangulateShape(c,u);for(let t=0,e=u.length;t<e;t++){const e=u[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];i.push(e.x,e.y,0),s.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],i=e[0]+a,s=e[1]+a,r=e[2]+a;n.push(i,s,r),o+=3}}this.setIndex(n),this.setAttribute("position",new Mr(i,3)),this.setAttribute("normal",new Mr(s,3)),this.setAttribute("uv",new Mr(r,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const s=e[t.shapes[i]];n.push(s)}return new od(n,t.curveSegments)}}class ld extends Cr{constructor(t=1,e=32,n=16,i=0,s=2*Math.PI,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(r+a,Math.PI);let l=0;const c=[],u=new Li,h=new Li,d=[],p=[],m=[],f=[];for(let d=0;d<=n;d++){const g=[],v=d/n;let y=0;0===d&&0===r?y=.5/e:d===n&&o===Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;u.x=-t*Math.cos(i+o*s)*Math.sin(r+v*a),u.y=t*Math.cos(r+v*a),u.z=t*Math.sin(i+o*s)*Math.sin(r+v*a),p.push(u.x,u.y,u.z),h.copy(u).normalize(),m.push(h.x,h.y,h.z),f.push(o+y,1-v),g.push(l++)}c.push(g)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=c[t][i+1],s=c[t][i],a=c[t+1][i],l=c[t+1][i+1];(0!==t||r>0)&&d.push(e,s,l),(t!==n-1||o<Math.PI)&&d.push(s,a,l)}this.setIndex(d),this.setAttribute("position",new Mr(p,3)),this.setAttribute("normal",new Mr(m,3)),this.setAttribute("uv",new Mr(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ld(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class cd extends xh{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new cd(t.radius,t.detail)}}class ud extends Cr{constructor(t=1,e=.4,n=12,i=48,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const r=[],a=[],o=[],l=[],c=new Li,u=new Li,h=new Li;for(let r=0;r<=n;r++)for(let d=0;d<=i;d++){const p=d/i*s,m=r/n*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(p),u.y=(t+e*Math.cos(m))*Math.sin(p),u.z=e*Math.sin(m),a.push(u.x,u.y,u.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),h.subVectors(u,c).normalize(),o.push(h.x,h.y,h.z),l.push(d/i),l.push(r/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,s=(i+1)*(t-1)+e-1,a=(i+1)*(t-1)+e,o=(i+1)*t+e;r.push(n,s,o),r.push(s,a,o)}this.setIndex(r),this.setAttribute("position",new Mr(a,3)),this.setAttribute("normal",new Mr(o,3)),this.setAttribute("uv",new Mr(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ud(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class hd extends Cr{constructor(t=1,e=.4,n=64,i=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],u=new Li,h=new Li,d=new Li,p=new Li,m=new Li,f=new Li,g=new Li;for(let a=0;a<=n;++a){const y=a/n*s*Math.PI*2;v(y,s,r,t,d),v(y+.01,s,r,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=i;++t){const s=t/i*Math.PI*2,r=-e*Math.cos(s),p=e*Math.sin(s);u.x=d.x+(r*g.x+p*m.x),u.y=d.y+(r*g.y+p*m.y),u.z=d.z+(r*g.z+p*m.z),o.push(u.x,u.y,u.z),h.subVectors(u,d).normalize(),l.push(h.x,h.y,h.z),c.push(a/n),c.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),r=(i+1)*t+e,o=(i+1)*(t-1)+e;a.push(n,s,o),a.push(s,r,o)}function v(t,e,n,i,s){const r=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);s.x=i*(2+l)*.5*r,s.y=i*(2+l)*a*.5,s.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Mr(o,3)),this.setAttribute("normal",new Mr(l,3)),this.setAttribute("uv",new Mr(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hd(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class dd extends Cr{constructor(t=new uh(new Li(-1,-1,0),new Li(-1,1,0),new Li(1,1,0)),e=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s};const r=t.computeFrenetFrames(e,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new Li,o=new Li,l=new ti;let c=new Li;const u=[],h=[],d=[],p=[];function m(s){c=t.getPointAt(s/e,c);const l=r.normals[s],d=r.binormals[s];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,s=Math.sin(e),r=-Math.cos(e);o.x=r*l.x+s*d.x,o.y=r*l.y+s*d.y,o.z=r*l.z+s*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,u.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===s?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),r=(i+1)*t+e,a=(i+1)*(t-1)+e;p.push(n,s,a),p.push(s,r,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Mr(u,3)),this.setAttribute("normal",new Mr(h,3)),this.setAttribute("uv",new Mr(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new dd((new dh[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class pd extends Cr{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,i=new Li,s=new Li;if(null!==t.index){const r=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),c=a.getX(t+(o+1)%3);i.fromBufferAttribute(r,l),s.fromBufferAttribute(r,c),!0===md(i,s,n)&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}}else{const r=t.attributes.position;for(let t=0,a=r.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;i.fromBufferAttribute(r,o),s.fromBufferAttribute(r,l),!0===md(i,s,n)&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new Mr(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function md(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,s=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(i)&&!0!==n.has(s)&&(n.add(i),n.add(s),!0)}var fd=Object.freeze({__proto__:null,BoxGeometry:Gr,CapsuleGeometry:gh,CircleGeometry:vh,ConeGeometry:_h,CylinderGeometry:yh,DodecahedronGeometry:Mh,EdgesGeometry:Eh,ExtrudeGeometry:nd,IcosahedronGeometry:sd,LatheGeometry:fh,OctahedronGeometry:rd,PlaneGeometry:pa,PolyhedronGeometry:xh,RingGeometry:ad,ShapeGeometry:od,SphereGeometry:ld,TetrahedronGeometry:cd,TorusGeometry:ud,TorusKnotGeometry:hd,TubeGeometry:dd,WireframeGeometry:pd});class gd extends ir{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new tr(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class vd extends Yr{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class yd extends ir{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new tr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ys,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class _d extends yd{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ti(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Yn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new tr(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new tr(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new tr(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class xd extends ir{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new tr(16777215),this.specular=new tr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ys,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Md extends ir{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new tr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class bd extends ir{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Td extends ir{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new tr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ys,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Sd extends ir{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new tr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ti(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class wd extends xu{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Ed(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function Ad(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function Nd(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n}function Cd(t,e,n){const i=t.length,s=new t.constructor(i);for(let r=0,a=0;a!==i;++r){const i=n[r]*e;for(let n=0;n!==e;++n)s[a++]=t[i+n]}return s}function Rd(t,e,n,i){let s=1,r=t[0];for(;void 0!==r&&void 0===r[i];)r=t[s++];if(void 0===r)return;let a=r[i];if(void 0!==a)if(Array.isArray(a))do{a=r[i],void 0!==a&&(e.push(r.time),n.push.apply(n,a)),r=t[s++]}while(void 0!==r);else if(void 0!==a.toArray)do{a=r[i],void 0!==a&&(e.push(r.time),a.toArray(n,n.length)),r=t[s++]}while(void 0!==r);else do{a=r[i],void 0!==a&&(e.push(r.time),n.push(a)),r=t[s++]}while(void 0!==r)}const Id={convertArray:Ed,isTypedArray:Ad,getKeyframeOrder:Nd,sortedArray:Cd,flattenJSON:Rd,subclip:function(t,e,n,i,s=30){const r=t.clone();r.name=e;const a=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*s;if(!(r<n||r>=i)){l.push(e.times[t]);for(let n=0;n<o;++n)c.push(e.values[t*o+n])}}0!==l.length&&(e.times=Ed(l,e.times.constructor),e.values=Ed(c,e.values.constructor),a.push(e))}r.tracks=a;let o=1/0;for(let t=0;t<r.tracks.length;++t)o>r.tracks[t].times[0]&&(o=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const s=n.tracks.length,r=e/i;for(let e=0;e<s;++e){const i=n.tracks[e],s=i.ValueTypeName;if("bool"===s||"string"===s)continue;const a=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===s}));if(void 0===a)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const h=i.times.length-1;let d;if(r<=i.times[0]){const t=o,e=l-o;d=i.values.slice(t,e)}else if(r>=i.times[h]){const t=h*l+o,e=t+l-o;d=i.values.slice(t,e)}else{const t=i.createInterpolant(),e=o,n=l-o;t.evaluate(r),d=t.resultBuffer.slice(e,n)}if("quaternion"===s){(new Ii).fromArray(d).normalize().conjugate().toArray(d)}const p=a.times.length;for(let t=0;t<p;++t){const e=t*u+c;if("quaternion"===s)Ii.multiplyQuaternionsFlat(a.values,e,d,0,a.values,e);else{const t=u-2*c;for(let n=0;n<t;++n)a.values[e+n]-=d[n]}}}return t.blendMode=Fe,t}};class Ld{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let r;n:{i:if(!(t<i)){for(let r=n+2;;){if(void 0===i){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===r)break;if(s=i,i=e[++n],t<i)break e}r=e.length;break n}if(t>=s)break t;{const a=e[1];t<a&&(n=2,s=a);for(let r=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===r)break;if(i=s,s=e[--n-1],t>=s)break e}r=n,n=0}}for(;n<r;){const i=n+r>>>1;t<e[i]?r=i:n=i+1}if(i=e[n],s=e[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let t=0;t!==i;++t)e[t]=n[s+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Pd extends Ld{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:De,endingEnd:De}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,r=t+1,a=i[s],o=i[r];if(void 0===a)switch(this.getSettings_().endingStart){case Oe:s=t,a=2*e-n;break;case ze:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Oe:r=t,o=2*n-e;break;case ze:r=1,o=n+i[1]-i[0];break;default:r=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=s*c,this._offsetNext=r*c}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,v=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,_=d*f-d*m;for(let t=0;t!==a;++t)s[t]=g*r[c+t]+v*r[l+t]+y*r[o+t]+_*r[u+t];return s}}class Ud extends Ld{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),u=1-c;for(let t=0;t!==a;++t)s[t]=r[l+t]*u+r[o+t]*c;return s}}class Dd extends Ld{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Od{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ed(e,this.TimeBufferType),this.values=Ed(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Ed(t.times,Array),values:Ed(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Dd(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Ud(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Pd(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Le:e=this.InterpolantFactoryMethodDiscrete;break;case Pe:e=this.InterpolantFactoryMethodLinear;break;case Ue:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Le;case this.InterpolantFactoryMethodLinear:return Pe;case this.InterpolantFactoryMethodSmooth:return Ue}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<t;)++s;for(;-1!==r&&n[r]>e;)--r;if(++r,0!==s||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const t=this.getValueSize();this.times=n.slice(s,r),this.values=this.values.slice(s*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==s;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&Ad(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Ue,s=t.length-1;let r=1;for(let a=1;a<s;++a){let s=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(i)s=!0;else{const t=a*n,i=t-n,r=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[i+a]||n!==e[r+a]){s=!0;break}}}if(s){if(a!==r){t[r]=t[a];const i=a*n,s=r*n;for(let t=0;t!==n;++t)e[s+t]=e[i+t]}++r}}if(s>0){t[r]=t[s];for(let t=s*n,i=r*n,a=0;a!==n;++a)e[i+a]=e[t+a];++r}return r!==t.length?(this.times=t.slice(0,r),this.values=e.slice(0,r*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Od.prototype.TimeBufferType=Float32Array,Od.prototype.ValueBufferType=Float32Array,Od.prototype.DefaultInterpolation=Pe;class zd extends Od{constructor(t,e,n){super(t,e,n)}}zd.prototype.ValueTypeName="bool",zd.prototype.ValueBufferType=Array,zd.prototype.DefaultInterpolation=Le,zd.prototype.InterpolantFactoryMethodLinear=void 0,zd.prototype.InterpolantFactoryMethodSmooth=void 0;class Vd extends Od{}Vd.prototype.ValueTypeName="color";class Fd extends Od{}Fd.prototype.ValueTypeName="number";class Bd extends Ld{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let t=l+a;l!==t;l+=4)Ii.slerpFlat(s,0,r,l-a,r,l,o);return s}}class kd extends Od{InterpolantFactoryMethodLinear(t){return new Bd(this.times,this.values,this.getValueSize(),t)}}kd.prototype.ValueTypeName="quaternion",kd.prototype.InterpolantFactoryMethodSmooth=void 0;class Hd extends Od{constructor(t,e,n){super(t,e,n)}}Hd.prototype.ValueTypeName="string",Hd.prototype.ValueBufferType=Array,Hd.prototype.DefaultInterpolation=Le,Hd.prototype.InterpolantFactoryMethodLinear=void 0,Hd.prototype.InterpolantFactoryMethodSmooth=void 0;class Gd extends Od{}Gd.prototype.ValueTypeName="vector";class Wd{constructor(t="",e=-1,n=[],i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=qn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,s=n.length;t!==s;++t)e.push(jd(n[t]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(Od.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,r=[];for(let t=0;t<s;t++){let a=[],o=[];a.push((t+s-1)%s,t,(t+1)%s),o.push(0,1,0);const l=Nd(a);a=Cd(a,1,l),o=Cd(o,1,l),i||0!==a[0]||(a.push(s),o.push(o[0])),r.push(new Fd(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/n))}return new this(t,-1,r)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.name.match(s);if(r&&r.length>1){const t=r[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const r=[];for(const t in i)r.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,s){if(0!==n.length){const r=[],a=[];Rd(n,r,a,i),0!==r.length&&s.push(new t(e,r,a))}},i=[],s=t.name||"default",r=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const s=l[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const t={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let n=0;n<s[e].morphTargets.length;n++)t[s[e].morphTargets[n]]=-1;for(const n in t){const t=[],r=[];for(let i=0;i!==s[e].morphTargets.length;++i){const i=s[e];t.push(i.time),r.push(i.morphTarget===n?1:0)}i.push(new Fd(".morphTargetInfluence["+n+"]",t,r))}o=t.length*r}else{const r=".bones["+e[t].name+"]";n(Gd,r+".position",s,"pos",i),n(kd,r+".quaternion",s,"rot",i),n(Gd,r+".scale",s,"scl",i)}}if(0===i.length)return null;return new this(s,o,i,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function jd(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fd;case"vector":case"vector2":case"vector3":case"vector4":return Gd;case"color":return Vd;case"quaternion":return kd;case"bool":case"boolean":return zd;case"string":return Hd}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Rd(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Xd={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class qd{constructor(t,e,n){const i=this;let s,r=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===r&&void 0!==i.onStart&&i.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}}const Yd=new qd;class Zd{constructor(t){this.manager=void 0!==t?t:Yd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,s){n.load(t,i,e,s)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}Zd.DEFAULT_MATERIAL_NAME="__DEFAULT";const $d={};class Jd extends Error{constructor(t,e){super(t),this.response=e}}class Kd extends Zd{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Xd.get(t);if(void 0!==s)return this.manager.itemStart(t),setTimeout((()=>{e&&e(s),this.manager.itemEnd(t)}),0),s;if(void 0!==$d[t])return void $d[t].push({onLoad:e,onProgress:n,onError:i});$d[t]=[],$d[t].push({onLoad:e,onProgress:n,onError:i});const r=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(r).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=$d[t],i=e.body.getReader(),s=e.headers.get("X-File-Size")||e.headers.get("Content-Length"),r=s?parseInt(s):0,a=0!==r;let o=0;const l=new ReadableStream({start(t){!function e(){i.read().then((({done:i,value:s})=>{if(i)t.close();else{o+=s.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:r});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(s),e()}}),(e=>{t.error(e)}))}()}});return new Response(l)}throw new Jd(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,a)));case"json":return t.json();default:if(void 0===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,i=new TextDecoder(n);return t.arrayBuffer().then((t=>i.decode(t)))}}})).then((e=>{Xd.add(t,e);const n=$d[t];delete $d[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}})).catch((e=>{const n=$d[t];if(void 0===n)throw this.manager.itemError(t),e;delete $d[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Qd extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new Kd(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Wd.parse(t[n]);e.push(i)}return e}}class tp extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=[],a=new Gu,o=new Kd(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials);let l=0;function c(c){o.load(t[c],(function(t){const n=s.parse(t,!0);r[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=Mt),a.image=r,a.format=n.format,a.needsUpdate=!0,e&&e(a))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else o.load(t,(function(t){const n=s.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)r[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),r[e].format=n.format,r[e].width=n.width,r[e].height=n.height}a.image=r}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=Mt),a.format=n.format,a.needsUpdate=!0,e&&e(a)}),n,i);return a}}class ep extends Zd{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=Xd.get(t);if(void 0!==r)return s.manager.itemStart(t),setTimeout((function(){e&&e(r),s.manager.itemEnd(t)}),0),r;const a=ai("img");function o(){c(),Xd.add(t,this),e&&e(this),s.manager.itemEnd(t)}function l(e){c(),i&&i(e),s.manager.itemError(t),s.manager.itemEnd(t)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class np extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=new na;s.colorSpace=$e;const r=new ep(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function o(n){r.load(t[n],(function(t){s.images[n]=t,a++,6===a&&(s.needsUpdate=!0,e&&e(s))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return s}}class ip extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new Hc,a=new Kd(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,(function(t){let n;try{n=s.parse(t)}catch(t){if(void 0===i)return void console.error(t);i(t)}void 0!==n.image?r.image=n.image:void 0!==n.data&&(r.image.width=n.width,r.image.height=n.height,r.image.data=n.data),r.wrapS=void 0!==n.wrapS?n.wrapS:mt,r.wrapT=void 0!==n.wrapT?n.wrapT:mt,r.magFilter=void 0!==n.magFilter?n.magFilter:Mt,r.minFilter=void 0!==n.minFilter?n.minFilter:Mt,r.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(r.colorSpace=n.colorSpace),void 0!==n.flipY&&(r.flipY=n.flipY),void 0!==n.format&&(r.format=n.format),void 0!==n.type&&(r.type=n.type),void 0!==n.mipmaps&&(r.mipmaps=n.mipmaps,r.minFilter=St),1===n.mipmapCount&&(r.minFilter=Mt),void 0!==n.generateMipmaps&&(r.generateMipmaps=n.generateMipmaps),r.needsUpdate=!0,e&&e(r,n)}),n,i),r}}class sp extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=new Ti,r=new ep(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(t){s.image=t,s.needsUpdate=!0,void 0!==e&&e(s)}),n,i),s}}class rp extends Ds{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new tr(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class ap extends rp{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ds.DEFAULT_UP),this.updateMatrix(),this.groundColor=new tr(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const op=new ls,lp=new Li,cp=new Li;class up{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ti(512,512),this.map=null,this.mapPass=null,this.matrix=new ls,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ua,this._frameExtents=new ti(1,1),this._viewportCount=1,this._viewports=[new Si(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;lp.setFromMatrixPosition(t.matrixWorld),e.position.copy(lp),cp.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(cp),e.updateMatrixWorld(),op.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(op),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(op)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class hp extends up{constructor(){super(new Qr(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=2*Xn*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;n===e.fov&&i===e.aspect&&s===e.far||(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class dp extends rp{constructor(t,e,n=0,i=Math.PI/3,s=0,r=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ds.DEFAULT_UP),this.updateMatrix(),this.target=new Ds,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new hp}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const pp=new ls,mp=new Li,fp=new Li;class gp extends up{constructor(){super(new Qr(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ti(4,2),this._viewportCount=6,this._viewports=[new Si(2,1,1,1),new Si(0,1,1,1),new Si(3,1,1,1),new Si(1,1,1,1),new Si(3,0,1,1),new Si(1,0,1,1)],this._cubeDirections=[new Li(1,0,0),new Li(-1,0,0),new Li(0,0,1),new Li(0,0,-1),new Li(0,1,0),new Li(0,-1,0)],this._cubeUps=[new Li(0,1,0),new Li(0,1,0),new Li(0,1,0),new Li(0,1,0),new Li(0,0,1),new Li(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),mp.setFromMatrixPosition(t.matrixWorld),n.position.copy(mp),fp.copy(n.position),fp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(fp),n.updateMatrixWorld(),i.makeTranslation(-mp.x,-mp.y,-mp.z),pp.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pp)}}class vp extends rp{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new gp}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class yp extends up{constructor(){super(new Ea(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class _p extends rp{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ds.DEFAULT_UP),this.updateMatrix(),this.target=new Ds,this.shadow=new yp}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class xp extends rp{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Mp extends rp{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class bp{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Li)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*i),e.addScaledVector(r[2],.488603*s),e.addScaledVector(r[3],.488603*n),e.addScaledVector(r[4],n*i*1.092548),e.addScaledVector(r[5],i*s*1.092548),e.addScaledVector(r[6],.315392*(3*s*s-1)),e.addScaledVector(r[7],n*s*1.092548),e.addScaledVector(r[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*i),e.addScaledVector(r[2],1.023328*s),e.addScaledVector(r[3],1.023328*n),e.addScaledVector(r[4],.858086*n*i),e.addScaledVector(r[5],.858086*i*s),e.addScaledVector(r[6],.743125*s*s-.247708),e.addScaledVector(r[7],.858086*n*s),e.addScaledVector(r[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}class Tp extends rp{constructor(t=new bp,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Sp extends Zd{constructor(t){super(t),this.textures={}}load(t,e,n,i){const s=this,r=new Kd(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=this.createMaterialFromType(t.type);if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new tr).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.dispersion&&(i.dispersion=t.dispersion),void 0!==t.iridescence&&(i.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(i.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.anisotropy&&(i.anisotropy=t.anisotropy),void 0!==t.anisotropyRotation&&(i.anisotropyRotation=t.anisotropyRotation),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.alphaHash&&(i.alphaHash=t.alphaHash),void 0!==t.depthFunc&&(i.depthFunc=t.depthFunc),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.blendSrc&&(i.blendSrc=t.blendSrc),void 0!==t.blendDst&&(i.blendDst=t.blendDst),void 0!==t.blendEquation&&(i.blendEquation=t.blendEquation),void 0!==t.blendSrcAlpha&&(i.blendSrcAlpha=t.blendSrcAlpha),void 0!==t.blendDstAlpha&&(i.blendDstAlpha=t.blendDstAlpha),void 0!==t.blendEquationAlpha&&(i.blendEquationAlpha=t.blendEquationAlpha),void 0!==t.blendColor&&void 0!==i.blendColor&&i.blendColor.setHex(t.blendColor),void 0!==t.blendAlpha&&(i.blendAlpha=t.blendAlpha),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),void 0!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.forceSinglePass&&(i.forceSinglePass=t.forceSinglePass),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const s=t.uniforms[e];switch(i.uniforms[e]={},s.type){case"t":i.uniforms[e].value=n(s.value);break;case"c":i.uniforms[e].value=(new tr).setHex(s.value);break;case"v2":i.uniforms[e].value=(new ti).fromArray(s.value);break;case"v3":i.uniforms[e].value=(new Li).fromArray(s.value);break;case"v4":i.uniforms[e].value=(new Si).fromArray(s.value);break;case"m3":i.uniforms[e].value=(new ei).fromArray(s.value);break;case"m4":i.uniforms[e].value=(new ls).fromArray(s.value);break;default:i.uniforms[e].value=s.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(i.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.lights&&(i.lights=t.lights),void 0!==t.clipping&&(i.clipping=t.clipping),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new ti).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapRotation&&i.envMapRotation.fromArray(t.envMapRotation),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new ti).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(i.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=n(t.thicknessMap)),void 0!==t.anisotropyMap&&(i.anisotropyMap=n(t.anisotropyMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Sp.createMaterialFromType(t)}static createMaterialFromType(t){return new{ShadowMaterial:gd,SpriteMaterial:dc,RawShaderMaterial:vd,ShaderMaterial:Yr,PointsMaterial:Uu,MeshPhysicalMaterial:_d,MeshStandardMaterial:yd,MeshPhongMaterial:xd,MeshToonMaterial:Md,MeshNormalMaterial:bd,MeshLambertMaterial:Td,MeshDepthMaterial:Bl,MeshDistanceMaterial:kl,MeshBasicMaterial:sr,MeshMatcapMaterial:Sd,LineDashedMaterial:wd,LineBasicMaterial:xu,Material:ir}[t]}}class wp{static decodeText(t){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),"undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Ep extends Cr{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Ap extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new Kd(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)}parse(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const s=t.interleavedBuffers[i],r=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers,s=i[e],r=new Uint32Array(s).buffer;return n[e]=r,r}(t,s.buffer),a=ri(s.type,r),o=new cc(a,s.stride);return o.uuid=s.uuid,e[i]=o,o}const s=t.isInstancedBufferGeometry?new Ep:new Cr,r=t.data.index;if(void 0!==r){const t=ri(r.type,r.array);s.setIndex(new dr(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let r;if(n.isInterleavedBufferAttribute){const e=i(t.data,n.data);r=new hc(e,n.itemSize,n.offset,n.normalized)}else{const t=ri(n.type,n.array);r=new(n.isInstancedBufferAttribute?Xc:dr)(t,n.itemSize,n.normalized)}void 0!==n.name&&(r.name=n.name),void 0!==n.usage&&r.setUsage(n.usage),s.setAttribute(e,r)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],r=[];for(let e=0,s=n.length;e<s;e++){const s=n[e];let a;if(s.isInterleavedBufferAttribute){const e=i(t.data,s.data);a=new hc(e,s.itemSize,s.offset,s.normalized)}else{const t=ri(s.type,s.array);a=new dr(t,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),r.push(a)}s.morphAttributes[e]=r}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];s.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new Li;void 0!==c.center&&t.fromArray(c.center),s.boundingSphere=new Qi(t,c.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}}class Np extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=""===this.path?wp.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||r;const a=new Kd(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){let r=null;try{r=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=r.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+t)),void console.error("THREE.ObjectLoader: Can't load "+t);s.parse(r,e)}),n,i)}async loadAsync(t,e){const n=""===this.path?wp.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const i=new Kd(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const s=await i.loadAsync(t,e),r=JSON.parse(s),a=r.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(r)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,i),r=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,r),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,s,o,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),this.bindLightTargets(l),void 0!==e){let t=!1;for(const e in r)if(r[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),s=await this.parseImagesAsync(t.images),r=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,r),o=this.parseObject(t.object,i,a,r,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),this.bindLightTargets(o),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new Ah).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse((function(t){t.isBone&&(i[t.uuid]=t)})),void 0!==t)for(let e=0,s=t.length;e<s;e++){const s=(new jc).fromJSON(t[e],i);n[s.uuid]=s}return n}parseGeometries(t,e){const n={};if(void 0!==t){const i=new Ap;for(let s=0,r=t.length;s<r;s++){let r;const a=t[s];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":r=i.parse(a);break;default:a.type in fd?r=fd[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}r.uuid=a.uuid,void 0!==a.name&&(r.name=a.name),void 0!==a.userData&&(r.userData=a.userData),n[a.uuid]=r}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const s=new Sp;s.setTextures(e);for(let e=0,r=t.length;e<r;e++){const r=t[e];void 0===n[r.uuid]&&(n[r.uuid]=s.parse(r)),i[r.uuid]=n[r.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],s=Wd.parse(i);e[s.uuid]=s}return e}parseImages(t,e){const n=this,i={};let s;function r(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),s.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:ri(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new qd(e);s=new ep(n),s.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=r(s[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new Hc(n.data,n.width,n.height)))}i[n.uuid]=new xi(t)}else{const t=r(n.url);i[n.uuid]=new xi(t)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function s(t){if("string"==typeof t){const n=t,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await i.loadAsync(s)}return t.data?{data:ri(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){i=new ep(this.manager),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.url;if(Array.isArray(r)){const t=[];for(let e=0,n=r.length;e<n;e++){const n=r[e],i=await s(n);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new Hc(i.data,i.width,i.height)))}n[i.uuid]=new xi(t)}else{const t=await s(i.url);n[i.uuid]=new xi(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let s=0,r=t.length;s<r;s++){const r=t[s];void 0===r.image&&console.warn('THREE.ObjectLoader: No "image" specified for',r.uuid),void 0===e[r.image]&&console.warn("THREE.ObjectLoader: Undefined image",r.image);const a=e[r.image],o=a.data;let l;Array.isArray(o)?(l=new na,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new Hc:new Ti,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=r.uuid,void 0!==r.name&&(l.name=r.name),void 0!==r.mapping&&(l.mapping=n(r.mapping,Cp)),void 0!==r.channel&&(l.channel=r.channel),void 0!==r.offset&&l.offset.fromArray(r.offset),void 0!==r.repeat&&l.repeat.fromArray(r.repeat),void 0!==r.center&&l.center.fromArray(r.center),void 0!==r.rotation&&(l.rotation=r.rotation),void 0!==r.wrap&&(l.wrapS=n(r.wrap[0],Rp),l.wrapT=n(r.wrap[1],Rp)),void 0!==r.format&&(l.format=r.format),void 0!==r.internalFormat&&(l.internalFormat=r.internalFormat),void 0!==r.type&&(l.type=r.type),void 0!==r.colorSpace&&(l.colorSpace=r.colorSpace),void 0!==r.minFilter&&(l.minFilter=n(r.minFilter,Ip)),void 0!==r.magFilter&&(l.magFilter=n(r.magFilter,Ip)),void 0!==r.anisotropy&&(l.anisotropy=r.anisotropy),void 0!==r.flipY&&(l.flipY=r.flipY),void 0!==r.generateMipmaps&&(l.generateMipmaps=r.generateMipmaps),void 0!==r.premultiplyAlpha&&(l.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(l.unpackAlignment=r.unpackAlignment),void 0!==r.compareFunction&&(l.compareFunction=r.compareFunction),void 0!==r.userData&&(l.userData=r.userData),i[r.uuid]=l}return i}parseObject(t,e,n,i,s){let r,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];void 0===n[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),e.push(n[s])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function u(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),i[t]}switch(t.type){case"Scene":r=new lc,void 0!==t.background&&(Number.isInteger(t.background)?r.background=new tr(t.background):r.background=u(t.background)),void 0!==t.environment&&(r.environment=u(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new oc(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new ac(t.fog.color,t.fog.density)),""!==t.fog.name&&(r.fog.name=t.fog.name)),void 0!==t.backgroundBlurriness&&(r.backgroundBlurriness=t.backgroundBlurriness),void 0!==t.backgroundIntensity&&(r.backgroundIntensity=t.backgroundIntensity),void 0!==t.backgroundRotation&&r.backgroundRotation.fromArray(t.backgroundRotation),void 0!==t.environmentIntensity&&(r.environmentIntensity=t.environmentIntensity),void 0!==t.environmentRotation&&r.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":r=new Qr(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new Ea(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new xp(t.color,t.intensity);break;case"DirectionalLight":r=new _p(t.color,t.intensity),r.target=t.target||"";break;case"PointLight":r=new vp(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new Mp(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new dp(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),r.target=t.target||"";break;case"HemisphereLight":r=new ap(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=(new Tp).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=c(t.material),r=new Bc(a,o),void 0!==t.bindMode&&(r.bindMode=t.bindMode),void 0!==t.bindMatrix&&r.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(r.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=c(t.material),r=new kr(a,o);break;case"InstancedMesh":a=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;r=new tu(a,o,e),r.instanceMatrix=new Xc(new Float32Array(n.array),16),void 0!==i&&(r.instanceColor=new Xc(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":a=l(t.geometry),o=c(t.material),r=new _u(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,o),r.geometry=a,r.perObjectFrustumCulled=t.perObjectFrustumCulled,r.sortObjects=t.sortObjects,r._drawRanges=t.drawRanges,r._reservedRanges=t.reservedRanges,r._visibility=t.visibility,r._active=t.active,r._bounds=t.bounds.map((t=>{const e=new Di;e.min.fromArray(t.boxMin),e.max.fromArray(t.boxMax);const n=new Qi;return n.radius=t.sphereRadius,n.center.fromArray(t.sphereCenter),{boxInitialized:t.boxInitialized,box:e,sphereInitialized:t.sphereInitialized,sphere:n}})),r._maxInstanceCount=t.maxInstanceCount,r._maxVertexCount=t.maxVertexCount,r._maxIndexCount=t.maxIndexCount,r._geometryInitialized=t.geometryInitialized,r._geometryCount=t.geometryCount,r._matricesTexture=u(t.matricesTexture.uuid),void 0!==t.colorsTexture&&(r._colorsTexture=u(t.colorsTexture.uuid));break;case"LOD":r=new Rc;break;case"Line":r=new Nu(l(t.geometry),c(t.material));break;case"LineLoop":r=new Pu(l(t.geometry),c(t.material));break;case"LineSegments":r=new Lu(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":r=new Fu(l(t.geometry),c(t.material));break;case"Sprite":r=new Ec(c(t.material));break;case"Group":r=new $l;break;case"Bone":r=new kc;break;default:r=new Ds}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.up&&r.up.fromArray(t.up),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.intensity&&(r.shadow.intensity=t.shadow.intensity),void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(r.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)r.add(this.parseObject(a[t],e,n,i,s))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];r.animations.push(s[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=r.getObjectByProperty("uuid",n.object);void 0!==i&&r.addLevel(i,n.distance,n.hysteresis)}}return r}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}bindLightTargets(t){t.traverse((function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);e.target=void 0!==i?i:new Ds}}))}}const Cp={UVMapping:ot,CubeReflectionMapping:lt,CubeRefractionMapping:ct,EquirectangularReflectionMapping:ut,EquirectangularRefractionMapping:ht,CubeUVReflectionMapping:dt},Rp={RepeatWrapping:pt,ClampToEdgeWrapping:mt,MirroredRepeatWrapping:ft},Ip={NearestFilter:gt,NearestMipmapNearestFilter:vt,NearestMipmapLinearFilter:_t,LinearFilter:Mt,LinearMipmapNearestFilter:bt,LinearMipmapLinearFilter:St};class Lp extends Zd{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=Xd.get(t);if(void 0!==r)return s.manager.itemStart(t),r.then?void r.then((n=>{e&&e(n),s.manager.itemEnd(t)})).catch((t=>{i&&i(t)})):(setTimeout((function(){e&&e(r),s.manager.itemEnd(t)}),0),r);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader;const o=fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(s.options,{colorSpaceConversion:"none"}))})).then((function(n){return Xd.add(t,n),e&&e(n),s.manager.itemEnd(t),n})).catch((function(e){i&&i(e),Xd.remove(t),s.manager.itemError(t),s.manager.itemEnd(t)}));Xd.add(t,o),s.manager.itemStart(t)}}let Pp;class Up{static getContext(){return void 0===Pp&&(Pp=new(window.AudioContext||window.webkitAudioContext)),Pp}static setContext(t){Pp=t}}class Dp extends Zd{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new Kd(this.manager);function a(e){i?i(e):console.error(e),s.manager.itemError(t)}r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(t){try{const n=t.slice(0);Up.getContext().decodeAudioData(n,(function(t){e(t)})).catch(a)}catch(t){a(t)}}),n,i)}}const Op=new ls,zp=new ls,Vp=new ls;class Fp{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Qr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Qr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Vp.copy(t.projectionMatrix);const n=e.eyeSep/2,i=n*e.near/e.focus,s=e.near*Math.tan(jn*e.fov*.5)/e.zoom;let r,a;zp.elements[12]=-n,Op.elements[12]=n,r=-s*e.aspect+i,a=s*e.aspect+i,Vp.elements[0]=2*e.near/(a-r),Vp.elements[8]=(a+r)/(a-r),this.cameraL.projectionMatrix.copy(Vp),r=-s*e.aspect-i,a=s*e.aspect-i,Vp.elements[0]=2*e.near/(a-r),Vp.elements[8]=(a+r)/(a-r),this.cameraR.projectionMatrix.copy(Vp)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(zp),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Op)}}class Bp{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=kp(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=kp();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function kp(){return performance.now()}const Hp=new Li,Gp=new Ii,Wp=new Li,jp=new Li;class Xp extends Ds{constructor(){super(),this.type="AudioListener",this.context=Up.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Bp}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Hp,Gp,Wp),Number.isFinite(Hp.x)&&Number.isFinite(Hp.y)&&Number.isFinite(Hp.z))if(jp.set(0,0,-1).applyQuaternion(Gp),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Hp.x,t),e.positionY.linearRampToValueAtTime(Hp.y,t),e.positionZ.linearRampToValueAtTime(Hp.z,t),e.forwardX.linearRampToValueAtTime(jp.x,t),e.forwardY.linearRampToValueAtTime(jp.y,t),e.forwardZ.linearRampToValueAtTime(jp.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Hp.x,Hp.y,Hp.z),e.setOrientation(jp.x,jp.y,jp.z,n.x,n.y,n.z)}}class qp extends Ds{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||(this.buffer?this.buffer.duration:Number.MAX_VALUE))),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(t=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Yp=new Li,Zp=new Ii,$p=new Li,Jp=new Li;class Kp extends qp{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Yp,Zp,$p),Jp.set(0,0,1).applyQuaternion(Zp);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Yp.x,t),e.positionY.linearRampToValueAtTime(Yp.y,t),e.positionZ.linearRampToValueAtTime(Yp.z,t),e.orientationX.linearRampToValueAtTime(Jp.x,t),e.orientationY.linearRampToValueAtTime(Jp.y,t),e.orientationZ.linearRampToValueAtTime(Jp.z,t)}else e.setPosition(Yp.x,Yp.y,Yp.z),e.setOrientation(Jp.x,Jp.y,Jp.z)}}class Qp{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class tm{constructor(t,e,n){let i,s,r;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==i;++t)n[s+t]=n[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(n,s,0,t,i)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-s,e)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,s=e+e;t!==s;++t)if(n[t]!==n[t+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,s=i;t!==s;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let i=0;i!==s;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){Ii.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const r=this._workIndex*s;Ii.multiplyQuaternionsFlat(t,r,t,e,t,n),Ii.slerpFlat(t,e,t,e,t,r,i)}_lerp(t,e,n,i,s){const r=1-i;for(let a=0;a!==s;++a){const s=e+a;t[s]=t[s]*r+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let r=0;r!==s;++r){const s=e+r;t[s]=t[s]+t[n+r]*i}}}const em="\\[\\]\\.:\\/",nm=new RegExp("["+em+"]","g"),im="[^"+em+"]",sm="[^"+em.replace("\\.","")+"]",rm=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",im)+/(WCOD+)?/.source.replace("WCOD",sm)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",im)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",im)+"$"),am=["material","materials","bones","map"];class om{constructor(t,e,n){this.path=e,this.parsedPath=n||om.parseTrackName(e),this.node=om.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new om.Composite(t,e,n):new om(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(nm,"")}static parseTrackName(t){const e=rm.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==am.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t,i){for(let s=0;s<t.length;s++){const r=t[s];if(!(i||r.name!==e&&r.uuid!==e))return r;if(i&&r.userData&&r.userData.name===e)return r;const a=n(r.children,i);if(a)return a}return null},i=n(t.children);if(i)return i;{const e=n(t.children,!0);if(e)return e}}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=om.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[s]&&(s=t.morphTargetDictionary[s])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}om.Composite=class{constructor(t,e,n){const i=n||om.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},om.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},om.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},om.prototype.GetterByBindingType=[om.prototype._getValue_direct,om.prototype._getValue_array,om.prototype._getValue_arrayElement,om.prototype._getValue_toArray],om.prototype.SetterByBindingTypeAndVersioning=[[om.prototype._setValue_direct,om.prototype._setValue_direct_setNeedsUpdate,om.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[om.prototype._setValue_array,om.prototype._setValue_array_setNeedsUpdate,om.prototype._setValue_array_setMatrixWorldNeedsUpdate],[om.prototype._setValue_arrayElement,om.prototype._setValue_arrayElement_setNeedsUpdate,om.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[om.prototype._setValue_fromArray,om.prototype._setValue_fromArray_setNeedsUpdate,om.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class lm{constructor(){this.isAnimationObjectGroup=!0,this.uuid=qn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,r=s.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],h=u.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(u);for(let t=0,e=r;t!==e;++t)s[t].push(new om(u,n[t],i[t]))}else if(d<l){a=t[d];const o=--l,c=t[o];e[c.uuid]=d,t[d]=c,e[h]=o,t[o]=u;for(let t=0,e=r;t!==e;++t){const e=s[t],r=e[o];let a=e[d];e[d]=r,void 0===a&&(a=new om(u,n[t],i[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const a=arguments[r],o=a.uuid,l=e[o];if(void 0!==l&&l>=s){const r=s++,c=t[r];e[c.uuid]=l,t[l]=c,e[o]=r,t[r]=a;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[r],s=e[l];e[l]=i,e[r]=s}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,r=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<s){const a=--s,o=t[a],c=--r,u=t[c];e[o.uuid]=l,t[l]=o,e[u.uuid]=a,t[a]=u,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[a],s=e[c];e[l]=i,e[a]=s,e.pop()}}else{const s=--r,a=t[s];s>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[l]=e[s],e.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(void 0!==i)return s[i];const r=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,u=new Array(l);i=s.length,n[t]=i,r.push(t),a.push(e),s.push(u);for(let n=c,i=o.length;n!==i;++n){const i=o[n];u[n]=new om(i,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,o=r[a];e[t[a]]=n,r[n]=o,r.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class cm{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,r=s.length,a=new Array(r),o={endingStart:De,endingEnd:De};for(let t=0;t!==r;++t){const e=s[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,s=i/n,r=n/i;t.warp(1,s,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,r=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,o[1]=s+n,l[0]=t/r,l[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const s=this._startTime;if(null!==s){const i=(t-s)*n;i<0||0===n?e=0:(this._startTime=null,e=n*i)}e*=this._updateTimeScale(t);const r=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===Fe)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(r),e[n].accumulateAdditive(a);else for(let n=0,s=t.length;n!==s;++n)t[n].evaluate(r),e[n].accumulate(i,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const r=2202===n;if(0===t)return-1===s||!r||1&~s?i:e-i;if(2200===n){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===s&&(t>=0?(s=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,s+=Math.abs(n);const a=this.repetitions-s;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(r&&!(1&~s))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Oe,i.endingEnd=Oe):(i.endingStart=t?this.zeroSlopeAtStart?Oe:De:ze,i.endingEnd=e?this.zeroSlopeAtEnd?Oe:De:ze)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,o=r.sampleValues;return a[0]=s,o[0]=e,a[1]=s+t,o[1]=n,this}}const um=new Float32Array(1);class hm extends Hn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,r=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==s;++t){const s=i[t],l=s.name;let u=c[l];if(void 0!==u)++u.referenceCount,r[t]=u;else{if(u=r[t],void 0!==u){null===u._cacheIndex&&(++u.referenceCount,this._addInactiveBinding(u,o,l));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;u=new tm(om.create(n,l,i),s.ValueTypeName,s.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,o,l),r[t]=u}a[t].resultBuffer=u.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let r=s[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,r=this._actionsByClip,a=r[s],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete r[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let r=i[e];void 0===r&&(r={},i[e]=r),r[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,r=this._bindingsByRootAndName,a=r[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[s],0===Object.keys(a).length&&delete r[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Ud(new Float32Array(2),new Float32Array(2),1,um),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let r="string"==typeof t?Wd.findByName(i,t):t;const a=null!==r?r.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==r?r.blendMode:Ve),void 0!==o){const t=o.actionByRoot[s];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===r&&(r=l._clip)}if(null===r)return null;const c=new cm(this,r,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,s),c}existingAction(t,e){const n=e||this._root,i=n.uuid,s="string"==typeof t?Wd.findByName(n,t):t,r=s?s.uuid:t,a=this._actionsByClip[r];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),r=this._accuIndex^=1;for(let a=0;a!==n;++a){e[a]._update(i,t,s,r)}const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(void 0!==s){const t=s.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const s=i._cacheIndex,r=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=s,e[s]=r,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}let dm=class t{constructor(t){this.value=t}clone(){return new t(void 0===this.value.clone?this.value:this.value.clone())}},pm=0;class mm extends Hn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:pm++}),this.name="",this.usage=Cn,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,n=e.length;t<n;t++){const n=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0;t<n.length;t++)this.uniforms.push(n[t].clone())}return this}clone(){return(new this.constructor).copy(this)}}class fm extends cc{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class gm{constructor(t,e,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const vm=new ls;class ym{constructor(t,e,n=0,i=1/0){this.ray=new os(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new _s,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return vm.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(vm),this}intersectObject(t,e=!0,n=[]){return xm(t,this,n,e),n.sort(_m),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)xm(t[i],this,n,e);return n.sort(_m),n}}function _m(t,e){return t.distance-e.distance}function xm(t,e,n,i){let s=!0;if(t.layers.test(e.layers)){!1===t.raycast(e,n)&&(s=!1)}if(!0===s&&!0===i){const i=t.children;for(let t=0,s=i.length;t<s;t++)xm(i[t],e,n,!0)}}class Mm{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Yn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class bm{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}class Tm{constructor(t,e,n,i){Tm.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==t&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const s=this.elements;return s[0]=t,s[2]=e,s[1]=n,s[3]=i,this}}const Sm=new ti;class wm{constructor(t=new ti(1/0,1/0),e=new ti(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Sm.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Sm).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Em=new Li,Am=new Li;class Nm{constructor(t=new Li,e=new Li){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Em.subVectors(t,this.start),Am.subVectors(this.end,this.start);const n=Am.dot(Am);let i=Am.dot(Em)/n;return e&&(i=Yn(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Cm=new Li;class Rm extends Ds{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Cr,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const s=t/n*Math.PI*2,r=e/n*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(r),Math.sin(r),1)}n.setAttribute("position",new Mr(i,3));const s=new xu({fog:!1,toneMapped:!1});this.cone=new Lu(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Cm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Cm),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Im=new Li,Lm=new ls,Pm=new ls;class Um extends Lu{constructor(t){const e=Dm(t),n=new Cr,i=[],s=[],r=new tr(0,0,1),a=new tr(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(r.r,r.g,r.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Mr(i,3)),n.setAttribute("color",new Mr(s,3));super(n,new xu({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Pm.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const s=e[t];s.parent&&s.parent.isBone&&(Lm.multiplyMatrices(Pm,s.matrixWorld),Im.setFromMatrixPosition(Lm),i.setXYZ(n,Im.x,Im.y,Im.z),Lm.multiplyMatrices(Pm,s.parent.matrixWorld),Im.setFromMatrixPosition(Lm),i.setXYZ(n+1,Im.x,Im.y,Im.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Dm(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Dm(t.children[n]));return e}class Om extends kr{constructor(t,e,n){super(new ld(e,4,2),new sr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const zm=new Li,Vm=new tr,Fm=new tr;class Bm extends Ds{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new rd(e);i.rotateY(.5*Math.PI),this.material=new sr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),r=new Float32Array(3*s.count);i.setAttribute("color",new dr(r,3)),this.add(new kr(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Vm.copy(this.light.color),Fm.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?Vm:Fm;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(zm.setFromMatrixPosition(this.light.matrixWorld).negate())}}class km extends Lu{constructor(t=10,e=10,n=4473924,i=8947848){n=new tr(n),i=new tr(i);const s=e/2,r=t/e,a=t/2,o=[],l=[];for(let t=0,c=0,u=-a;t<=e;t++,u+=r){o.push(-a,0,u,a,0,u),o.push(u,0,-a,u,0,a);const e=t===s?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Cr;c.setAttribute("position",new Mr(o,3)),c.setAttribute("color",new Mr(l,3));super(c,new xu({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Hm extends Lu{constructor(t=10,e=16,n=8,i=64,s=4473924,r=8947848){s=new tr(s),r=new tr(r);const a=[],o=[];if(e>1)for(let n=0;n<e;n++){const i=n/e*(2*Math.PI),l=Math.sin(i)*t,c=Math.cos(i)*t;a.push(0,0,0),a.push(l,0,c);const u=1&n?s:r;o.push(u.r,u.g,u.b),o.push(u.r,u.g,u.b)}for(let e=0;e<n;e++){const l=1&e?s:r,c=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*c,s=Math.cos(e)*c;a.push(n,0,s),o.push(l.r,l.g,l.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*c,s=Math.cos(e)*c,a.push(n,0,s),o.push(l.r,l.g,l.b)}}const l=new Cr;l.setAttribute("position",new Mr(a,3)),l.setAttribute("color",new Mr(o,3));super(l,new xu({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Gm=new Li,Wm=new Li,jm=new Li;class Xm extends Ds{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===e&&(e=1);let i=new Cr;i.setAttribute("position",new Mr([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new xu({fog:!1,toneMapped:!1});this.lightPlane=new Nu(i,s),this.add(this.lightPlane),i=new Cr,i.setAttribute("position",new Mr([0,0,0,0,0,1],3)),this.targetLine=new Nu(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Gm.setFromMatrixPosition(this.light.matrixWorld),Wm.setFromMatrixPosition(this.light.target.matrixWorld),jm.subVectors(Wm,Gm),this.lightPlane.lookAt(Wm),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Wm),this.targetLine.scale.z=jm.length()}}const qm=new Li,Ym=new Zr;class Zm extends Lu{constructor(t){const e=new Cr,n=new xu({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],r={};function a(t,e){o(t),o(e)}function o(t){i.push(0,0,0),s.push(0,0,0),void 0===r[t]&&(r[t]=[]),r[t].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Mr(i,3)),e.setAttribute("color",new Mr(s,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const l=new tr(16755200),c=new tr(16711680),u=new tr(43775),h=new tr(16777215),d=new tr(3355443);this.setColors(l,c,u,h,d)}setColors(t,e,n,i,s){const r=this.geometry.getAttribute("color");r.setXYZ(0,t.r,t.g,t.b),r.setXYZ(1,t.r,t.g,t.b),r.setXYZ(2,t.r,t.g,t.b),r.setXYZ(3,t.r,t.g,t.b),r.setXYZ(4,t.r,t.g,t.b),r.setXYZ(5,t.r,t.g,t.b),r.setXYZ(6,t.r,t.g,t.b),r.setXYZ(7,t.r,t.g,t.b),r.setXYZ(8,t.r,t.g,t.b),r.setXYZ(9,t.r,t.g,t.b),r.setXYZ(10,t.r,t.g,t.b),r.setXYZ(11,t.r,t.g,t.b),r.setXYZ(12,t.r,t.g,t.b),r.setXYZ(13,t.r,t.g,t.b),r.setXYZ(14,t.r,t.g,t.b),r.setXYZ(15,t.r,t.g,t.b),r.setXYZ(16,t.r,t.g,t.b),r.setXYZ(17,t.r,t.g,t.b),r.setXYZ(18,t.r,t.g,t.b),r.setXYZ(19,t.r,t.g,t.b),r.setXYZ(20,t.r,t.g,t.b),r.setXYZ(21,t.r,t.g,t.b),r.setXYZ(22,t.r,t.g,t.b),r.setXYZ(23,t.r,t.g,t.b),r.setXYZ(24,e.r,e.g,e.b),r.setXYZ(25,e.r,e.g,e.b),r.setXYZ(26,e.r,e.g,e.b),r.setXYZ(27,e.r,e.g,e.b),r.setXYZ(28,e.r,e.g,e.b),r.setXYZ(29,e.r,e.g,e.b),r.setXYZ(30,e.r,e.g,e.b),r.setXYZ(31,e.r,e.g,e.b),r.setXYZ(32,n.r,n.g,n.b),r.setXYZ(33,n.r,n.g,n.b),r.setXYZ(34,n.r,n.g,n.b),r.setXYZ(35,n.r,n.g,n.b),r.setXYZ(36,n.r,n.g,n.b),r.setXYZ(37,n.r,n.g,n.b),r.setXYZ(38,i.r,i.g,i.b),r.setXYZ(39,i.r,i.g,i.b),r.setXYZ(40,s.r,s.g,s.b),r.setXYZ(41,s.r,s.g,s.b),r.setXYZ(42,s.r,s.g,s.b),r.setXYZ(43,s.r,s.g,s.b),r.setXYZ(44,s.r,s.g,s.b),r.setXYZ(45,s.r,s.g,s.b),r.setXYZ(46,s.r,s.g,s.b),r.setXYZ(47,s.r,s.g,s.b),r.setXYZ(48,s.r,s.g,s.b),r.setXYZ(49,s.r,s.g,s.b),r.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;Ym.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),$m("c",e,t,Ym,0,0,-1),$m("t",e,t,Ym,0,0,1),$m("n1",e,t,Ym,-1,-1,-1),$m("n2",e,t,Ym,1,-1,-1),$m("n3",e,t,Ym,-1,1,-1),$m("n4",e,t,Ym,1,1,-1),$m("f1",e,t,Ym,-1,-1,1),$m("f2",e,t,Ym,1,-1,1),$m("f3",e,t,Ym,-1,1,1),$m("f4",e,t,Ym,1,1,1),$m("u1",e,t,Ym,.7,1.1,-1),$m("u2",e,t,Ym,-.7,1.1,-1),$m("u3",e,t,Ym,0,2,-1),$m("cf1",e,t,Ym,-1,0,1),$m("cf2",e,t,Ym,1,0,1),$m("cf3",e,t,Ym,0,-1,1),$m("cf4",e,t,Ym,0,1,1),$m("cn1",e,t,Ym,-1,0,-1),$m("cn2",e,t,Ym,1,0,-1),$m("cn3",e,t,Ym,0,-1,-1),$m("cn4",e,t,Ym,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function $m(t,e,n,i,s,r,a){qm.set(s,r,a).unproject(i);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],qm.x,qm.y,qm.z)}}const Jm=new Di;class Km extends Lu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new Cr;s.setIndex(new dr(n,1)),s.setAttribute("position",new dr(i,3)),super(s,new xu({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Jm.setFromObject(this.object),Jm.isEmpty())return;const e=Jm.min,n=Jm.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=e.x,s[4]=n.y,s[5]=n.z,s[6]=e.x,s[7]=e.y,s[8]=n.z,s[9]=n.x,s[10]=e.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=e.z,s[15]=e.x,s[16]=n.y,s[17]=e.z,s[18]=e.x,s[19]=e.y,s[20]=e.z,s[21]=n.x,s[22]=e.y,s[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Qm extends Lu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Cr;i.setIndex(new dr(n,1)),i.setAttribute("position",new Mr([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new xu({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class tf extends Nu{constructor(t,e=1,n=16776960){const i=n,s=new Cr;s.setAttribute("position",new Mr([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),s.computeBoundingSphere(),super(s,new xu({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const r=new Cr;r.setAttribute("position",new Mr([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new kr(r,new sr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const ef=new Li;let nf,sf;class rf extends Ds{constructor(t=new Li(0,0,1),e=new Li(0,0,0),n=1,i=16776960,s=.2*n,r=.2*s){super(),this.type="ArrowHelper",void 0===nf&&(nf=new Cr,nf.setAttribute("position",new Mr([0,0,0,0,1,0],3)),sf=new yh(0,.5,1,5,1),sf.translate(0,-.5,0)),this.position.copy(e),this.line=new Nu(nf,new xu({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new kr(sf,new sr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,r)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{ef.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(ef,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class af extends Lu{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Cr;n.setAttribute("position",new Mr(e,3)),n.setAttribute("color",new Mr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new xu({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const i=new tr,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class of{constructor(){this.type="ShapePath",this.color=new tr,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new mh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,r){return this.currentPath.bezierCurveTo(t,e,n,i,s,r),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let i=!1;for(let s=n-1,r=0;r<n;s=r++){let n=e[s],a=e[r],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[r],o=-o,a=e[s],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return i}const n=Qh.isClockWise,i=this.subPaths;if(0===i.length)return[];let s,r,a;const o=[];if(1===i.length)return r=i[0],a=new Ah,a.curves=r.curves,o.push(a),o;let l=!n(i[0].getPoints());l=t?!l:l;const c=[],u=[];let h,d,p=[],m=0;u[m]=void 0,p[m]=[];for(let e=0,a=i.length;e<a;e++)r=i[e],h=r.getPoints(),s=n(h),s=t?!s:s,s?(!l&&u[m]&&m++,u[m]={s:new Ah,p:h},u[m].s.curves=r.curves,l&&m++,p[m]=[]):p[m].push({h:r,p:h[0]});if(!u[0])return function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],s=new Ah;s.curves=i.curves,e.push(s)}return e}(i);if(u.length>1){let t=!1,n=0;for(let t=0,e=u.length;t<e;t++)c[t]=[];for(let i=0,s=u.length;i<s;i++){const s=p[i];for(let r=0;r<s.length;r++){const a=s[r];let o=!0;for(let s=0;s<u.length;s++)e(a.p,u[s].p)&&(i!==s&&n++,o?(o=!1,c[s].push(a)):t=!0);o&&c[i].push(a)}}n>0&&!1===t&&(p=c)}for(let t=0,e=u.length;t<e;t++){a=u[t].s,o.push(a),d=p[t];for(let t=0,e=d.length;t<e;t++)a.holes.push(d[t].h)}return o}}class lf extends Hn{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class cf extends Ei{constructor(t=1,e=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(t,e,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}const uf=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class hf{constructor(t){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(t),this.hasAnimation=!0===t.object.isSkinnedMesh,this.refreshUniforms=uf,this.renderId=0}firstInitialization(t){return!1===this.renderObjects.has(t)&&(this.getRenderObjectData(t),!0)}getRenderObjectData(t){let e=this.renderObjects.get(t);return void 0===e&&(e={material:this.getMaterialData(t.material),worldMatrix:t.object.matrixWorld.clone()},t.object.center&&(e.center=t.object.center.clone()),t.object.morphTargetInfluences&&(e.morphTargetInfluences=t.object.morphTargetInfluences.slice()),null!==t.bundle&&(e.version=t.bundle.version),this.renderObjects.set(t,e)),e}containsNode(t){const e=t.material;for(const t in e)if(e[t]&&e[t].isNode)return!0;return null!==t.renderer.nodes.modelViewMatrix||null!==t.renderer.nodes.modelNormalViewMatrix}getMaterialData(t){const e={};for(const n of this.refreshUniforms){const i=t[n];null!=i&&("object"==typeof i&&void 0!==i.clone?!0===i.isTexture?e[n]={id:i.id,version:i.version}:e[n]=i.clone():e[n]=i)}return e}equals(t){const{object:e,material:n}=t,i=this.getRenderObjectData(t);if(!0!==i.worldMatrix.equals(e.matrixWorld))return i.worldMatrix.copy(e.matrixWorld),!1;const s=i.material;for(const t in s){const e=s[t],i=n[t];if(void 0!==e.equals){if(!1===e.equals(i))return e.copy(i),!1}else if(!0===i.isTexture){if(e.id!==i.id||e.version!==i.version)return e.id=i.id,e.version=i.version,!1}else if(e!==i)return s[t]=i,!1}if(i.morphTargetInfluences){let t=!1;for(let n=0;n<i.morphTargetInfluences.length;n++)i.morphTargetInfluences[n]!==e.morphTargetInfluences[n]&&(t=!0);if(t)return!0}return i.center&&!1===i.center.equals(e.center)?(i.center.copy(e.center),!0):(null!==t.bundle&&(i.version=t.bundle.version),!0)}needsRefresh(t,e){if(this.hasNode||this.hasAnimation||this.firstInitialization(t))return!0;const{renderId:n}=e;if(this.renderId!==n)return this.renderId=n,!0;const i=!0===t.object.static,s=null!==t.bundle&&!0===t.bundle.static&&this.getRenderObjectData(t).version===t.bundle.version;if(i||s)return!1;return!0!==this.equals(t)}}function df(t,e=0){let n=3735928559^e,i=1103547991^e;if(t instanceof Array)for(let e,s=0;s<t.length;s++)e=t[s],n=Math.imul(n^e,2654435761),i=Math.imul(i^e,1597334677);else for(let e,s=0;s<t.length;s++)e=t.charCodeAt(s),n=Math.imul(n^e,2654435761),i=Math.imul(i^e,1597334677);return n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)}const pf=t=>df(t),mf=t=>df(t),ff=(...t)=>df(t);function gf(t,e=!1){const n=[];!0===t.isNode&&(n.push(t.id),t=t.getSelf());for(const{property:i,childNode:s}of vf(t))n.push(n,df(i.slice(0,-4)),s.getCacheKey(e));return df(n)}function*vf(t,e=!1){for(const n in t){if(!0===n.startsWith("_"))continue;const i=t[n];if(!0===Array.isArray(i))for(let t=0;t<i.length;t++){const s=i[t];s&&(!0===s.isNode||e&&"function"==typeof s.toJSON)&&(yield{property:n,index:t,childNode:s})}else if(i&&!0===i.isNode)yield{property:n,childNode:i};else if("object"==typeof i)for(const t in i){const s=i[t];s&&(!0===s.isNode||e&&"function"==typeof s.toJSON)&&(yield{property:n,index:t,childNode:s})}}}function yf(t){if(null==t)return null;const e=typeof t;return!0===t.isNode?"node":"number"===e?"float":"boolean"===e?"bool":"string"===e?"string":"function"===e?"shader":!0===t.isVector2?"vec2":!0===t.isVector3?"vec3":!0===t.isVector4?"vec4":!0===t.isMatrix3?"mat3":!0===t.isMatrix4?"mat4":!0===t.isColor?"color":t instanceof ArrayBuffer?"ArrayBuffer":null}function _f(t,...e){const n=t?t.slice(-4):void 0;return 1===e.length&&("vec2"===n?e=[e[0],e[0]]:"vec3"===n?e=[e[0],e[0],e[0]]:"vec4"===n&&(e=[e[0],e[0],e[0],e[0]])),"color"===t?new tr(...e):"vec2"===n?new ti(...e):"vec3"===n?new Li(...e):"vec4"===n?new Si(...e):"mat3"===n?new ei(...e):"mat4"===n?new ls(...e):"bool"===t?e[0]||!1:"float"===t||"int"===t||"uint"===t?e[0]||0:"string"===t?e[0]||"":"ArrayBuffer"===t?Mf(e[0]):null}function xf(t){let e="";const n=new Uint8Array(t);for(let t=0;t<n.length;t++)e+=String.fromCharCode(n[t]);return btoa(e)}function Mf(t){return Uint8Array.from(atob(t),(t=>t.charCodeAt(0))).buffer}var bf=Object.freeze({__proto__:null,arrayBufferToBase64:xf,base64ToArrayBuffer:Mf,getCacheKey:gf,getNodeChildren:vf,getValueFromType:_f,getValueType:yf,hash:ff,hashArray:mf,hashString:pf});const Tf={VERTEX:"vertex",FRAGMENT:"fragment"},Sf={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},wf={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Ef=["fragment","vertex"],Af=["setup","analyze","generate"],Nf=[...Ef,"compute"],Cf=["x","y","z","w"];let Rf=0;class If extends Hn{static get type(){return"Node"}constructor(t=null){super(),this.nodeType=t,this.updateType=Sf.NONE,this.updateBeforeType=Sf.NONE,this.updateAfterType=Sf.NONE,this.uuid=Qn.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:Rf++})}set needsUpdate(t){!0===t&&this.version++}get type(){return this.constructor.type}onUpdate(t,e){return this.updateType=e,this.update=t.bind(this.getSelf()),this}onFrameUpdate(t){return this.onUpdate(t,Sf.FRAME)}onRenderUpdate(t){return this.onUpdate(t,Sf.RENDER)}onObjectUpdate(t){return this.onUpdate(t,Sf.OBJECT)}onReference(t){return this.updateReference=t.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:t}of vf(this))yield t}dispose(){this.dispatchEvent({type:"dispose"})}traverse(t){t(this);for(const e of this.getChildren())e.traverse(t)}getCacheKey(t=!1){return!0!==(t=t||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=gf(this,t),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(t){const e=this.getNodeType(t);return t.getElementType(e)}getNodeType(t){const e=t.getNodeProperties(this);return e.outputNode?e.outputNode.getNodeType(t):this.nodeType}getShared(t){const e=this.getHash(t);return t.getNodeFromHash(e)||this}setup(t){const e=t.getNodeProperties(this);let n=0;for(const t of this.getChildren())e["node"+n++]=t;return null}analyze(t){if(1===t.increaseUsage(this)){const e=t.getNodeProperties(this);for(const n of Object.values(e))n&&!0===n.isNode&&n.build(t)}}generate(t,e){const{outputNode:n}=t.getNodeProperties(this);if(n&&!0===n.isNode)return n.build(t,e)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(t,e=null){const n=this.getShared(t);if(this!==n)return n.build(t,e);t.addNode(this),t.addChain(this);let i=null;const s=t.getBuildStage();if("setup"===s){this.updateReference(t);const e=t.getNodeProperties(this);if(!0!==e.initialized){t.stack.nodes.length;e.initialized=!0,e.outputNode=this.setup(t),null!==e.outputNode&&t.stack.nodes.length;for(const n of Object.values(e))n&&!0===n.isNode&&n.build(t)}}else if("analyze"===s)this.analyze(t);else if("generate"===s){if(1===this.generate.length){const n=this.getNodeType(t),s=t.getDataFromNode(this);i=s.snippet,void 0===i?(i=this.generate(t)||"",s.snippet=i):void 0!==s.flowCodes&&void 0!==t.context.nodeBlock&&t.addFlowCodeHierarchy(this,t.context.nodeBlock),i=t.format(i,n,e)}else i=this.generate(t,e)||""}return t.removeChain(this),i}getSerializeChildren(){return vf(this)}serialize(t){const e=this.getSerializeChildren(),n={};for(const{property:i,index:s,childNode:r}of e)void 0!==s?(void 0===n[i]&&(n[i]=Number.isInteger(s)?[]:{}),n[i][s]=r.toJSON(t.meta).uuid):n[i]=r.toJSON(t.meta).uuid;Object.keys(n).length>0&&(t.inputNodes=n)}deserialize(t){if(void 0!==t.inputNodes){const e=t.meta.nodes;for(const n in t.inputNodes)if(Array.isArray(t.inputNodes[n])){const i=[];for(const s of t.inputNodes[n])i.push(e[s]);this[n]=i}else if("object"==typeof t.inputNodes[n]){const i={};for(const s in t.inputNodes[n]){const r=t.inputNodes[n][s];i[s]=e[r]}this[n]=i}else{const i=t.inputNodes[n];this[n]=e[i]}}}toJSON(t){const{uuid:e,type:n}=this,i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{},nodes:{}});let s=t.nodes[e];function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(void 0===s&&(s={uuid:e,type:n,meta:t,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==i&&(t.nodes[s.uuid]=s),this.serialize(s),delete s.meta),i){const e=r(t.textures),n=r(t.images),i=r(t.nodes);e.length>0&&(s.textures=e),n.length>0&&(s.images=n),i.length>0&&(s.nodes=i)}return s}}class Lf extends If{static get type(){return"ArrayElementNode"}constructor(t,e){super(),this.node=t,this.indexNode=e,this.isArrayElementNode=!0}getNodeType(t){return this.node.getElementType(t)}generate(t){return`${this.node.build(t)}[ ${this.indexNode.build(t,"uint")} ]`}}class Pf extends If{static get type(){return"ConvertNode"}constructor(t,e){super(),this.node=t,this.convertTo=e}getNodeType(t){const e=this.node.getNodeType(t);let n=null;for(const i of this.convertTo.split("|"))null!==n&&t.getTypeLength(e)!==t.getTypeLength(i)||(n=i);return n}serialize(t){super.serialize(t),t.convertTo=this.convertTo}deserialize(t){super.deserialize(t),this.convertTo=t.convertTo}generate(t,e){const n=this.node,i=this.getNodeType(t),s=n.build(t,i);return t.format(s,i,e)}}class Uf extends If{static get type(){return"TempNode"}constructor(t){super(t),this.isTempNode=!0}hasDependencies(t){return t.getDataFromNode(this).usageCount>1}build(t,e){if("generate"===t.getBuildStage()){const n=t.getVectorType(this.getNodeType(t,e)),i=t.getDataFromNode(this);if(void 0!==i.propertyName)return t.format(i.propertyName,n,e);if("void"!==n&&"void"!==e&&this.hasDependencies(t)){const s=super.build(t,n),r=t.getVarFromNode(this,null,n),a=t.getPropertyName(r);return t.addLineFlowCode(`${a} = ${s}`,this),i.snippet=s,i.propertyName=a,t.format(i.propertyName,n,e)}}return super.build(t,e)}}class Df extends Uf{static get type(){return"JoinNode"}constructor(t=[],e=null){super(e),this.nodes=t}getNodeType(t){return null!==this.nodeType?t.getVectorType(this.nodeType):t.getTypeFromLength(this.nodes.reduce(((e,n)=>e+t.getTypeLength(n.getNodeType(t))),0))}generate(t,e){const n=this.getNodeType(t),i=this.nodes,s=t.getComponentType(n),r=[];for(const e of i){let n=e.build(t);const i=t.getComponentType(e.getNodeType(t));i!==s&&(n=t.format(n,i,s)),r.push(n)}const a=`${t.getType(n)}( ${r.join(", ")} )`;return t.format(a,n,e)}}const Of=Cf.join("");class zf extends If{static get type(){return"SplitNode"}constructor(t,e="x"){super(),this.node=t,this.components=e,this.isSplitNode=!0}getVectorLength(){let t=this.components.length;for(const e of this.components)t=Math.max(Cf.indexOf(e)+1,t);return t}getComponentType(t){return t.getComponentType(this.node.getNodeType(t))}getNodeType(t){return t.getTypeFromLength(this.components.length,this.getComponentType(t))}generate(t,e){const n=this.node,i=t.getTypeLength(n.getNodeType(t));let s=null;if(i>1){let r=null;this.getVectorLength()>=i&&(r=t.getTypeFromLength(this.getVectorLength(),this.getComponentType(t)));const a=n.build(t,r);s=this.components.length===i&&this.components===Of.slice(0,this.components.length)?t.format(a,r,e):t.format(`${a}.${this.components}`,this.getNodeType(t),e)}else s=n.build(t,e);return s}serialize(t){super.serialize(t),t.components=this.components}deserialize(t){super.deserialize(t),this.components=t.components}}class Vf extends Uf{static get type(){return"SetNode"}constructor(t,e,n){super(),this.sourceNode=t,this.components=e,this.targetNode=n}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{sourceNode:e,components:n,targetNode:i}=this,s=this.getNodeType(t),r=t.getTypeFromLength(n.length,i.getNodeType(t)),a=i.build(t,r),o=e.build(t,s),l=t.getTypeLength(s),c=[];for(let t=0;t<l;t++){const e=Cf[t];e===n[0]?(c.push(a),t+=n.length-1):c.push(o+"."+e)}return`${t.getType(s)}( ${c.join(", ")} )`}}class Ff extends Uf{static get type(){return"FlipNode"}constructor(t,e){super(),this.sourceNode=t,this.components=e}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{components:e,sourceNode:n}=this,i=this.getNodeType(t),s=n.build(t),r=t.getVarFromNode(this),a=t.getPropertyName(r);t.addLineFlowCode(a+" = "+s,this);const o=t.getTypeLength(i),l=[];let c=0;for(let t=0;t<o;t++){const n=Cf[t];n===e[c]?(l.push("1.0 - "+a+"."+n),c++):l.push(a+"."+n)}return`${t.getType(i)}( ${l.join(", ")} )`}}class Bf extends If{static get type(){return"InputNode"}constructor(t,e=null){super(e),this.isInputNode=!0,this.value=t,this.precision=null}getNodeType(){return null===this.nodeType?yf(this.value):this.nodeType}getInputType(t){return this.getNodeType(t)}setPrecision(t){return this.precision=t,this}serialize(t){super.serialize(t),t.value=this.value,this.value&&this.value.toArray&&(t.value=this.value.toArray()),t.valueType=yf(this.value),t.nodeType=this.nodeType,"ArrayBuffer"===t.valueType&&(t.value=xf(t.value)),t.precision=this.precision}deserialize(t){super.deserialize(t),this.nodeType=t.nodeType,this.value=Array.isArray(t.value)?_f(t.valueType,...t.value):t.value,this.precision=t.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(t.value))}generate(){console.warn("Abstract function.")}}class kf extends Bf{static get type(){return"ConstNode"}constructor(t,e=null){super(t,e),this.isConstNode=!0}generateConst(t){return t.generateConst(this.getNodeType(t),this.value)}generate(t,e){const n=this.getNodeType(t);return t.format(this.generateConst(t),n,e)}}let Hf=null;const Gf=new Map;function Wf(t,e){if(Gf.has(t))console.warn(`Redefinition of method chaining ${t}`);else{if("function"!=typeof e)throw new Error(`Node element ${t} is not a function`);Gf.set(t,e)}}const jf=t=>t.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Xf=t=>jf(t).split("").sort().join(""),qf={setup(t,e){const n=e.shift();return t(yg(n),...e)},get(t,e,n){if("string"==typeof e&&void 0===t[e]){if(!0!==t.isStackNode&&"assign"===e)return(...t)=>(Hf.assign(n,...t),n);if(Gf.has(e)){const i=Gf.get(e);return t.isStackNode?(...t)=>n.add(i(...t)):(...t)=>i(n,...t)}if("self"===e)return t;if(e.endsWith("Assign")&&Gf.has(e.slice(0,e.length-6))){const i=Gf.get(e.slice(0,e.length-6));return t.isStackNode?(...t)=>n.assign(t[0],i(...t)):(...t)=>n.assign(i(n,...t))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(e))return e=jf(e),vg(new zf(n,e));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(e))return e=Xf(e.slice(3).toLowerCase()),n=>vg(new Vf(t,e,n));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(e))return e=Xf(e.slice(4).toLowerCase()),()=>vg(new Ff(vg(t),e));if("width"===e||"height"===e||"depth"===e)return"width"===e?e="x":"height"===e?e="y":"depth"===e&&(e="z"),vg(new zf(t,e));if(!0===/^\d+$/.test(e))return vg(new Lf(n,new kf(Number(e),"uint")))}return Reflect.get(t,e,n)},set:(t,e,n,i)=>"string"!=typeof e||void 0!==t[e]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(e)&&"width"!==e&&"height"!==e&&"depth"!==e&&!0!==/^\d+$/.test(e)?Reflect.set(t,e,n,i):(i[e].assign(n),!0)},Yf=new WeakMap,Zf=new WeakMap,$f=function(t,e=null){for(const n in t)t[n]=vg(t[n],e);return t},Jf=function(t,e=null){const n=t.length;for(let i=0;i<n;i++)t[i]=vg(t[i],e);return t},Kf=function(t,e=null,n=null,i=null){const s=t=>vg(null!==i?Object.assign(t,i):t);return null===e?(...e)=>s(new t(..._g(e))):null!==n?(n=vg(n),(...i)=>s(new t(e,..._g(i),n))):(...n)=>s(new t(e,..._g(n)))},Qf=function(t,...e){return vg(new t(..._g(e)))};class tg extends If{constructor(t,e){super(),this.shaderNode=t,this.inputNodes=e}getNodeType(t){return this.shaderNode.nodeType||this.getOutputNode(t).getNodeType(t)}call(t){const{shaderNode:e,inputNodes:n}=this,i=t.getNodeProperties(e);if(i.onceOutput)return i.onceOutput;let s=null;if(e.layout){let i=Zf.get(t.constructor);void 0===i&&(i=new WeakMap,Zf.set(t.constructor,i));let r=i.get(e);void 0===r&&(r=vg(t.buildFunctionNode(e)),i.set(e,r)),null!==t.currentFunctionNode&&t.currentFunctionNode.includes.push(r),s=vg(r.call(n))}else{const i=e.jsFunc,r=null!==n?i(n,t):i(t);s=vg(r)}return e.once&&(i.onceOutput=s),s}getOutputNode(t){const e=t.getNodeProperties(this);return null===e.outputNode&&(e.outputNode=this.setupOutput(t)),e.outputNode}setup(t){return this.getOutputNode(t)}setupOutput(t){return t.addStack(),t.stack.outputNode=this.call(t),t.removeStack()}generate(t,e){return this.getOutputNode(t).build(t,e)}}class eg extends If{constructor(t,e){super(e),this.jsFunc=t,this.layout=null,this.global=!0,this.once=!1}setLayout(t){return this.layout=t,this}call(t=null){return yg(t),vg(new tg(this,t))}setup(){return this.call()}}const ng=[!1,!0],ig=[0,1,2,3],sg=[-1,-2],rg=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],ag=new Map;for(const t of ng)ag.set(t,new kf(t));const og=new Map;for(const t of ig)og.set(t,new kf(t,"uint"));const lg=new Map([...og].map((t=>new kf(t.value,"int"))));for(const t of sg)lg.set(t,new kf(t,"int"));const cg=new Map([...lg].map((t=>new kf(t.value))));for(const t of rg)cg.set(t,new kf(t));for(const t of rg)cg.set(-t,new kf(-t));const ug={bool:ag,uint:og,ints:lg,float:cg},hg=new Map([...ag,...cg]),dg=(t,e)=>hg.has(t)?hg.get(t):!0===t.isNode?t:new kf(t,e),pg=function(t,e=null){return(...n)=>{if((0===n.length||!["bool","float","int","uint"].includes(t)&&n.every((t=>"object"!=typeof t)))&&(n=[_f(t,...n)]),1===n.length&&null!==e&&e.has(n[0]))return vg(e.get(n[0]));if(1===n.length){const e=dg(n[0],t);return(t=>{try{return t.getNodeType()}catch(t){return}})(e)===t?vg(e):vg(new Pf(e,t))}const i=n.map((t=>dg(t)));return vg(new Df(i,t))}},mg=t=>"object"==typeof t&&null!==t?t.value:t,fg=t=>null!=t?t.nodeType||t.convertTo||("string"==typeof t?t:null):null;function gg(t,e){return new Proxy(new eg(t,e),qf)}const vg=(t,e=null)=>function(t,e=null){const n=yf(t);if("node"===n){let e=Yf.get(t);return void 0===e&&(e=new Proxy(t,qf),Yf.set(t,e),Yf.set(e,e)),e}return null===e&&("float"===n||"boolean"===n)||n&&"shader"!==n&&"string"!==n?vg(dg(t,e)):"shader"===n?bg(t):t}(t,e),yg=(t,e=null)=>new $f(t,e),_g=(t,e=null)=>new Jf(t,e),xg=(...t)=>new Kf(...t),Mg=(...t)=>new Qf(...t),bg=(t,e)=>{const n=new gg(t,e),i=(...t)=>{let e;return yg(t),e=t[0]&&t[0].isNode?[...t]:t[0],n.call(e)};return i.shaderNode=n,i.setLayout=t=>(n.setLayout(t),i),i.once=()=>(n.once=!0,i),i},Tg=(...t)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),bg(...t));Wf("toGlobal",(t=>(t.global=!0,t)));const Sg=t=>{Hf=t},wg=()=>Hf,Eg=(...t)=>Hf.If(...t);function Ag(t){return Hf&&Hf.add(t),t}Wf("append",Ag);const Ng=new pg("color"),Cg=new pg("float",ug.float),Rg=new pg("int",ug.ints),Ig=new pg("uint",ug.uint),Lg=new pg("bool",ug.bool),Pg=new pg("vec2"),Ug=new pg("ivec2"),Dg=new pg("uvec2"),Og=new pg("bvec2"),zg=new pg("vec3"),Vg=new pg("ivec3"),Fg=new pg("uvec3"),Bg=new pg("bvec3"),kg=new pg("vec4"),Hg=new pg("ivec4"),Gg=new pg("uvec4"),Wg=new pg("bvec4"),jg=new pg("mat2"),Xg=new pg("mat3"),qg=new pg("mat4"),Yg=(t="")=>vg(new kf(t,"string")),Zg=t=>vg(new kf(t,"ArrayBuffer"));Wf("toColor",Ng),Wf("toFloat",Cg),Wf("toInt",Rg),Wf("toUint",Ig),Wf("toBool",Lg),Wf("toVec2",Pg),Wf("toIVec2",Ug),Wf("toUVec2",Dg),Wf("toBVec2",Og),Wf("toVec3",zg),Wf("toIVec3",Vg),Wf("toUVec3",Fg),Wf("toBVec3",Bg),Wf("toVec4",kg),Wf("toIVec4",Hg),Wf("toUVec4",Gg),Wf("toBVec4",Wg),Wf("toMat2",jg),Wf("toMat3",Xg),Wf("toMat4",qg);const $g=xg(Lf),Jg=(t,e)=>vg(new Pf(vg(t),e)),Kg=(t,e)=>vg(new zf(vg(t),e));Wf("element",$g),Wf("convert",Jg);class Qg extends If{static get type(){return"UniformGroupNode"}constructor(t,e=!1,n=1){super("string"),this.name=t,this.version=0,this.shared=e,this.order=n,this.isUniformGroup=!0}set needsUpdate(t){!0===t&&this.version++}serialize(t){super.serialize(t),t.name=this.name,t.version=this.version,t.shared=this.shared}deserialize(t){super.deserialize(t),this.name=t.name,this.version=t.version,this.shared=t.shared}}const tv=t=>new Qg(t),ev=(t,e=0)=>new Qg(t,!0,e),nv=ev("frame"),iv=ev("render"),sv=tv("object");class rv extends Bf{static get type(){return"UniformNode"}constructor(t,e=null){super(t,e),this.isUniformNode=!0,this.name="",this.groupNode=sv}label(t){return this.name=t,this}setGroup(t){return this.groupNode=t,this}getGroup(){return this.groupNode}getUniformHash(t){return this.getHash(t)}onUpdate(t,e){const n=this.getSelf();return t=t.bind(n),super.onUpdate((e=>{const i=t(e,n);void 0!==i&&(this.value=i)}),e)}generate(t,e){const n=this.getNodeType(t),i=this.getUniformHash(t);let s=t.getNodeFromHash(i);void 0===s&&(t.setHashNode(this,i),s=this);const r=s.getInputType(t),a=t.getUniformFromNode(s,r,t.shaderStage,this.name||t.context.label),o=t.getPropertyName(a);return void 0!==t.context.label&&delete t.context.label,t.format(o,n,e)}}const av=(t,e)=>{const n=fg(e||t),i=t&&!0===t.isNode?t.node&&t.node.value||t.value:t;return vg(new rv(i,n))};class ov extends If{static get type(){return"PropertyNode"}constructor(t,e=null,n=!1){super(t),this.name=e,this.varying=n,this.isPropertyNode=!0}getHash(t){return this.name||super.getHash(t)}isGlobal(){return!0}generate(t){let e;return!0===this.varying?(e=t.getVaryingFromNode(this,this.name),e.needsInterpolation=!0):e=t.getVarFromNode(this,this.name),t.getPropertyName(e)}}const lv=(t,e)=>vg(new ov(t,e)),cv=(t,e)=>vg(new ov(t,e,!0)),uv=Mg(ov,"vec4","DiffuseColor"),hv=Mg(ov,"vec3","EmissiveColor"),dv=Mg(ov,"float","Roughness"),pv=Mg(ov,"float","Metalness"),mv=Mg(ov,"float","Clearcoat"),fv=Mg(ov,"float","ClearcoatRoughness"),gv=Mg(ov,"vec3","Sheen"),vv=Mg(ov,"float","SheenRoughness"),yv=Mg(ov,"float","Iridescence"),_v=Mg(ov,"float","IridescenceIOR"),xv=Mg(ov,"float","IridescenceThickness"),Mv=Mg(ov,"float","AlphaT"),bv=Mg(ov,"float","Anisotropy"),Tv=Mg(ov,"vec3","AnisotropyT"),Sv=Mg(ov,"vec3","AnisotropyB"),wv=Mg(ov,"color","SpecularColor"),Ev=Mg(ov,"float","SpecularF90"),Av=Mg(ov,"float","Shininess"),Nv=Mg(ov,"vec4","Output"),Cv=Mg(ov,"float","dashSize"),Rv=Mg(ov,"float","gapSize"),Iv=Mg(ov,"float","pointWidth"),Lv=Mg(ov,"float","IOR"),Pv=Mg(ov,"float","Transmission"),Uv=Mg(ov,"float","Thickness"),Dv=Mg(ov,"float","AttenuationDistance"),Ov=Mg(ov,"color","AttenuationColor"),zv=Mg(ov,"float","Dispersion");class Vv extends Uf{static get type(){return"AssignNode"}constructor(t,e){super(),this.targetNode=t,this.sourceNode=e}hasDependencies(){return!1}getNodeType(t,e){return"void"!==e?this.targetNode.getNodeType(t):"void"}needsSplitAssign(t){const{targetNode:e}=this;if(!1===t.isAvailable("swizzleAssign")&&e.isSplitNode&&e.components.length>1){const n=t.getTypeLength(e.node.getNodeType(t));return Cf.join("").slice(0,n)!==e.components}return!1}generate(t,e){const{targetNode:n,sourceNode:i}=this,s=this.needsSplitAssign(t),r=n.getNodeType(t),a=n.context({assign:!0}).build(t),o=i.build(t,r),l=i.getNodeType(t),c=t.getDataFromNode(this);let u;if(!0===c.initialized)"void"!==e&&(u=a);else if(s){const i=t.getVarFromNode(this,null,r),s=t.getPropertyName(i);t.addLineFlowCode(`${s} = ${o}`,this);const l=n.node.context({assign:!0}).build(t);for(let e=0;e<n.components.length;e++){const i=n.components[e];t.addLineFlowCode(`${l}.${i} = ${s}[ ${e} ]`,this)}"void"!==e&&(u=a)}else u=`${a} = ${o}`,"void"!==e&&"void"!==l||(t.addLineFlowCode(u,this),"void"!==e&&(u=a));return c.initialized=!0,t.format(u,r,e)}}const Fv=xg(Vv);Wf("assign",Fv);class Bv extends Uf{static get type(){return"FunctionCallNode"}constructor(t=null,e={}){super(),this.functionNode=t,this.parameters=e}setParameters(t){return this.parameters=t,this}getParameters(){return this.parameters}getNodeType(t){return this.functionNode.getNodeType(t)}generate(t){const e=[],n=this.functionNode,i=n.getInputs(t),s=this.parameters;if(Array.isArray(s))for(let n=0;n<s.length;n++){const r=i[n],a=s[n];e.push(a.build(t,r.type))}else for(const n of i){const i=s[n.name];if(void 0===i)throw new Error(`FunctionCallNode: Input '${n.name}' not found in FunctionNode.`);e.push(i.build(t,n.type))}return`${n.build(t,"property")}( ${e.join(", ")} )`}}const kv=(t,...e)=>(e=e.length>1||e[0]&&!0===e[0].isNode?_g(e):yg(e[0]),vg(new Bv(vg(t),e)));Wf("call",kv);class Hv extends Uf{static get type(){return"OperatorNode"}constructor(t,e,n,...i){if(super(),i.length>0){let s=new Hv(t,e,n);for(let e=0;e<i.length-1;e++)s=new Hv(t,s,i[e]);e=s,n=i[i.length-1]}this.op=t,this.aNode=e,this.bNode=n}getNodeType(t,e){const n=this.op,i=this.aNode,s=this.bNode,r=i.getNodeType(t),a=void 0!==s?s.getNodeType(t):null;if("void"===r||"void"===a)return"void";if("%"===n)return r;if("~"===n||"&"===n||"|"===n||"^"===n||">>"===n||"<<"===n)return t.getIntegerType(r);if("!"===n||"=="===n||"&&"===n||"||"===n||"^^"===n)return"bool";if("<"===n||">"===n||"<="===n||">="===n){const n=e?t.getTypeLength(e):Math.max(t.getTypeLength(r),t.getTypeLength(a));return n>1?`bvec${n}`:"bool"}return"float"===r&&t.isMatrix(a)?a:t.isMatrix(r)&&t.isVector(a)?t.getVectorFromMatrix(r):t.isVector(r)&&t.isMatrix(a)?t.getVectorFromMatrix(a):t.getTypeLength(a)>t.getTypeLength(r)?a:r}generate(t,e){const n=this.op,i=this.aNode,s=this.bNode,r=this.getNodeType(t,e);let a=null,o=null;"void"!==r?(a=i.getNodeType(t),o=void 0!==s?s.getNodeType(t):null,"<"===n||">"===n||"<="===n||">="===n||"=="===n?t.isVector(a)?o=a:a!==o&&(a=o="float"):">>"===n||"<<"===n?(a=r,o=t.changeComponentType(o,"uint")):t.isMatrix(a)&&t.isVector(o)?o=t.getVectorFromMatrix(a):a=t.isVector(a)&&t.isMatrix(o)?t.getVectorFromMatrix(o):o=r):a=o=r;const l=i.build(t,a),c=void 0!==s?s.build(t,o):null,u=t.getTypeLength(e),h=t.getFunctionOperator(n);return"void"!==e?"<"===n&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThan",e)}( ${l}, ${c} )`,r,e):t.format(`( ${l} < ${c} )`,r,e):"<="===n&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThanEqual",e)}( ${l}, ${c} )`,r,e):t.format(`( ${l} <= ${c} )`,r,e):">"===n&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThan",e)}( ${l}, ${c} )`,r,e):t.format(`( ${l} > ${c} )`,r,e):">="===n&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThanEqual",e)}( ${l}, ${c} )`,r,e):t.format(`( ${l} >= ${c} )`,r,e):"!"===n||"~"===n?t.format(`(${n}${l})`,a,e):h?t.format(`${h}( ${l}, ${c} )`,r,e):t.format(`( ${l} ${n} ${c} )`,r,e):"void"!==a?h?t.format(`${h}( ${l}, ${c} )`,r,e):t.format(`${l} ${n} ${c}`,r,e):void 0}serialize(t){super.serialize(t),t.op=this.op}deserialize(t){super.deserialize(t),this.op=t.op}}const Gv=xg(Hv,"+"),Wv=xg(Hv,"-"),jv=xg(Hv,"*"),Xv=xg(Hv,"/"),qv=xg(Hv,"%"),Yv=xg(Hv,"=="),Zv=xg(Hv,"!="),$v=xg(Hv,"<"),Jv=xg(Hv,">"),Kv=xg(Hv,"<="),Qv=xg(Hv,">="),ty=xg(Hv,"&&"),ey=xg(Hv,"||"),ny=xg(Hv,"!"),iy=xg(Hv,"^^"),sy=xg(Hv,"&"),ry=xg(Hv,"~"),ay=xg(Hv,"|"),oy=xg(Hv,"^"),ly=xg(Hv,"<<"),cy=xg(Hv,">>");Wf("add",Gv),Wf("sub",Wv),Wf("mul",jv),Wf("div",Xv),Wf("modInt",qv),Wf("equal",Yv),Wf("notEqual",Zv),Wf("lessThan",$v),Wf("greaterThan",Jv),Wf("lessThanEqual",Kv),Wf("greaterThanEqual",Qv),Wf("and",ty),Wf("or",ey),Wf("not",ny),Wf("xor",iy),Wf("bitAnd",sy),Wf("bitNot",ry),Wf("bitOr",ay),Wf("bitXor",oy),Wf("shiftLeft",ly),Wf("shiftRight",cy);const uy=(...t)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),qv(...t));Wf("remainder",uy);class hy extends Uf{static get type(){return"MathNode"}constructor(t,e,n=null,i=null){super(),this.method=t,this.aNode=e,this.bNode=n,this.cNode=i}getInputType(t){const e=this.aNode.getNodeType(t),n=this.bNode?this.bNode.getNodeType(t):null,i=this.cNode?this.cNode.getNodeType(t):null,s=t.isMatrix(e)?0:t.getTypeLength(e),r=t.isMatrix(n)?0:t.getTypeLength(n),a=t.isMatrix(i)?0:t.getTypeLength(i);return s>r&&s>a?e:r>a?n:a>s?i:e}getNodeType(t){const e=this.method;return e===hy.LENGTH||e===hy.DISTANCE||e===hy.DOT?"float":e===hy.CROSS?"vec3":e===hy.ALL?"bool":e===hy.EQUALS?t.changeComponentType(this.aNode.getNodeType(t),"bool"):e===hy.MOD?this.aNode.getNodeType(t):this.getInputType(t)}generate(t,e){const n=this.method,i=this.getNodeType(t),s=this.getInputType(t),r=this.aNode,a=this.bNode,o=this.cNode,l=!0===t.renderer.isWebGLRenderer;if(n===hy.TRANSFORM_DIRECTION){let n=r,i=a;t.isMatrix(n.getNodeType(t))?i=kg(zg(i),0):n=kg(zg(n),0);const s=jv(n,i).xyz;return Cy(s).build(t,e)}if(n===hy.NEGATE)return t.format("( - "+r.build(t,s)+" )",i,e);if(n===hy.ONE_MINUS)return Wv(1,r).build(t,e);if(n===hy.RECIPROCAL)return Xv(1,r).build(t,e);if(n===hy.DIFFERENCE)return zy(Wv(r,a)).build(t,e);{const c=[];return n===hy.CROSS||n===hy.MOD?c.push(r.build(t,i),a.build(t,i)):l&&n===hy.STEP?c.push(r.build(t,1===t.getTypeLength(r.getNodeType(t))?"float":s),a.build(t,s)):l&&(n===hy.MIN||n===hy.MAX)||n===hy.MOD?c.push(r.build(t,s),a.build(t,1===t.getTypeLength(a.getNodeType(t))?"float":s)):n===hy.REFRACT?c.push(r.build(t,s),a.build(t,s),o.build(t,"float")):n===hy.MIX?c.push(r.build(t,s),a.build(t,s),o.build(t,1===t.getTypeLength(o.getNodeType(t))?"float":s)):(c.push(r.build(t,s)),null!==a&&c.push(a.build(t,s)),null!==o&&c.push(o.build(t,s))),t.format(`${t.getMethod(n,i)}( ${c.join(", ")} )`,i,e)}}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}hy.ALL="all",hy.ANY="any",hy.EQUALS="equals",hy.RADIANS="radians",hy.DEGREES="degrees",hy.EXP="exp",hy.EXP2="exp2",hy.LOG="log",hy.LOG2="log2",hy.SQRT="sqrt",hy.INVERSE_SQRT="inversesqrt",hy.FLOOR="floor",hy.CEIL="ceil",hy.NORMALIZE="normalize",hy.FRACT="fract",hy.SIN="sin",hy.COS="cos",hy.TAN="tan",hy.ASIN="asin",hy.ACOS="acos",hy.ATAN="atan",hy.ABS="abs",hy.SIGN="sign",hy.LENGTH="length",hy.NEGATE="negate",hy.ONE_MINUS="oneMinus",hy.DFDX="dFdx",hy.DFDY="dFdy",hy.ROUND="round",hy.RECIPROCAL="reciprocal",hy.TRUNC="trunc",hy.FWIDTH="fwidth",hy.BITCAST="bitcast",hy.TRANSPOSE="transpose",hy.ATAN2="atan2",hy.MIN="min",hy.MAX="max",hy.MOD="mod",hy.STEP="step",hy.REFLECT="reflect",hy.DISTANCE="distance",hy.DIFFERENCE="difference",hy.DOT="dot",hy.CROSS="cross",hy.POW="pow",hy.TRANSFORM_DIRECTION="transformDirection",hy.MIX="mix",hy.CLAMP="clamp",hy.REFRACT="refract",hy.SMOOTHSTEP="smoothstep",hy.FACEFORWARD="faceforward";const dy=Cg(1e-6),py=Cg(1e6),my=Cg(Math.PI),fy=Cg(2*Math.PI),gy=xg(hy,hy.ALL),vy=xg(hy,hy.ANY),yy=xg(hy,hy.EQUALS),_y=xg(hy,hy.RADIANS),xy=xg(hy,hy.DEGREES),My=xg(hy,hy.EXP),by=xg(hy,hy.EXP2),Ty=xg(hy,hy.LOG),Sy=xg(hy,hy.LOG2),wy=xg(hy,hy.SQRT),Ey=xg(hy,hy.INVERSE_SQRT),Ay=xg(hy,hy.FLOOR),Ny=xg(hy,hy.CEIL),Cy=xg(hy,hy.NORMALIZE),Ry=xg(hy,hy.FRACT),Iy=xg(hy,hy.SIN),Ly=xg(hy,hy.COS),Py=xg(hy,hy.TAN),Uy=xg(hy,hy.ASIN),Dy=xg(hy,hy.ACOS),Oy=xg(hy,hy.ATAN),zy=xg(hy,hy.ABS),Vy=xg(hy,hy.SIGN),Fy=xg(hy,hy.LENGTH),By=xg(hy,hy.NEGATE),ky=xg(hy,hy.ONE_MINUS),Hy=xg(hy,hy.DFDX),Gy=xg(hy,hy.DFDY),Wy=xg(hy,hy.ROUND),jy=xg(hy,hy.RECIPROCAL),Xy=xg(hy,hy.TRUNC),qy=xg(hy,hy.FWIDTH),Yy=xg(hy,hy.BITCAST),Zy=xg(hy,hy.TRANSPOSE),$y=xg(hy,hy.ATAN2),Jy=xg(hy,hy.MIN),Ky=xg(hy,hy.MAX),Qy=xg(hy,hy.MOD),t_=xg(hy,hy.STEP),e_=xg(hy,hy.REFLECT),n_=xg(hy,hy.DISTANCE),i_=xg(hy,hy.DIFFERENCE),s_=xg(hy,hy.DOT),r_=xg(hy,hy.CROSS),a_=xg(hy,hy.POW),o_=xg(hy,hy.POW,2),l_=xg(hy,hy.POW,3),c_=xg(hy,hy.POW,4),u_=xg(hy,hy.TRANSFORM_DIRECTION),h_=t=>jv(Vy(t),a_(zy(t),1/3)),d_=t=>s_(t,t),p_=xg(hy,hy.MIX),m_=(t,e=0,n=1)=>vg(new hy(hy.CLAMP,vg(t),vg(e),vg(n))),f_=t=>m_(t),g_=xg(hy,hy.REFRACT),v_=xg(hy,hy.SMOOTHSTEP),y_=xg(hy,hy.FACEFORWARD),__=bg((([t])=>{const e=s_(t.xy,Pg(12.9898,78.233)),n=Qy(e,my);return Ry(Iy(n).mul(43758.5453))})),x_=(t,e,n)=>p_(e,n,t),M_=(t,e,n)=>v_(e,n,t);Wf("all",gy),Wf("any",vy),Wf("equals",yy),Wf("radians",_y),Wf("degrees",xy),Wf("exp",My),Wf("exp2",by),Wf("log",Ty),Wf("log2",Sy),Wf("sqrt",wy),Wf("inverseSqrt",Ey),Wf("floor",Ay),Wf("ceil",Ny),Wf("normalize",Cy),Wf("fract",Ry),Wf("sin",Iy),Wf("cos",Ly),Wf("tan",Py),Wf("asin",Uy),Wf("acos",Dy),Wf("atan",Oy),Wf("abs",zy),Wf("sign",Vy),Wf("length",Fy),Wf("lengthSq",d_),Wf("negate",By),Wf("oneMinus",ky),Wf("dFdx",Hy),Wf("dFdy",Gy),Wf("round",Wy),Wf("reciprocal",jy),Wf("trunc",Xy),Wf("fwidth",qy),Wf("atan2",$y),Wf("min",Jy),Wf("max",Ky),Wf("mod",Qy),Wf("step",t_),Wf("reflect",e_),Wf("distance",n_),Wf("dot",s_),Wf("cross",r_),Wf("pow",a_),Wf("pow2",o_),Wf("pow3",l_),Wf("pow4",c_),Wf("transformDirection",u_),Wf("mix",x_),Wf("clamp",m_),Wf("refract",g_),Wf("smoothstep",M_),Wf("faceForward",y_),Wf("difference",i_),Wf("saturate",f_),Wf("cbrt",h_),Wf("transpose",Zy),Wf("rand",__);class b_ extends If{static get type(){return"ConditionalNode"}constructor(t,e,n=null){super(),this.condNode=t,this.ifNode=e,this.elseNode=n}getNodeType(t){const e=this.ifNode.getNodeType(t);if(null!==this.elseNode){const n=this.elseNode.getNodeType(t);if(t.getTypeLength(n)>t.getTypeLength(e))return n}return e}setup(t){const e=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,s=t.context.nodeBlock;t.getDataFromNode(n).parentNodeBlock=s,null!==i&&(t.getDataFromNode(i).parentNodeBlock=s);const r=t.getNodeProperties(this);r.condNode=e,r.ifNode=n.context({nodeBlock:n}),r.elseNode=i?i.context({nodeBlock:i}):null}generate(t,e){const n=this.getNodeType(t),i=t.getDataFromNode(this);if(void 0!==i.nodeProperty)return i.nodeProperty;const{condNode:s,ifNode:r,elseNode:a}=t.getNodeProperties(this),o="void"!==e,l=o?lv(n).build(t):"";i.nodeProperty=l;const c=s.build(t,"bool");t.addFlowCode(`\n${t.tab}if ( ${c} ) {\n\n`).addFlowTab();let u=r.build(t,n);if(u&&(u=o?l+" = "+u+";":"return "+u+";"),t.removeFlowTab().addFlowCode(t.tab+"\t"+u+"\n\n"+t.tab+"}"),null!==a){t.addFlowCode(" else {\n\n").addFlowTab();let e=a.build(t,n);e&&(e=o?l+" = "+e+";":"return "+e+";"),t.removeFlowTab().addFlowCode(t.tab+"\t"+e+"\n\n"+t.tab+"}\n\n")}else t.addFlowCode("\n\n");return t.format(l,n,e)}}const T_=xg(b_);Wf("select",T_);const S_=(...t)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),T_(...t));Wf("cond",S_);class w_ extends If{static get type(){return"ContextNode"}constructor(t,e={}){super(),this.isContextNode=!0,this.node=t,this.value=e}getScope(){return this.node.getScope()}getNodeType(t){return this.node.getNodeType(t)}analyze(t){this.node.build(t)}setup(t){const e=t.getContext();t.setContext({...t.context,...this.value});const n=this.node.build(t);return t.setContext(e),n}generate(t,e){const n=t.getContext();t.setContext({...t.context,...this.value});const i=this.node.build(t,e);return t.setContext(n),i}}const E_=xg(w_),A_=(t,e)=>E_(t,{label:e});Wf("context",E_),Wf("label",A_);class N_ extends If{static get type(){return"VarNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.global=!0,this.isVarNode=!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}generate(t){const{node:e,name:n}=this,i=t.getVarFromNode(this,n,t.getVectorType(this.getNodeType(t))),s=t.getPropertyName(i),r=e.build(t,i.type);return t.addLineFlowCode(`${s} = ${r}`,this),s}}const C_=xg(N_);Wf("temp",C_),Wf("toVar",((...t)=>C_(...t).append()));class R_ extends If{static get type(){return"VaryingNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.isVaryingNode=!0}isGlobal(){return!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}setupVarying(t){const e=t.getNodeProperties(this);let n=e.varying;if(void 0===n){const i=this.name,s=this.getNodeType(t);e.varying=n=t.getVaryingFromNode(this,i,s),e.node=this.node}return n.needsInterpolation||(n.needsInterpolation="fragment"===t.shaderStage),n}setup(t){this.setupVarying(t)}analyze(t){return this.setupVarying(t),this.node.analyze(t)}generate(t){const e=t.getNodeProperties(this),n=this.setupVarying(t);if(void 0===e.propertyName){const i=this.getNodeType(t),s=t.getPropertyName(n,Tf.VERTEX);t.flowNodeFromShaderStage(Tf.VERTEX,this.node,i,s),e.propertyName=s}return t.getPropertyName(n)}}const I_=xg(R_);Wf("varying",I_);const L_="WorkingColorSpace",P_="OutputColorSpace";function U_(t){let e=null;return t===Je?e="Linear":t===$e&&(e="sRGB"),e}function D_(t,e){return U_(t)+"To"+U_(e)}class O_ extends Uf{static get type(){return"ColorSpaceNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.source=e,this.target=n}getColorSpace(t,e){return e===L_?mi.workingColorSpace:e===P_?t.context.outputColorSpace||t.renderer.outputColorSpace:e}setup(t){const{renderer:e}=t,{colorNode:n}=this,i=this.getColorSpace(t,this.source),s=this.getColorSpace(t,this.target);if(i===s)return n;const r=D_(i,s);let a=null;const o=e.nodes.library.getColorSpaceFunction(r);return null!==o?a=kg(o(n.rgb),n.a):(console.error("ColorSpaceNode: Unsupported Color Space configuration.",r),a=n),a}}const z_=t=>vg(new O_(vg(t),L_,P_)),V_=t=>vg(new O_(vg(t),P_,L_)),F_=(t,e)=>vg(new O_(vg(t),L_,e)),B_=(t,e)=>vg(new O_(vg(t),e,L_));Wf("toOutputColorSpace",z_),Wf("toWorkingColorSpace",V_),Wf("workingToColorSpace",F_),Wf("colorSpaceToWorking",B_);let k_=class extends Lf{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),n=this.referenceNode.getNodeType(),i=this.getNodeType();return t.format(e,n,i)}};class H_ extends If{static get type(){return"ReferenceBaseNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=Sf.OBJECT}setGroup(t){return this.group=t,this}element(t){return vg(new k_(this,vg(t)))}setNodeType(t){const e=av(null,t).getSelf();null!==this.group&&e.setGroup(this.group),this.node=e}getNodeType(t){return null===this.node&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let t=1;t<e.length;t++)n=n[e[t]];return n}updateReference(t){return this.reference=null!==this.object?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}class G_ extends H_{static get type(){return"RendererReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.renderer=n,this.setGroup(iv)}updateReference(t){return this.reference=null!==this.renderer?this.renderer:t.renderer,this.reference}}const W_=(t,e,n)=>vg(new G_(t,e,n));class j_ extends Uf{static get type(){return"ToneMappingNode"}constructor(t,e=q_,n=null){super("vec3"),this.toneMapping=t,this.exposureNode=e,this.colorNode=n}getCacheKey(){return ff(super.getCacheKey(),this.toneMapping)}setup(t){const e=this.colorNode||t.context.color,n=this.toneMapping;if(n===J)return e;let i=null;const s=t.renderer.nodes.library.getToneMappingFunction(n);return null!==s?i=kg(s(e.rgb,this.exposureNode),e.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=e),i}}const X_=(t,e,n)=>vg(new j_(t,vg(e),vg(n))),q_=W_("toneMappingExposure","float");Wf("toneMapping",((t,e,n)=>X_(e,n,t)));class Y_ extends Bf{static get type(){return"BufferAttributeNode"}constructor(t,e=null,n=0,i=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferStride=n,this.bufferOffset=i,this.usage=Cn,this.instanced=!1,this.attribute=null,this.global=!0,t&&!0===t.isBufferAttribute&&(this.attribute=t,this.usage=t.usage,this.instanced=t.isInstancedBufferAttribute)}getHash(t){if(0===this.bufferStride&&0===this.bufferOffset){let e=t.globalCache.getData(this.value);return void 0===e&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getNodeType(t){return null===this.bufferType&&(this.bufferType=t.getTypeFromAttribute(this.attribute)),this.bufferType}setup(t){if(null!==this.attribute)return;const e=this.getNodeType(t),n=this.value,i=t.getTypeLength(e),s=this.bufferStride||i,r=this.bufferOffset,a=!0===n.isInterleavedBuffer?n:new cc(n,s),o=new hc(a,i,r);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(t){const e=this.getNodeType(t),n=t.getBufferAttributeFromNode(this,e),i=t.getPropertyName(n);let s=null;if("vertex"===t.shaderStage||"compute"===t.shaderStage)this.name=i,s=i;else{s=I_(this).build(t,e)}return s}getInputType(){return"bufferAttribute"}setUsage(t){return this.usage=t,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=t),this}setInstanced(t){return this.instanced=t,this}}const Z_=(t,e,n,i)=>vg(new Y_(t,e,n,i)),$_=(t,e,n,i)=>Z_(t,e,n,i).setUsage(Rn),J_=(t,e,n,i)=>Z_(t,e,n,i).setInstanced(!0),K_=(t,e,n,i)=>$_(t,e,n,i).setInstanced(!0);Wf("toAttribute",(t=>Z_(t.value)));class Q_ extends If{static get type(){return"ComputeNode"}constructor(t,e,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=t,this.count=e,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=Sf.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}updateDispatchCount(){const{count:t,workgroupSize:e}=this;let n=e[0];for(let t=1;t<e.length;t++)n*=e[t];this.dispatchCount=Math.ceil(t/n)}onInit(){}updateBefore({renderer:t}){t.compute(this)}generate(t){const{shaderStage:e}=t;if("compute"===e){const e=this.computeNode.build(t,"void");""!==e&&t.addLineFlowCode(e,this)}}}const tx=(t,e,n)=>vg(new Q_(vg(t),e,n));Wf("compute",tx);class ex extends If{static get type(){return"CacheNode"}constructor(t,e=!0){super(),this.node=t,this.parent=e,this.isCacheNode=!0}getNodeType(t){return this.node.getNodeType(t)}build(t,...e){const n=t.getCache(),i=t.getCacheFromNode(this,this.parent);t.setCache(i);const s=this.node.build(t,...e);return t.setCache(n),s}}const nx=(t,...e)=>vg(new ex(vg(t),...e));Wf("cache",nx);class ix extends If{static get type(){return"BypassNode"}constructor(t,e){super(),this.isBypassNode=!0,this.outputNode=t,this.callNode=e}getNodeType(t){return this.outputNode.getNodeType(t)}generate(t){const e=this.callNode.build(t,"void");return""!==e&&t.addLineFlowCode(e,this),this.outputNode.build(t)}}const sx=xg(ix);Wf("bypass",sx);class rx extends If{static get type(){return"RemapNode"}constructor(t,e,n,i=Cg(0),s=Cg(1)){super(),this.node=t,this.inLowNode=e,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}setup(){const{node:t,inLowNode:e,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:r}=this;let a=t.sub(e).div(n.sub(e));return!0===r&&(a=a.clamp()),a.mul(s.sub(i)).add(i)}}const ax=xg(rx,null,null,{doClamp:!1}),ox=xg(rx);Wf("remap",ax),Wf("remapClamp",ox);class lx extends If{static get type(){return"ExpressionNode"}constructor(t="",e="void"){super(e),this.snippet=t}generate(t,e){const n=this.getNodeType(t),i=this.snippet;if("void"!==n)return t.format(`( ${i} )`,n,e);t.addLineFlowCode(i,this)}}const cx=xg(lx),ux=t=>(t?T_(t,cx("discard")):cx("discard")).append(),hx=()=>cx("return").append();Wf("discard",ux);class dx extends Uf{static get type(){return"RenderOutputNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.toneMapping=e,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:t}){let e=this.colorNode||t.color;const n=(null!==this.toneMapping?this.toneMapping:t.toneMapping)||J,i=(null!==this.outputColorSpace?this.outputColorSpace:t.outputColorSpace)||Ze;return n!==J&&(e=e.toneMapping(n)),i!==Ze&&i!==mi.workingColorSpace&&(e=e.workingToColorSpace(i)),e}}const px=(t,e=null,n=null)=>vg(new dx(vg(t),e,n));function mx(t){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",t)}Wf("renderOutput",px);class fx extends If{static get type(){return"AttributeNode"}constructor(t,e=null){super(e),this.global=!0,this._attributeName=t}getHash(t){return this.getAttributeName(t)}getNodeType(t){let e=this.nodeType;if(null===e){const n=this.getAttributeName(t);if(t.hasGeometryAttribute(n)){const i=t.geometry.getAttribute(n);e=t.getTypeFromAttribute(i)}else e="float"}return e}setAttributeName(t){return this._attributeName=t,this}getAttributeName(){return this._attributeName}generate(t){const e=this.getAttributeName(t),n=this.getNodeType(t);if(!0===t.hasGeometryAttribute(e)){const i=t.geometry.getAttribute(e),s=t.getTypeFromAttribute(i),r=t.getAttribute(e,s);if("vertex"===t.shaderStage)return t.format(r.name,s,n);return I_(this).build(t,n)}return console.warn(`AttributeNode: Vertex attribute "${e}" not found on geometry.`),t.generateConst(n)}serialize(t){super.serialize(t),t.global=this.global,t._attributeName=this._attributeName}deserialize(t){super.deserialize(t),this.global=t.global,this._attributeName=t._attributeName}}const gx=(t,e)=>vg(new fx(t,e)),vx=t=>gx("uv"+(t>0?t:""),"vec2");class yx extends If{static get type(){return"TextureSizeNode"}constructor(t,e=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=t,this.levelNode=e}generate(t,e){const n=this.textureNode.build(t,"property"),i=null===this.levelNode?"0":this.levelNode.build(t,"int");return t.format(`${t.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(t),e)}}const _x=xg(yx);class xx extends rv{static get type(){return"MaxMipLevelNode"}constructor(t){super(0),this._textureNode=t,this.updateType=Sf.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const t=this.texture,e=t.images,n=e&&e.length>0?e[0]&&e[0].image||e[0]:t.image;if(n&&void 0!==n.width){const{width:t,height:e}=n;this.value=Math.log2(Math.max(t,e))}}}const Mx=xg(xx);class bx extends rv{static get type(){return"TextureNode"}constructor(t,e=null,n=null,i=null){super(t),this.isTextureNode=!0,this.uvNode=e,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Sf.NONE,this.referenceNode=null,this._value=t,this._matrixUniform=null,this.setUpdateMatrix(null===e)}set value(t){this.referenceNode?this.referenceNode.value=t:this._value=t}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===It?"uvec4":this.value.type===Rt?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return vx(this.value.channel)}updateReference(){return this.value}getTransformedUV(t){return null===this._matrixUniform&&(this._matrixUniform=av(this.value.matrix)),this._matrixUniform.mul(zg(t,1)).xy}setUpdateMatrix(t){return this.updateMatrix=t,this.updateType=t?Sf.FRAME:Sf.NONE,this}setupUV(t,e){const n=this.value;return!t.isFlipY()||!0!==n.isRenderTargetTexture&&!0!==n.isFramebufferTexture&&!0!==n.isDepthTexture||(e=this.sampler?e.flipY():e.setY(Rg(_x(this,this.levelNode).y).sub(e.y).sub(1))),e}setup(t){const e=t.getNodeProperties(this);e.referenceNode=this.referenceNode;let n=this.uvNode;null!==n&&!0!==t.context.forceUVContext||!t.context.getUV||(n=t.context.getUV(this)),n||(n=this.getDefaultUV()),!0===this.updateMatrix&&(n=this.getTransformedUV(n)),n=this.setupUV(t,n);let i=this.levelNode;null===i&&t.context.getTextureLevel&&(i=t.context.getTextureLevel(this)),e.uvNode=n,e.levelNode=i,e.biasNode=this.biasNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.depthNode=this.depthNode}generateUV(t,e){return e.build(t,!0===this.sampler?"vec2":"ivec2")}generateSnippet(t,e,n,i,s,r,a,o){const l=this.value;let c;return c=i?t.generateTextureLevel(l,e,n,i,r):s?t.generateTextureBias(l,e,n,s,r):o?t.generateTextureGrad(l,e,n,o,r):a?t.generateTextureCompare(l,e,n,a,r):!1===this.sampler?t.generateTextureLoad(l,e,n,r):t.generateTexture(l,e,n,r),c}generate(t,e){const n=t.getNodeProperties(this),i=this.value;if(!i||!0!==i.isTexture)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(t,"property");if("sampler"===e)return s+"_sampler";if(t.isReference(e))return s;{const r=t.getDataFromNode(this);let a=r.propertyName;if(void 0===a){const{uvNode:e,levelNode:i,biasNode:o,compareNode:l,depthNode:c,gradNode:u}=n,h=this.generateUV(t,e),d=i?i.build(t,"float"):null,p=o?o.build(t,"float"):null,m=c?c.build(t,"int"):null,f=l?l.build(t,"float"):null,g=u?[u[0].build(t,"vec2"),u[1].build(t,"vec2")]:null,v=t.getVarFromNode(this);a=t.getPropertyName(v);const y=this.generateSnippet(t,s,h,d,p,m,f,g);t.addLineFlowCode(`${a} = ${y}`,this),r.snippet=y,r.propertyName=a}let o=a;const l=this.getNodeType(t);return t.needsToWorkingColorSpace(i)&&(o=B_(cx(o,l),i.colorSpace).setup(t).build(t,l)),t.format(o,l,e)}}setSampler(t){return this.sampler=t,this}getSampler(){return this.sampler}uv(t){const e=this.clone();return e.uvNode=vg(t),e.referenceNode=this.getSelf(),vg(e)}blur(t){const e=this.clone();return e.biasNode=vg(t).mul(Mx(e)),e.referenceNode=this.getSelf(),vg(e)}level(t){const e=this.clone();return e.levelNode=vg(t),e.referenceNode=this.getSelf(),vg(e)}size(t){return _x(this,t)}bias(t){const e=this.clone();return e.biasNode=vg(t),e.referenceNode=this.getSelf(),vg(e)}compare(t){const e=this.clone();return e.compareNode=vg(t),e.referenceNode=this.getSelf(),vg(e)}grad(t,e){const n=this.clone();return n.gradNode=[vg(t),vg(e)],n.referenceNode=this.getSelf(),vg(n)}depth(t){const e=this.clone();return e.depthNode=vg(t),e.referenceNode=this.getSelf(),vg(e)}serialize(t){super.serialize(t),t.value=this.value.toJSON(t.meta).uuid,t.sampler=this.sampler,t.updateMatrix=this.updateMatrix,t.updateType=this.updateType}deserialize(t){super.deserialize(t),this.value=t.meta.textures[t.value],this.sampler=t.sampler,this.updateMatrix=t.updateMatrix,this.updateType=t.updateType}update(){const t=this.value,e=this._matrixUniform;null!==e&&(e.value=t.matrix),!0===t.matrixAutoUpdate&&t.updateMatrix()}clone(){const t=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return t.sampler=this.sampler,t}}const Tx=xg(bx),Sx=(...t)=>Tx(...t).setSampler(!1),wx=t=>(!0===t.isNode?t:Tx(t)).convert("sampler"),Ex=av("float").label("cameraNear").setGroup(iv).onRenderUpdate((({camera:t})=>t.near)),Ax=av("float").label("cameraFar").setGroup(iv).onRenderUpdate((({camera:t})=>t.far)),Nx=av("float").label("cameraLogDepth").setGroup(iv).onRenderUpdate((({camera:t})=>2/(Math.log(t.far+1)/Math.LN2))),Cx=av("mat4").label("cameraProjectionMatrix").setGroup(iv).onRenderUpdate((({camera:t})=>t.projectionMatrix)),Rx=av("mat4").label("cameraProjectionMatrixInverse").setGroup(iv).onRenderUpdate((({camera:t})=>t.projectionMatrixInverse)),Ix=av("mat4").label("cameraViewMatrix").setGroup(iv).onRenderUpdate((({camera:t})=>t.matrixWorldInverse)),Lx=av("mat4").label("cameraWorldMatrix").setGroup(iv).onRenderUpdate((({camera:t})=>t.matrixWorld)),Px=av("mat3").label("cameraNormalMatrix").setGroup(iv).onRenderUpdate((({camera:t})=>t.normalMatrix)),Ux=av(new Li).label("cameraPosition").setGroup(iv).onRenderUpdate((({camera:t},e)=>e.value.setFromMatrixPosition(t.matrixWorld)));class Dx extends If{static get type(){return"Object3DNode"}constructor(t,e=null){super(),this.scope=t,this.object3d=e,this.updateType=Sf.OBJECT,this._uniformNode=new rv(null)}getNodeType(){const t=this.scope;return t===Dx.WORLD_MATRIX?"mat4":t===Dx.POSITION||t===Dx.VIEW_POSITION||t===Dx.DIRECTION||t===Dx.SCALE?"vec3":void 0}update(t){const e=this.object3d,n=this._uniformNode,i=this.scope;if(i===Dx.WORLD_MATRIX)n.value=e.matrixWorld;else if(i===Dx.POSITION)n.value=n.value||new Li,n.value.setFromMatrixPosition(e.matrixWorld);else if(i===Dx.SCALE)n.value=n.value||new Li,n.value.setFromMatrixScale(e.matrixWorld);else if(i===Dx.DIRECTION)n.value=n.value||new Li,e.getWorldDirection(n.value);else if(i===Dx.VIEW_POSITION){const i=t.camera;n.value=n.value||new Li,n.value.setFromMatrixPosition(e.matrixWorld),n.value.applyMatrix4(i.matrixWorldInverse)}}generate(t){const e=this.scope;return e===Dx.WORLD_MATRIX?this._uniformNode.nodeType="mat4":e!==Dx.POSITION&&e!==Dx.VIEW_POSITION&&e!==Dx.DIRECTION&&e!==Dx.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(t)}serialize(t){super.serialize(t),t.scope=this.scope}deserialize(t){super.deserialize(t),this.scope=t.scope}}Dx.WORLD_MATRIX="worldMatrix",Dx.POSITION="position",Dx.SCALE="scale",Dx.VIEW_POSITION="viewPosition",Dx.DIRECTION="direction";const Ox=xg(Dx,Dx.DIRECTION),zx=xg(Dx,Dx.WORLD_MATRIX),Vx=xg(Dx,Dx.POSITION),Fx=xg(Dx,Dx.SCALE),Bx=xg(Dx,Dx.VIEW_POSITION);class kx extends Dx{static get type(){return"ModelNode"}constructor(t){super(t)}update(t){this.object3d=t.object,super.update(t)}}const Hx=Mg(kx,kx.DIRECTION),Gx=Mg(kx,kx.WORLD_MATRIX),Wx=Mg(kx,kx.POSITION),jx=Mg(kx,kx.SCALE),Xx=Mg(kx,kx.VIEW_POSITION),qx=av(new ei).onObjectUpdate((({object:t},e)=>e.value.getNormalMatrix(t.matrixWorld))),Yx=av(new ls).onObjectUpdate((({object:t},e)=>e.value.copy(t.matrixWorld).invert())),Zx=Ix.mul(Gx).toVar("modelViewMatrix_2"),$x=bg((t=>(t.context.isHighPrecisionModelViewMatrix=!0,av("mat4").onObjectUpdate((({object:t,camera:e})=>t.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld)))))).once()().toVar("highPrecisionModelViewMatrix"),Jx=bg((t=>{const e=t.context.isHighPrecisionModelViewMatrix;return av("mat3").onObjectUpdate((({object:t,camera:n})=>(!0!==e&&t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix))))})).once()().toVar("highPrecisionModelNormalMatrix"),Kx=gx("position","vec3"),Qx=Kx.varying("positionLocal"),tM=Kx.varying("positionPrevious"),eM=Gx.mul(Qx).xyz.varying("v_positionWorld"),nM=Qx.transformDirection(Gx).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),iM=Zx.mul(Qx).xyz.varying("v_positionView"),sM=iM.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class rM extends If{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(t){const{renderer:e,material:n}=t;return e.coordinateSystem===Bn&&n.side===d?"false":t.getFrontFacing()}}const aM=Mg(rM),oM=Cg(aM).mul(2).sub(1),lM=gx("normal","vec3"),cM=bg((t=>!1===t.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),zg(0,1,0)):lM),"vec3").once()().toVar("normalLocal"),uM=iM.dFdx().cross(iM.dFdy()).normalize().toVar("normalFlat"),hM=bg((t=>{let e;return e=!0===t.material.flatShading?uM:I_(vM(cM),"v_normalView").normalize(),e}),"vec3").once()().toVar("normalView"),dM=I_(hM.transformDirection(Ix),"v_normalWorld").normalize().toVar("normalWorld"),pM=bg((t=>t.context.setupNormal()),"vec3").once()().mul(oM).toVar("transformedNormalView"),mM=pM.transformDirection(Ix).toVar("transformedNormalWorld"),fM=bg((t=>t.context.setupClearcoatNormal()),"vec3").once()().mul(oM).toVar("transformedClearcoatNormalView"),gM=bg((([t,e=Gx])=>{const n=Xg(e),i=t.div(zg(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2])));return n.mul(i).xyz})),vM=bg((([t],e)=>{const n=e.renderer.nodes.modelNormalViewMatrix;if(null!==n)return n.transformDirection(t);const i=qx.mul(t);return Ix.transformDirection(i)})),yM=av(0).onReference((({material:t})=>t)).onRenderUpdate((({material:t})=>t.refractionRatio)),_M=sM.negate().reflect(pM),xM=sM.negate().refract(pM,yM),MM=_M.transformDirection(Ix).toVar("reflectVector"),bM=xM.transformDirection(Ix).toVar("reflectVector");class TM extends bx{static get type(){return"CubeTextureNode"}constructor(t,e=null,n=null,i=null){super(t,e,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const t=this.value;return t.mapping===lt?MM:t.mapping===ct?bM:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',t.mapping),zg(0,0,0))}setUpdateMatrix(){}setupUV(t,e){const n=this.value;return t.renderer.coordinateSystem!==kn&&n.isRenderTargetTexture?e:zg(e.x.negate(),e.yz)}generateUV(t,e){return e.build(t,"vec3")}}const SM=xg(TM);class wM extends rv{static get type(){return"BufferNode"}constructor(t,e,n=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferCount=n}getElementType(t){return this.getNodeType(t)}getInputType(){return"buffer"}}const EM=(t,e,n)=>vg(new wM(t,e,n));class AM extends Lf{static get type(){return"UniformArrayElementNode"}constructor(t,e){super(t,e),this.isArrayBufferElementNode=!0}generate(t){const e=super.generate(t),n=this.getNodeType();return t.format(e,"vec4",n)}}class NM extends wM{static get type(){return"UniformArrayNode"}constructor(t,e=null){super(null,"vec4"),this.array=t,this.elementType=e,this._elementType=null,this._elementLength=0,this.updateType=Sf.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:t,value:e}=this,n=this.getElementLength(),i=this.getElementType();if(1===n)for(let n=0;n<t.length;n++){e[4*n]=t[n]}else if("color"===i)for(let n=0;n<t.length;n++){const i=4*n,s=t[n];e[i]=s.r,e[i+1]=s.g,e[i+2]=s.b||0}else for(let n=0;n<t.length;n++){const i=4*n,s=t[n];e[i]=s.x,e[i+1]=s.y,e[i+2]=s.z||0,e[i+3]=s.w||0}}setup(t){const e=this.array.length;this._elementType=null===this.elementType?yf(this.array[0]):this.elementType,this._elementLength=t.getTypeLength(this._elementType);let n=Float32Array;return"i"===this._elementType.charAt(0)?n=Int32Array:"u"===this._elementType.charAt(0)&&(n=Uint32Array),this.value=new n(4*e),this.bufferCount=e,this.bufferType=t.changeComponentType("vec4",t.getComponentType(this._elementType)),super.setup(t)}element(t){return vg(new AM(this,vg(t)))}}const CM=(t,e)=>vg(new NM(t,e)),RM=(t,e)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),vg(new NM(t,e)));class IM extends Lf{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),n=this.referenceNode.getNodeType(),i=this.getNodeType();return t.format(e,n,i)}}class LM extends If{static get type(){return"ReferenceNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=Sf.OBJECT}element(t){return vg(new IM(this,vg(t)))}setGroup(t){return this.group=t,this}label(t){return this.name=t,this}setNodeType(t){let e=null;e=null!==this.count?EM(null,t,this.count):Array.isArray(this.getValueFromReference())?CM(null,t):"texture"===t?Tx(null):"cubeTexture"===t?SM(null):av(null,t),null!==this.group&&e.setGroup(this.group),null!==this.name&&e.label(this.name),this.node=e.getSelf()}getNodeType(t){return null===this.node&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let t=1;t<e.length;t++)n=n[e[t]];return n}updateReference(t){return this.reference=null!==this.object?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}const PM=(t,e,n)=>vg(new LM(t,e,n)),UM=(t,e,n,i)=>vg(new LM(t,e,i,n));class DM extends LM{static get type(){return"MaterialReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(t){return this.reference=null!==this.material?this.material:t.material,this.reference}}const OM=(t,e,n)=>vg(new DM(t,e,n)),zM=bg((t=>(!1===t.geometry.hasAttribute("tangent")&&t.geometry.computeTangents(),gx("tangent","vec4"))))(),VM=zM.xyz.toVar("tangentLocal"),FM=Zx.mul(kg(VM,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),BM=FM.transformDirection(Ix).varying("v_tangentWorld").normalize().toVar("tangentWorld"),kM=FM.toVar("transformedTangentView"),HM=kM.transformDirection(Ix).normalize().toVar("transformedTangentWorld"),GM=t=>t.mul(zM.w).xyz,WM=I_(GM(lM.cross(zM)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),jM=I_(GM(cM.cross(VM)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),XM=I_(GM(hM.cross(FM)),"v_bitangentView").normalize().toVar("bitangentView"),qM=I_(GM(dM.cross(BM)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),YM=GM(pM.cross(kM)).normalize().toVar("transformedBitangentView"),ZM=YM.transformDirection(Ix).normalize().toVar("transformedBitangentWorld"),$M=Xg(FM,XM,hM),JM=sM.mul($M),KM=(t,e)=>t.sub(JM.mul(e)),QM=(()=>{let t=Sv.cross(sM);return t=t.cross(Sv).normalize(),t=p_(t,pM,bv.mul(dv.oneMinus()).oneMinus().pow2().pow2()).normalize(),t})(),tb=bg((t=>{const{eye_pos:e,surf_norm:n,mapN:i,uv:s}=t,r=e.dFdx(),a=e.dFdy(),o=s.dFdx(),l=s.dFdy(),c=n,u=a.cross(c),h=c.cross(r),d=u.mul(o.x).add(h.mul(l.x)),p=u.mul(o.y).add(h.mul(l.y)),m=d.dot(d).max(p.dot(p)),f=oM.mul(m.inverseSqrt());return Gv(d.mul(i.x,f),p.mul(i.y,f),c.mul(i.z)).normalize()}));class eb extends Uf{static get type(){return"NormalMapNode"}constructor(t,e=null){super("vec3"),this.node=t,this.scaleNode=e,this.normalMapType=0}setup(t){const{normalMapType:e,scaleNode:n}=this;let i=this.node.mul(2).sub(1);null!==n&&(i=zg(i.xy.mul(n),i.z));let s=null;if(1===e)s=vM(i);else if(0===e){s=!0===t.hasGeometryAttribute("tangent")?$M.mul(i).normalize():tb({eye_pos:iM,surf_norm:hM,mapN:i,uv:vx()})}return s}}const nb=xg(eb),ib=bg((({textureNode:t,bumpScale:e})=>{const n=e=>t.cache().context({getUV:t=>e(t.uvNode||vx()),forceUVContext:!0}),i=Cg(n((t=>t)));return Pg(Cg(n((t=>t.add(t.dFdx())))).sub(i),Cg(n((t=>t.add(t.dFdy())))).sub(i)).mul(e)})),sb=bg((t=>{const{surf_pos:e,surf_norm:n,dHdxy:i}=t,s=e.dFdx().normalize(),r=n,a=e.dFdy().normalize().cross(r),o=r.cross(s),l=s.dot(a).mul(oM),c=l.sign().mul(i.x.mul(a).add(i.y.mul(o)));return l.abs().mul(n).sub(c).normalize()}));class rb extends Uf{static get type(){return"BumpMapNode"}constructor(t,e=null){super("vec3"),this.textureNode=t,this.scaleNode=e}setup(){const t=null!==this.scaleNode?this.scaleNode:1,e=ib({textureNode:this.textureNode,bumpScale:t});return sb({surf_pos:iM,surf_norm:hM,dHdxy:e})}}const ab=xg(rb),ob=new Map;class lb extends If{static get type(){return"MaterialNode"}constructor(t){super(),this.scope=t}getCache(t,e){let n=ob.get(t);return void 0===n&&(n=OM(t,e),ob.set(t,n)),n}getFloat(t){return this.getCache(t,"float")}getColor(t){return this.getCache(t,"color")}getTexture(t){return this.getCache("map"===t?"map":t+"Map","texture")}setup(t){const e=t.context.material,n=this.scope;let i=null;if(n===lb.COLOR){const t=void 0!==e.color?this.getColor(n):zg();i=e.map&&!0===e.map.isTexture?t.mul(this.getTexture("map")):t}else if(n===lb.OPACITY){const t=this.getFloat(n);i=e.alphaMap&&!0===e.alphaMap.isTexture?t.mul(this.getTexture("alpha")):t}else if(n===lb.SPECULAR_STRENGTH)i=e.specularMap&&!0===e.specularMap.isTexture?this.getTexture("specular").r:Cg(1);else if(n===lb.SPECULAR_INTENSITY){const t=this.getFloat(n);i=e.specularMap?t.mul(this.getTexture(n).a):t}else if(n===lb.SPECULAR_COLOR){const t=this.getColor(n);i=e.specularColorMap&&!0===e.specularColorMap.isTexture?t.mul(this.getTexture(n).rgb):t}else if(n===lb.ROUGHNESS){const t=this.getFloat(n);i=e.roughnessMap&&!0===e.roughnessMap.isTexture?t.mul(this.getTexture(n).g):t}else if(n===lb.METALNESS){const t=this.getFloat(n);i=e.metalnessMap&&!0===e.metalnessMap.isTexture?t.mul(this.getTexture(n).b):t}else if(n===lb.EMISSIVE){const t=this.getFloat("emissiveIntensity"),s=this.getColor(n).mul(t);i=e.emissiveMap&&!0===e.emissiveMap.isTexture?s.mul(this.getTexture(n)):s}else if(n===lb.NORMAL)e.normalMap?(i=nb(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=e.normalMapType):i=e.bumpMap?ab(this.getTexture("bump").r,this.getFloat("bumpScale")):hM;else if(n===lb.CLEARCOAT){const t=this.getFloat(n);i=e.clearcoatMap&&!0===e.clearcoatMap.isTexture?t.mul(this.getTexture(n).r):t}else if(n===lb.CLEARCOAT_ROUGHNESS){const t=this.getFloat(n);i=e.clearcoatRoughnessMap&&!0===e.clearcoatRoughnessMap.isTexture?t.mul(this.getTexture(n).r):t}else if(n===lb.CLEARCOAT_NORMAL)i=e.clearcoatNormalMap?nb(this.getTexture(n),this.getCache(n+"Scale","vec2")):hM;else if(n===lb.SHEEN){const t=this.getColor("sheenColor").mul(this.getFloat("sheen"));i=e.sheenColorMap&&!0===e.sheenColorMap.isTexture?t.mul(this.getTexture("sheenColor").rgb):t}else if(n===lb.SHEEN_ROUGHNESS){const t=this.getFloat(n);i=e.sheenRoughnessMap&&!0===e.sheenRoughnessMap.isTexture?t.mul(this.getTexture(n).a):t,i=i.clamp(.07,1)}else if(n===lb.ANISOTROPY)if(e.anisotropyMap&&!0===e.anisotropyMap.isTexture){const t=this.getTexture(n);i=jg(Xb.x,Xb.y,Xb.y.negate(),Xb.x).mul(t.rg.mul(2).sub(Pg(1)).normalize().mul(t.b))}else i=Xb;else if(n===lb.IRIDESCENCE_THICKNESS){const t=PM("1","float",e.iridescenceThicknessRange);if(e.iridescenceThicknessMap){const s=PM("0","float",e.iridescenceThicknessRange);i=t.sub(s).mul(this.getTexture(n).g).add(s)}else i=t}else if(n===lb.TRANSMISSION){const t=this.getFloat(n);i=e.transmissionMap?t.mul(this.getTexture(n).r):t}else if(n===lb.THICKNESS){const t=this.getFloat(n);i=e.thicknessMap?t.mul(this.getTexture(n).g):t}else if(n===lb.IOR)i=this.getFloat(n);else if(n===lb.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===lb.AO_MAP)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const e=this.getNodeType(t);i=this.getCache(n,e)}return i}}lb.ALPHA_TEST="alphaTest",lb.COLOR="color",lb.OPACITY="opacity",lb.SHININESS="shininess",lb.SPECULAR="specular",lb.SPECULAR_STRENGTH="specularStrength",lb.SPECULAR_INTENSITY="specularIntensity",lb.SPECULAR_COLOR="specularColor",lb.REFLECTIVITY="reflectivity",lb.ROUGHNESS="roughness",lb.METALNESS="metalness",lb.NORMAL="normal",lb.CLEARCOAT="clearcoat",lb.CLEARCOAT_ROUGHNESS="clearcoatRoughness",lb.CLEARCOAT_NORMAL="clearcoatNormal",lb.EMISSIVE="emissive",lb.ROTATION="rotation",lb.SHEEN="sheen",lb.SHEEN_ROUGHNESS="sheenRoughness",lb.ANISOTROPY="anisotropy",lb.IRIDESCENCE="iridescence",lb.IRIDESCENCE_IOR="iridescenceIOR",lb.IRIDESCENCE_THICKNESS="iridescenceThickness",lb.IOR="ior",lb.TRANSMISSION="transmission",lb.THICKNESS="thickness",lb.ATTENUATION_DISTANCE="attenuationDistance",lb.ATTENUATION_COLOR="attenuationColor",lb.LINE_SCALE="scale",lb.LINE_DASH_SIZE="dashSize",lb.LINE_GAP_SIZE="gapSize",lb.LINE_WIDTH="linewidth",lb.LINE_DASH_OFFSET="dashOffset",lb.POINT_WIDTH="pointWidth",lb.DISPERSION="dispersion",lb.LIGHT_MAP="light",lb.AO_MAP="ao";const cb=Mg(lb,lb.ALPHA_TEST),ub=Mg(lb,lb.COLOR),hb=Mg(lb,lb.SHININESS),db=Mg(lb,lb.EMISSIVE),pb=Mg(lb,lb.OPACITY),mb=Mg(lb,lb.SPECULAR),fb=Mg(lb,lb.SPECULAR_INTENSITY),gb=Mg(lb,lb.SPECULAR_COLOR),vb=Mg(lb,lb.SPECULAR_STRENGTH),yb=Mg(lb,lb.REFLECTIVITY),_b=Mg(lb,lb.ROUGHNESS),xb=Mg(lb,lb.METALNESS),Mb=Mg(lb,lb.NORMAL).context({getUV:null}),bb=Mg(lb,lb.CLEARCOAT),Tb=Mg(lb,lb.CLEARCOAT_ROUGHNESS),Sb=Mg(lb,lb.CLEARCOAT_NORMAL).context({getUV:null}),wb=Mg(lb,lb.ROTATION),Eb=Mg(lb,lb.SHEEN),Ab=Mg(lb,lb.SHEEN_ROUGHNESS),Nb=Mg(lb,lb.ANISOTROPY),Cb=Mg(lb,lb.IRIDESCENCE),Rb=Mg(lb,lb.IRIDESCENCE_IOR),Ib=Mg(lb,lb.IRIDESCENCE_THICKNESS),Lb=Mg(lb,lb.TRANSMISSION),Pb=Mg(lb,lb.THICKNESS),Ub=Mg(lb,lb.IOR),Db=Mg(lb,lb.ATTENUATION_DISTANCE),Ob=Mg(lb,lb.ATTENUATION_COLOR),zb=Mg(lb,lb.LINE_SCALE),Vb=Mg(lb,lb.LINE_DASH_SIZE),Fb=Mg(lb,lb.LINE_GAP_SIZE),Bb=Mg(lb,lb.LINE_WIDTH),kb=Mg(lb,lb.LINE_DASH_OFFSET),Hb=Mg(lb,lb.POINT_WIDTH),Gb=Mg(lb,lb.DISPERSION),Wb=Mg(lb,lb.LIGHT_MAP),jb=Mg(lb,lb.AO_MAP),Xb=av(new ti).onReference((function(t){return t.material})).onRenderUpdate((function({material:t}){this.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation))}));class qb extends Uf{static get type(){return"ModelViewProjectionNode"}constructor(t=null){super("vec4"),this.positionNode=t}setup(t){if("fragment"===t.shaderStage)return I_(t.context.mvp);const e=this.positionNode||Qx,n=t.renderer.nodes.modelViewMatrix||Zx;return Cx.mul(n).mul(e)}}const Yb=xg(qb);class Zb extends If{static get type(){return"IndexNode"}constructor(t){super("uint"),this.scope=t,this.isInstanceIndexNode=!0}generate(t){const e=this.getNodeType(t),n=this.scope;let i,s;if(n===Zb.VERTEX)i=t.getVertexIndex();else if(n===Zb.INSTANCE)i=t.getInstanceIndex();else if(n===Zb.DRAW)i=t.getDrawIndex();else if(n===Zb.INVOCATION_LOCAL)i=t.getInvocationLocalIndex();else if(n===Zb.INVOCATION_SUBGROUP)i=t.getInvocationSubgroupIndex();else{if(n!==Zb.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+n);i=t.getSubgroupIndex()}if("vertex"===t.shaderStage||"compute"===t.shaderStage)s=i;else{s=I_(this).build(t,e)}return s}}Zb.VERTEX="vertex",Zb.INSTANCE="instance",Zb.SUBGROUP="subgroup",Zb.INVOCATION_LOCAL="invocationLocal",Zb.INVOCATION_SUBGROUP="invocationSubgroup",Zb.DRAW="draw";const $b=Mg(Zb,Zb.VERTEX),Jb=Mg(Zb,Zb.INSTANCE),Kb=Mg(Zb,Zb.SUBGROUP),Qb=Mg(Zb,Zb.INVOCATION_SUBGROUP),tT=Mg(Zb,Zb.INVOCATION_LOCAL),eT=Mg(Zb,Zb.DRAW);class nT extends If{static get type(){return"InstanceNode"}constructor(t){super("void"),this.instanceMesh=t,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Sf.FRAME,this.buffer=null,this.bufferColor=null}setup(t){let e=this.instanceMatrixNode,n=this.instanceColorNode;const i=this.instanceMesh;if(null===e){const t=i.instanceMatrix;if(i.count<=1e3)e=EM(t.array,"mat4",Math.max(i.count,1)).element(Jb);else{const n=new fm(t.array,16,1);this.buffer=n;const i=t.usage===Rn?K_:J_,s=[i(n,"vec4",16,0),i(n,"vec4",16,4),i(n,"vec4",16,8),i(n,"vec4",16,12)];e=qg(...s)}this.instanceMatrixNode=e}const s=i.instanceColor;if(s&&null===n){const t=new Xc(s.array,3),e=s.usage===Rn?K_:J_;this.bufferColor=t,n=zg(e(t,"vec3",3,0)),this.instanceColorNode=n}const r=e.mul(Qx).xyz;if(Qx.assign(r),t.hasGeometryAttribute("normal")){const t=gM(cM,e);cM.assign(t)}null!==this.instanceColorNode&&cv("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==Rn&&null!=this.buffer&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==Rn&&null!=this.bufferColor&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const iT=xg(nT);class sT extends If{static get type(){return"BatchNode"}constructor(t){super("void"),this.batchMesh=t,this.batchingIdNode=null}setup(t){null===this.batchingIdNode&&(null===t.getDrawIndex()?this.batchingIdNode=Jb:this.batchingIdNode=eT);const e=bg((([t])=>{const e=_x(Sx(this.batchMesh._indirectTexture),0),n=Rg(t).modInt(Rg(e)),i=Rg(t).div(Rg(e));return Sx(this.batchMesh._indirectTexture,Ug(n,i)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),n=e(Rg(this.batchingIdNode)),i=this.batchMesh._matricesTexture,s=_x(Sx(i),0),r=Cg(n).mul(4).toInt().toVar(),a=r.modInt(s),o=r.div(Rg(s)),l=qg(Sx(i,Ug(a,o)),Sx(i,Ug(a.add(1),o)),Sx(i,Ug(a.add(2),o)),Sx(i,Ug(a.add(3),o))),c=this.batchMesh._colorsTexture;if(null!==c){const t=bg((([t])=>{const e=_x(Sx(c),0).x,n=t,i=n.modInt(e),s=n.div(e);return Sx(c,Ug(i,s)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),e=t(n);cv("vec3","vBatchColor").assign(e)}const u=Xg(l);Qx.assign(l.mul(Qx));const h=cM.div(zg(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),d=u.mul(h).xyz;cM.assign(d),t.hasGeometryAttribute("tangent")&&VM.mulAssign(u)}}const rT=xg(sT),aT=new WeakMap;class oT extends If{static get type(){return"SkinningNode"}constructor(t,e=!1){let n,i,s;super("void"),this.skinnedMesh=t,this.useReference=e,this.updateType=Sf.OBJECT,this.skinIndexNode=gx("skinIndex","uvec4"),this.skinWeightNode=gx("skinWeight","vec4"),e?(n=PM("bindMatrix","mat4"),i=PM("bindMatrixInverse","mat4"),s=UM("skeleton.boneMatrices","mat4",t.skeleton.bones.length)):(n=av(t.bindMatrix,"mat4"),i=av(t.bindMatrixInverse,"mat4"),s=EM(t.skeleton.boneMatrices,"mat4",t.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=i,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(t=this.boneMatricesNode,e=Qx){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=t.element(n.x),o=t.element(n.y),l=t.element(n.z),c=t.element(n.w),u=s.mul(e),h=Gv(a.mul(i.x).mul(u),o.mul(i.y).mul(u),l.mul(i.z).mul(u),c.mul(i.w).mul(u));return r.mul(h).xyz}getSkinnedNormal(t=this.boneMatricesNode,e=cM){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=t.element(n.x),o=t.element(n.y),l=t.element(n.z),c=t.element(n.w);let u=Gv(i.x.mul(a),i.y.mul(o),i.z.mul(l),i.w.mul(c));return u=r.mul(u).mul(s),u.transformDirection(e).xyz}getPreviousSkinnedPosition(t){const e=t.object;return null===this.previousBoneMatricesNode&&(e.skeleton.previousBoneMatrices=new Float32Array(e.skeleton.boneMatrices),this.previousBoneMatricesNode=UM("skeleton.previousBoneMatrices","mat4",e.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,tM)}needsPreviousBoneMatrices(t){const e=t.renderer.getMRT();return e&&e.has("velocity")}setup(t){this.needsPreviousBoneMatrices(t)&&tM.assign(this.getPreviousSkinnedPosition(t));const e=this.getSkinnedPosition();if(Qx.assign(e),t.hasGeometryAttribute("normal")){const e=this.getSkinnedNormal();cM.assign(e),t.hasGeometryAttribute("tangent")&&VM.assign(e)}}generate(t,e){if("void"!==e)return Qx.build(t,e)}update(t){const e=(this.useReference?t.object:this.skinnedMesh).skeleton;aT.get(e)!==t.frameId&&(aT.set(e,t.frameId),null!==this.previousBoneMatricesNode&&e.previousBoneMatrices.set(e.boneMatrices),e.update())}}const lT=t=>vg(new oT(t)),cT=t=>vg(new oT(t,!0));class uT extends If{static get type(){return"LoopNode"}constructor(t=[]){super(),this.params=t}getVarName(t){return String.fromCharCode("i".charCodeAt()+t)}getProperties(t){const e=t.getNodeProperties(this);if(void 0!==e.stackNode)return e;const n={};for(let t=0,e=this.params.length-1;t<e;t++){const e=this.params[t],i=!0!==e.isNode&&e.name||this.getVarName(t),s=!0!==e.isNode&&e.type||"int";n[i]=cx(i,s)}const i=t.addStack();return e.returnsNode=this.params[this.params.length-1](n,i,t),e.stackNode=i,t.removeStack(),e}getNodeType(t){const{returnsNode:e}=this.getProperties(t);return e?e.getNodeType(t):"void"}setup(t){this.getProperties(t)}generate(t){const e=this.getProperties(t),n=this.params,i=e.stackNode;for(let e=0,i=n.length-1;e<i;e++){const i=n[e];let s=null,r=null,a=null,o=null,l=null,c=null;i.isNode?(o="int",a=this.getVarName(e),s="0",r=i.build(t,o),l="<"):(o=i.type||"int",a=i.name||this.getVarName(e),s=i.start,r=i.end,l=i.condition,c=i.update,"number"==typeof s?s=s.toString():s&&s.isNode&&(s=s.build(t,o)),"number"==typeof r?r=r.toString():r&&r.isNode&&(r=r.build(t,o)),void 0!==s&&void 0===r?(s+=" - 1",r="0",l=">="):void 0!==r&&void 0===s&&(s="0",l="<"),void 0===l&&(l=Number(s)>Number(r)?">=":"<"));const u={start:s,end:r,condition:l},h=u.start,d=u.end;let p="",m="",f="";c||(c="int"===o||"uint"===o?l.includes("<")?"++":"--":l.includes("<")?"+= 1.":"-= 1."),p+=t.getVar(o,a)+" = "+h,m+=a+" "+l+" "+d,f+=a+" "+c;const g=`for ( ${p}; ${m}; ${f} )`;t.addFlowCode((0===e?"\n":"")+t.tab+g+" {\n\n").addFlowTab()}const s=i.build(t,"void"),r=e.returnsNode?e.returnsNode.build(t):"";t.removeFlowTab().addFlowCode("\n"+t.tab+s);for(let e=0,n=this.params.length-1;e<n;e++)t.addFlowCode((0===e?"":t.tab)+"}\n\n").removeFlowTab();return t.addFlowTab(),r}}const hT=(...t)=>vg(new uT(_g(t,"int"))).append(),dT=()=>cx("continue").append(),pT=()=>cx("break").append(),mT=(...t)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),hT(...t)),fT=new WeakMap,gT=new Si,vT=bg((({bufferMap:t,influence:e,stride:n,width:i,depth:s,offset:r})=>{const a=Rg($b).mul(n).add(r),o=a.div(i),l=a.sub(o.mul(i));return Sx(t,Ug(l,o)).depth(s).mul(e)}));class yT extends If{static get type(){return"MorphNode"}constructor(t){super("void"),this.mesh=t,this.morphBaseInfluence=av(1),this.updateType=Sf.OBJECT}setup(t){const{geometry:e}=t,n=void 0!==e.morphAttributes.position,i=e.hasAttribute("normal")&&void 0!==e.morphAttributes.normal,s=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,r=void 0!==s?s.length:0,{texture:a,stride:o,size:l}=function(t){const e=void 0!==t.morphAttributes.position,n=void 0!==t.morphAttributes.normal,i=void 0!==t.morphAttributes.color,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=void 0!==s?s.length:0;let a=fT.get(t);if(void 0===a||a.count!==r){void 0!==a&&a.texture.dispose();const o=t.morphAttributes.position||[],l=t.morphAttributes.normal||[],c=t.morphAttributes.color||[];let u=0;!0===e&&(u=1),!0===n&&(u=2),!0===i&&(u=3);let h=t.attributes.position.count*u,d=1;const p=4096;h>p&&(d=Math.ceil(h/p),h=p);const m=new Float32Array(h*d*4*r),f=new Ai(m,h,d,r);f.type=Lt,f.needsUpdate=!0;const g=4*u;for(let y=0;y<r;y++){const _=o[y],x=l[y],M=c[y],b=h*d*4*y;for(let T=0;T<_.count;T++){const S=T*g;!0===e&&(gT.fromBufferAttribute(_,T),m[b+S+0]=gT.x,m[b+S+1]=gT.y,m[b+S+2]=gT.z,m[b+S+3]=0),!0===n&&(gT.fromBufferAttribute(x,T),m[b+S+4]=gT.x,m[b+S+5]=gT.y,m[b+S+6]=gT.z,m[b+S+7]=0),!0===i&&(gT.fromBufferAttribute(M,T),m[b+S+8]=gT.x,m[b+S+9]=gT.y,m[b+S+10]=gT.z,m[b+S+11]=4===M.itemSize?gT.w:1)}}function v(){f.dispose(),fT.delete(t),t.removeEventListener("dispose",v)}a={count:r,texture:f,stride:u,size:new ti(h,d)},fT.set(t,a),t.addEventListener("dispose",v)}return a}(e);!0===n&&Qx.mulAssign(this.morphBaseInfluence),!0===i&&cM.mulAssign(this.morphBaseInfluence);const c=Rg(l.width);hT(r,(({i:t})=>{const e=Cg(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?e.assign(Sx(this.mesh.morphTexture,Ug(Rg(t).add(1),Rg(Jb))).r):e.assign(PM("morphTargetInfluences","float").element(t).toVar()),!0===n&&Qx.addAssign(vT({bufferMap:a,influence:e,stride:o,width:c,depth:t,offset:Rg(0)})),!0===i&&cM.addAssign(vT({bufferMap:a,influence:e,stride:o,width:c,depth:t,offset:Rg(1)}))}))}update(){const t=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?t.value=1:t.value=1-this.mesh.morphTargetInfluences.reduce(((t,e)=>t+e),0)}}const _T=xg(yT),xT=(t,e)=>{for(const n of e)if(n.isAnalyticLightNode&&n.light.id===t)return n;return null},MT=new WeakMap;class bT extends If{static get type(){return"LightsNode"}constructor(t=[]){super("vec3"),this.totalDiffuseNode=zg().toVar("totalDiffuse"),this.totalSpecularNode=zg().toVar("totalSpecular"),this.outgoingLightNode=zg().toVar("outgoingLight"),this._lights=t,this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(t){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(t);const e=[];for(const t of this._lightNodes)e.push(t.getHash());this._lightNodesHash="lights-"+e.join(",")}return this._lightNodesHash}analyze(t){const e=t.getDataFromNode(this);for(const n of e.nodes)n.build(t)}setupLightsNode(t){const e=[],n=this._lightNodes,i=(t=>t.sort(((t,e)=>t.id-e.id)))(this._lights),s=t.renderer.nodes.library;for(const t of i)if(t.isNode)e.push(vg(t));else{let i=null;if(null!==n&&(i=xT(t.id,n)),null===i){const n=s.getLightNodeClass(t.constructor);if(null===n){console.warn(`LightsNode.setupNodeLights: Light node not found for ${t.constructor.name}`);continue}let i=null;MT.has(t)?i=MT.get(t):(i=new n(t),MT.set(t,i)),e.push(i)}}this._lightNodes=e}setup(t){null===this._lightNodes&&this.setupLightsNode(t);const e=t.context,n=e.lightingModel;let i=this.outgoingLightNode;if(n){const{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:a}=this;e.outgoingLight=i;const o=t.addStack();t.getDataFromNode(this).nodes=o.nodes,n.start(e,o,t);for(const e of s)e.build(t);n.indirect(e,o,t);const{backdrop:l,backdropAlpha:c}=e,{directDiffuse:u,directSpecular:h,indirectDiffuse:d,indirectSpecular:p}=e.reflectedLight;let m=u.add(d);null!==l&&(m=zg(null!==c?c.mix(m,l):l),e.material.transparent=!0),r.assign(m),a.assign(h.add(p)),i.assign(r.add(a)),n.finish(e,o,t),i=i.bypass(t.removeStack())}return i}setLights(t){return this._lights=t,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}}const TT=xg(bT);class ST extends If{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class wT extends ST{static get type(){return"AONode"}constructor(t=null){super(),this.aoNode=t}setup(t){t.context.ambientOcclusion.mulAssign(this.aoNode)}}class ET extends w_{static get type(){return"LightingContextNode"}constructor(t,e=null,n=null,i=null){super(t),this.lightingModel=e,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:t,backdropAlphaNode:e}=this,n={directDiffuse:zg().toVar("directDiffuse"),directSpecular:zg().toVar("directSpecular"),indirectDiffuse:zg().toVar("indirectDiffuse"),indirectSpecular:zg().toVar("indirectSpecular")};return{radiance:zg().toVar("radiance"),irradiance:zg().toVar("irradiance"),iblIrradiance:zg().toVar("iblIrradiance"),ambientOcclusion:Cg(1).toVar("ambientOcclusion"),reflectedLight:n,backdrop:t,backdropAlpha:e}}setup(t){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||t.context.lightingModel,super.setup(t)}}const AT=xg(ET);class NT extends ST{static get type(){return"IrradianceNode"}constructor(t){super(),this.node=t}setup(t){t.context.irradiance.addAssign(this.node)}}let CT,RT;class IT extends If{static get type(){return"ScreenNode"}constructor(t){super(),this.scope=t,this.isViewportNode=!0}getNodeType(){return this.scope===IT.VIEWPORT?"vec4":"vec2"}getUpdateType(){let t=Sf.NONE;return this.scope!==IT.SIZE&&this.scope!==IT.VIEWPORT||(t=Sf.RENDER),this.updateType=t,t}update({renderer:t}){const e=t.getRenderTarget();this.scope===IT.VIEWPORT?null!==e?RT.copy(e.viewport):(t.getViewport(RT),RT.multiplyScalar(t.getPixelRatio())):null!==e?(CT.width=e.width,CT.height=e.height):t.getDrawingBufferSize(CT)}setup(){const t=this.scope;let e=null;return e=t===IT.SIZE?av(CT||(CT=new ti)):t===IT.VIEWPORT?av(RT||(RT=new Si)):Pg(UT.div(PT)),e}generate(t){if(this.scope===IT.COORDINATE){let e=t.getFragCoord();if(t.isFlipY()){const n=t.getNodeProperties(PT).outputNode.build(t);e=`${t.getType("vec2")}( ${e}.x, ${n}.y - ${e}.y )`}return e}return super.generate(t)}}IT.COORDINATE="coordinate",IT.VIEWPORT="viewport",IT.SIZE="size",IT.UV="uv";const LT=Mg(IT,IT.UV),PT=Mg(IT,IT.SIZE),UT=Mg(IT,IT.COORDINATE),DT=Mg(IT,IT.VIEWPORT),OT=DT.zw,zT=UT.sub(DT.xy),VT=zT.div(OT),FT=bg((()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),PT)),"vec2").once()(),BT=bg((()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),LT)),"vec2").once()(),kT=bg((()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),LT.flipY())),"vec2").once()(),HT=new ti;class GT extends bx{static get type(){return"ViewportTextureNode"}constructor(t=LT,e=null,n=null){null===n&&((n=new Hu).minFilter=St),super(n,t,e),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Sf.FRAME}updateBefore(t){const e=t.renderer;e.getDrawingBufferSize(HT);const n=this.value;n.image.width===HT.width&&n.image.height===HT.height||(n.image.width=HT.width,n.image.height=HT.height,n.needsUpdate=!0);const i=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,e.copyFramebufferToTexture(n),n.generateMipmaps=i}clone(){const t=new this.constructor(this.uvNode,this.levelNode,this.value);return t.generateMipmaps=this.generateMipmaps,t}}const WT=xg(GT),jT=xg(GT,null,null,{generateMipmaps:!0});let XT=null;class qT extends GT{static get type(){return"ViewportDepthTextureNode"}constructor(t=LT,e=null){null===XT&&(XT=new Ka),super(t,e,XT)}}const YT=xg(qT);class ZT extends If{static get type(){return"ViewportDepthNode"}constructor(t,e=null){super("float"),this.scope=t,this.valueNode=e,this.isViewportDepthNode=!0}generate(t){const{scope:e}=this;return e===ZT.DEPTH_BASE?t.getFragDepth():super.generate(t)}setup({camera:t}){const{scope:e}=this,n=this.valueNode;let i=null;if(e===ZT.DEPTH_BASE)null!==n&&(i=tS().assign(n));else if(e===ZT.DEPTH)i=t.isPerspectiveCamera?KT(iM.z,Ex,Ax):$T(iM.z,Ex,Ax);else if(e===ZT.LINEAR_DEPTH)if(null!==n)if(t.isPerspectiveCamera){const t=QT(n,Ex,Ax);i=$T(t,Ex,Ax)}else i=n;else i=$T(iM.z,Ex,Ax);return i}}ZT.DEPTH_BASE="depthBase",ZT.DEPTH="depth",ZT.LINEAR_DEPTH="linearDepth";const $T=(t,e,n)=>t.add(e).div(e.sub(n)),JT=(t,e,n)=>e.sub(n).mul(t).sub(e),KT=(t,e,n)=>e.add(t).mul(n).div(n.sub(e).mul(t)),QT=(t,e,n)=>e.mul(n).div(n.sub(e).mul(t).sub(n)),tS=xg(ZT,ZT.DEPTH_BASE),eS=Mg(ZT,ZT.DEPTH),nS=xg(ZT,ZT.LINEAR_DEPTH),iS=nS(YT());eS.assign=t=>tS(t);class sS extends If{static get type(){return"ClippingNode"}constructor(t=sS.DEFAULT){super(),this.scope=t}setup(t){super.setup(t);const e=t.clippingContext,{localClipIntersection:n,localClippingCount:i,globalClippingCount:s}=e,r=s+i,a=n?r-i:r;return this.scope===sS.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(e.planes,r,a):this.setupDefault(e.planes,r,a)}setupAlphaToCoverage(t,e,n){return bg((()=>{const i=CM(t),s=lv("float","distanceToPlane"),r=lv("float","distanceToGradient"),a=lv("float","clipOpacity");let o;if(a.assign(1),hT(n,(({i:t})=>{o=i.element(t),s.assign(iM.dot(o.xyz).negate().add(o.w)),r.assign(s.fwidth().div(2)),a.mulAssign(v_(r.negate(),r,s)),a.equal(0).discard()})),n<e){const t=lv("float","unionclipOpacity");t.assign(1),hT({start:n,end:e},(({i:e})=>{o=i.element(e),s.assign(iM.dot(o.xyz).negate().add(o.w)),r.assign(s.fwidth().div(2)),t.mulAssign(v_(r.negate(),r,s).oneMinus())})),a.mulAssign(t.oneMinus())}uv.a.mulAssign(a),uv.a.equal(0).discard()}))()}setupDefault(t,e,n){return bg((()=>{const i=CM(t);let s;if(hT(n,(({i:t})=>{s=i.element(t),iM.dot(s.xyz).greaterThan(s.w).discard()})),n<e){const t=lv("bool","clipped");t.assign(!0),hT({start:n,end:e},(({i:e})=>{s=i.element(e),t.assign(iM.dot(s.xyz).greaterThan(s.w).and(t))})),t.discard()}}))()}}sS.ALPHA_TO_COVERAGE="alphaToCoverage",sS.DEFAULT="default";class rS extends ir{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+gf(this)}build(t){this.setup(t)}setupObserver(t){return new hf(t)}setup(t){let e;t.context.setupNormal=()=>this.setupNormal(t),t.addStack(),t.stack.outputNode=this.vertexNode||this.setupPosition(t),t.addFlow("vertex",t.removeStack()),t.addStack();const n=this.setupClipping(t);if(!0===this.depthWrite&&this.setupDepth(t),null===this.fragmentNode){this.setupDiffuseColor(t),this.setupVariants(t);const i=this.setupLighting(t);null!==n&&t.stack.add(n);const s=kg(i,uv.a).max(0);e=this.setupOutput(t,s),Nv.assign(e),null!==this.outputNode&&(e=this.outputNode);if(null!==t.renderer.getRenderTarget()){const n=t.renderer.getMRT(),i=this.mrtNode;null!==n?(e=n,null!==i&&(e=n.merge(i))):null!==i&&(e=i)}}else{let n=this.fragmentNode;!0!==n.isOutputStructNode&&(n=kg(n)),e=this.setupOutput(t,n)}t.stack.outputNode=e,t.addFlow("fragment",t.removeStack()),t.monitor=this.setupObserver(t)}setupClipping(t){if(null===t.clippingContext)return null;const{globalClippingCount:e,localClippingCount:n}=t.clippingContext;let i=null;if(e||n){const e=t.renderer.samples;this.alphaToCoverage&&e>1?i=vg(new sS(sS.ALPHA_TO_COVERAGE)):t.stack.add(vg(new sS))}return i}setupDepth(t){const{renderer:e}=t;let n=this.depthNode;if(null===n){const t="getMRT"in e&&e.getMRT();if(t&&t.has("depth"))n=t.get("depth");else if(!0===e.logarithmicDepthBuffer){n=Yb().w.add(1).log2().mul(Nx).mul(.5)}}null!==n&&eS.assign(n).append()}setupPosition(t){const{object:e}=t,n=e.geometry;if(t.addStack(),(n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&_T(e).append(),!0===e.isSkinnedMesh&&cT(e).append(),this.displacementMap){const t=OM("displacementMap","texture"),e=OM("displacementScale","float"),n=OM("displacementBias","float");Qx.addAssign(cM.normalize().mul(t.x.mul(e).add(n)))}e.isBatchedMesh&&rT(e).append(),e.instanceMatrix&&!0===e.instanceMatrix.isInstancedBufferAttribute&&iT(e).append(),null!==this.positionNode&&Qx.assign(this.positionNode);const i=Yb();return t.context.vertex=t.removeStack(),t.context.mvp=i,i}setupDiffuseColor({object:t,geometry:e}){let n=this.colorNode?kg(this.colorNode):ub;if(!0===this.vertexColors&&e.hasAttribute("color")&&(n=kg(n.xyz.mul(gx("color","vec3")),n.a)),t.instanceColor){n=cv("vec3","vInstanceColor").mul(n)}if(t.isBatchedMesh&&t._colorsTexture){n=cv("vec3","vBatchColor").mul(n)}uv.assign(n);const i=this.opacityNode?Cg(this.opacityNode):pb;if(uv.a.assign(uv.a.mul(i)),null!==this.alphaTestNode||this.alphaTest>0){const t=null!==this.alphaTestNode?Cg(this.alphaTestNode):cb;uv.a.lessThanEqual(t).discard()}!1===this.transparent&&1===this.blending&&!1===this.alphaToCoverage&&uv.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?zg(0):uv.rgb}setupNormal(){return this.normalNode?zg(this.normalNode):Mb}setupEnvironment(){let t=null;return this.envNode?t=this.envNode:this.envMap&&(t=this.envMap.isCubeTexture?OM("envMap","cubeTexture"):OM("envMap","texture")),t}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new NT(Wb)),e}setupLights(t){const e=[],n=this.setupEnvironment(t);n&&n.isLightingNode&&e.push(n);const i=this.setupLightMap(t);if(i&&i.isLightingNode&&e.push(i),null!==this.aoNode||t.material.aoMap){const t=null!==this.aoNode?this.aoNode:jb;e.push(new wT(t))}let s=this.lightsNode||t.lightsNode;return e.length>0&&(s=TT([...s.getLights(),...e])),s}setupLightingModel(){}setupLighting(t){const{material:e}=t,{backdropNode:n,backdropAlphaNode:i,emissiveNode:s}=this,r=!0===this.lights||null!==this.lightsNode?this.setupLights(t):null;let a=this.setupOutgoingLight(t);if(r&&r.getScope().getLights().length>0){const e=this.setupLightingModel(t);a=AT(r,e,n,i)}else null!==n&&(a=zg(null!==i?p_(a,n,i):n));return(s&&!0===s.isNode||e.emissive&&!0===e.emissive.isColor)&&(hv.assign(zg(s||db)),a=a.add(hv)),a}setupOutput(t,e){if(!0===this.fog){const n=t.fogNode;n&&(e=kg(n.mix(e.rgb,n.colorNode),e.a))}return e}setDefaultValues(t){for(const e in t){const n=t[e];void 0===this[e]&&(this[e]=n,n&&n.clone&&(this[e]=n.clone()))}const e=Object.getOwnPropertyDescriptors(t.constructor.prototype);for(const t in e)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,t)&&void 0!==e[t].get&&Object.defineProperty(this.constructor.prototype,t,e[t])}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{},nodes:{}});const n=ir.prototype.toJSON.call(this,t),i=vf(this);n.inputNodes={};for(const{property:e,childNode:s}of i)n.inputNodes[e]=s.toJSON(t).uuid;function s(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(e){const e=s(t.textures),i=s(t.images),r=s(t.nodes);e.length>0&&(n.textures=e),i.length>0&&(n.images=i),r.length>0&&(n.nodes=r)}return n}copy(t){return this.lightsNode=t.lightsNode,this.envNode=t.envNode,this.colorNode=t.colorNode,this.normalNode=t.normalNode,this.opacityNode=t.opacityNode,this.backdropNode=t.backdropNode,this.backdropAlphaNode=t.backdropAlphaNode,this.alphaTestNode=t.alphaTestNode,this.positionNode=t.positionNode,this.depthNode=t.depthNode,this.shadowNode=t.shadowNode,this.shadowPositionNode=t.shadowPositionNode,this.outputNode=t.outputNode,this.mrtNode=t.mrtNode,this.fragmentNode=t.fragmentNode,this.vertexNode=t.vertexNode,super.copy(t)}}const aS=new Uu;class oS extends rS{static get type(){return"InstancedPointsNodeMaterial"}constructor(t={}){super(),this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=t.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.pointWidthNode=null,this.setDefaultValues(aS),this.setValues(t)}setup(t){this.setupShaders(t),super.setup(t)}setupShaders({renderer:t}){const e=this.alphaToCoverage,n=this.useColor;this.vertexNode=bg((()=>{const t=gx("instancePosition").xyz,e=kg(Zx.mul(kg(t,1))),n=DT.z.div(DT.w),i=Cx.mul(e),s=Kx.xy.toVar();return s.mulAssign(this.pointWidthNode?this.pointWidthNode:Hb),s.assign(s.div(DT.z)),s.y.assign(s.y.mul(n)),s.assign(s.mul(i.w)),i.addAssign(kg(s,0,0)),i}))(),this.fragmentNode=bg((()=>{const i=Cg(1).toVar(),s=d_(vx().mul(2).sub(1));if(e&&t.samples>1){const t=Cg(s.fwidth()).toVar();i.assign(v_(t.oneMinus(),t.add(1),s).oneMinus())}else s.greaterThan(1).discard();let r;if(this.pointColorNode)r=this.pointColorNode;else if(n){r=gx("instanceColor").mul(ub)}else r=ub;return i.mulAssign(pb),kg(r,i)}))()}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(t){this.useAlphaToCoverage!==t&&(this.useAlphaToCoverage=t,this.needsUpdate=!0)}}const lS=new xu;class cS extends rS{static get type(){return"LineBasicNodeMaterial"}constructor(t){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(lS),this.setValues(t)}}const uS=new wd;class hS extends rS{static get type(){return"LineDashedNodeMaterial"}constructor(t){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(uS),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(t)}setupVariants(){const t=this.offsetNode,e=this.dashScaleNode?Cg(this.dashScaleNode):zb,n=this.dashSizeNode?Cg(this.dashSizeNode):Vb,i=this.dashSizeNode?Cg(this.dashGapNode):Fb;Cv.assign(n),Rv.assign(i);const s=I_(gx("lineDistance").mul(e));(t?s.add(t):s).mod(Cv.add(Rv)).greaterThan(Cv).discard()}}const dS=new wd;class pS extends rS{static get type(){return"Line2NodeMaterial"}constructor(t={}){super(),this.lights=!1,this.setDefaultValues(dS),this.useAlphaToCoverage=!0,this.useColor=t.vertexColors,this.useDash=t.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(t)}setup(t){this.setupShaders(t),super.setup(t)}setupShaders({renderer:t}){const e=this.alphaToCoverage,n=this.useColor,i=this.dashed,s=this.worldUnits,r=bg((({start:t,end:e})=>{const n=Cx.element(2).element(2),i=Cx.element(3).element(2).mul(-.5).div(n).sub(t.z).div(e.z.sub(t.z));return kg(p_(t.xyz,e.xyz,i),e.w)})).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=bg((()=>{const t=gx("instanceStart"),e=gx("instanceEnd"),n=kg(Zx.mul(kg(t,1))).toVar("start"),a=kg(Zx.mul(kg(e,1))).toVar("end");s&&(cv("vec3","worldStart").assign(n.xyz),cv("vec3","worldEnd").assign(a.xyz));const o=DT.z.div(DT.w),l=Cx.element(2).element(3).equal(-1);Eg(l,(()=>{Eg(n.z.lessThan(0).and(a.z.greaterThan(0)),(()=>{a.assign(r({start:n,end:a}))})).ElseIf(a.z.lessThan(0).and(n.z.greaterThanEqual(0)),(()=>{n.assign(r({start:a,end:n}))}))}));const c=Cx.mul(n),u=Cx.mul(a),h=c.xyz.div(c.w),d=u.xyz.div(u.w),p=d.xy.sub(h.xy).toVar();p.x.assign(p.x.mul(o)),p.assign(p.normalize());const m=kg().toVar();if(s){const t=a.xyz.sub(n.xyz).normalize(),e=p_(n.xyz,a.xyz,.5).normalize(),s=t.cross(e).normalize(),r=t.cross(s),o=cv("vec4","worldPos");o.assign(Kx.y.lessThan(.5).select(n,a));const l=Bb.mul(.5);o.addAssign(kg(Kx.x.lessThan(0).select(s.mul(l),s.mul(l).negate()),0)),i||(o.addAssign(kg(Kx.y.lessThan(.5).select(t.mul(l).negate(),t.mul(l)),0)),o.addAssign(kg(r.mul(l),0)),Eg(Kx.y.greaterThan(1).or(Kx.y.lessThan(0)),(()=>{o.subAssign(kg(r.mul(2).mul(l),0))}))),m.assign(Cx.mul(o));const c=zg().toVar();c.assign(Kx.y.lessThan(.5).select(h,d)),m.z.assign(c.z.mul(m.w))}else{const t=Pg(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(o)),t.x.assign(t.x.div(o)),t.assign(Kx.x.lessThan(0).select(t.negate(),t)),Eg(Kx.y.lessThan(0),(()=>{t.assign(t.sub(p))})).ElseIf(Kx.y.greaterThan(1),(()=>{t.assign(t.add(p))})),t.assign(t.mul(Bb)),t.assign(t.div(DT.w)),m.assign(Kx.y.lessThan(.5).select(c,u)),t.assign(t.mul(m.w)),m.assign(m.add(kg(t,0,0)))}return m}))();const a=bg((({p1:t,p2:e,p3:n,p4:i})=>{const s=t.sub(n),r=i.sub(n),a=e.sub(t),o=s.dot(r),l=r.dot(a),c=s.dot(a),u=r.dot(r),h=a.dot(a).mul(u).sub(l.mul(l)),d=o.mul(l).sub(c.mul(u)).div(h).clamp(),p=o.add(l.mul(d)).div(u).clamp();return Pg(d,p)}));this.fragmentNode=bg((()=>{const r=vx();if(i){const t=this.offsetNode?Cg(this.offsetNodeNode):kb,e=this.dashScaleNode?Cg(this.dashScaleNode):zb,n=this.dashSizeNode?Cg(this.dashSizeNode):Vb,i=this.dashSizeNode?Cg(this.dashGapNode):Fb;Cv.assign(n),Rv.assign(i);const s=gx("instanceDistanceStart"),a=gx("instanceDistanceEnd"),o=Kx.y.lessThan(.5).select(e.mul(s),zb.mul(a)),l=I_(o.add(kb)),c=t?l.add(t):l;r.y.lessThan(-1).or(r.y.greaterThan(1)).discard(),c.mod(Cv.add(Rv)).greaterThan(Cv).discard()}const o=Cg(1).toVar("alpha");if(s){const n=cv("vec3","worldStart"),s=cv("vec3","worldEnd"),r=cv("vec4","worldPos").xyz.normalize().mul(1e5),l=s.sub(n),c=a({p1:n,p2:s,p3:zg(0,0,0),p4:r}),u=n.add(l.mul(c.x)),h=r.mul(c.y),d=u.sub(h).length().div(Bb);if(!i)if(e&&t.samples>1){const t=d.fwidth();o.assign(v_(t.negate().add(.5),t.add(.5),d).oneMinus())}else d.greaterThan(.5).discard()}else if(e&&t.samples>1){const t=r.x,e=r.y.greaterThan(0).select(r.y.sub(1),r.y.add(1)),n=t.mul(t).add(e.mul(e)),i=Cg(n.fwidth()).toVar("dlen");Eg(r.y.abs().greaterThan(1),(()=>{o.assign(v_(i.oneMinus(),i.add(1),n).oneMinus())}))}else Eg(r.y.abs().greaterThan(1),(()=>{const t=r.x,e=r.y.greaterThan(0).select(r.y.sub(1),r.y.add(1));t.mul(t).add(e.mul(e)).greaterThan(1).discard()}));let l;if(this.lineColorNode)l=this.lineColorNode;else if(n){const t=gx("instanceColorStart"),e=gx("instanceColorEnd");l=Kx.y.lessThan(.5).select(t,e).mul(ub)}else l=ub;return kg(l,o)}))()}get worldUnits(){return this.useWorldUnits}set worldUnits(t){this.useWorldUnits!==t&&(this.useWorldUnits=t,this.needsUpdate=!0)}get dashed(){return this.useDash}set dashed(t){this.useDash!==t&&(this.useDash=t,this.needsUpdate=!0)}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(t){this.useAlphaToCoverage!==t&&(this.useAlphaToCoverage=t,this.needsUpdate=!0)}}const mS=t=>vg(t).mul(.5).add(.5),fS=t=>vg(t).mul(2).sub(1),gS=new bd;class vS extends rS{static get type(){return"MeshNormalNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(gS),this.setValues(t)}setupDiffuseColor(){const t=this.opacityNode?Cg(this.opacityNode):pb;uv.assign(kg(mS(pM),t))}}class yS extends Uf{static get type(){return"EquirectUVNode"}constructor(t=nM){super("vec2"),this.dirNode=t}setup(){const t=this.dirNode,e=t.z.atan2(t.x).mul(1/(2*Math.PI)).add(.5),n=t.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Pg(e,n)}}const _S=xg(yS);class xS extends ia{constructor(t=1,e={}){super(t,e),this.isCubeRenderTarget=!0}fromEquirectangularTexture(t,e){const n=e.minFilter,i=e.generateMipmaps;e.generateMipmaps=!0,this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const s=new Gr(5,5,5),r=_S(nM),a=new rS;a.colorNode=Tx(e,r,0),a.side=d,a.blending=m;const o=new kr(s,a),l=new lc;l.add(o),e.minFilter===St&&(e.minFilter=Mt);const c=new ea(1,10,this),u=t.getMRT();return t.setMRT(null),c.update(t,l),t.setMRT(u),e.minFilter=n,e.currentGenerateMipmaps=i,o.geometry.dispose(),o.material.dispose(),this}}const MS=new WeakMap;class bS extends Uf{static get type(){return"CubeMapNode"}constructor(t){super("vec3"),this.envNode=t,this._cubeTexture=null,this._cubeTextureNode=SM();const e=new na;e.isRenderTargetTexture=!0,this._defaultTexture=e,this.updateBeforeType=Sf.RENDER}updateBefore(t){const{renderer:e,material:n}=t,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const t=i.isTextureNode?i.value:n[i.property];if(t&&t.isTexture){const n=t.mapping;if(n===ut||n===ht){if(MS.has(t)){const e=MS.get(t);SS(e,t.mapping),this._cubeTexture=e}else{const n=t.image;if(function(t){return null!=t&&t.height>0}(n)){const i=new xS(n.height);i.fromEquirectangularTexture(e,t),SS(i.texture,t.mapping),this._cubeTexture=i.texture,MS.set(t,i.texture),t.addEventListener("dispose",TS)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(t){return this.updateBefore(t),this._cubeTextureNode}}function TS(t){const e=t.target;e.removeEventListener("dispose",TS);const n=MS.get(e);void 0!==n&&(MS.delete(e),n.dispose())}function SS(t,e){e===ut?t.mapping=lt:e===ht&&(t.mapping=ct)}const wS=xg(bS);class ES extends ST{static get type(){return"BasicEnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){t.context.environment=wS(this.envNode)}}class AS extends ST{static get type(){return"BasicLightMapNode"}constructor(t=null){super(),this.lightMapNode=t}setup(t){const e=Cg(1/Math.PI);t.context.irradianceLightMap=this.lightMapNode.mul(e)}}class NS{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class CS extends NS{constructor(){super()}indirect(t,e,n){const i=t.ambientOcclusion,s=t.reflectedLight,r=n.context.irradianceLightMap;s.indirectDiffuse.assign(kg(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(kg(1,1,1,0)),s.indirectDiffuse.mulAssign(i),s.indirectDiffuse.mulAssign(uv.rgb)}finish(t,e,n){const i=n.material,s=t.outgoingLight,r=n.context.environment;if(r)switch(i.combine){case Y:s.rgb.assign(p_(s.rgb,s.rgb.mul(r.rgb),vb.mul(yb)));break;case Z:s.rgb.assign(p_(s.rgb,r.rgb,vb.mul(yb)));break;case $:s.rgb.addAssign(r.rgb.mul(vb.mul(yb)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",i.combine)}}}const RS=new sr;class IS extends rS{static get type(){return"MeshBasicNodeMaterial"}constructor(t){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(RS),this.setValues(t)}setupNormal(){return hM}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new ES(e):null}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new AS(Wb)),e}setupOutgoingLight(){return uv.rgb}setupLightingModel(){return new CS}}const LS=bg((({f0:t,f90:e,dotVH:n})=>{const i=n.mul(-5.55473).sub(6.98316).mul(n).exp2();return t.mul(i.oneMinus()).add(e.mul(i))})),PS=bg((t=>t.diffuseColor.mul(1/Math.PI))),US=bg((({dotNH:t})=>Av.mul(Cg(.5)).add(1).mul(Cg(1/Math.PI)).mul(t.pow(Av)))),DS=bg((({lightDirection:t})=>{const e=t.add(sM).normalize(),n=pM.dot(e).clamp(),i=sM.dot(e).clamp(),s=LS({f0:wv,f90:1,dotVH:i}),r=Cg(.25),a=US({dotNH:n});return s.mul(r).mul(a)}));class OS extends CS{constructor(t=!0){super(),this.specular=t}direct({lightDirection:t,lightColor:e,reflectedLight:n}){const i=pM.dot(t).clamp().mul(e);n.directDiffuse.addAssign(i.mul(PS({diffuseColor:uv.rgb}))),!0===this.specular&&n.directSpecular.addAssign(i.mul(DS({lightDirection:t})).mul(vb))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:n}){n.indirectDiffuse.addAssign(e.mul(PS({diffuseColor:uv}))),n.indirectDiffuse.mulAssign(t)}}const zS=new Td;class VS extends rS{static get type(){return"MeshLambertNodeMaterial"}constructor(t){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(zS),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new ES(e):null}setupLightingModel(){return new OS(!1)}}const FS=new xd;class BS extends rS{static get type(){return"MeshPhongNodeMaterial"}constructor(t){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(FS),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new ES(e):null}setupLightingModel(){return new OS}setupVariants(){const t=(this.shininessNode?Cg(this.shininessNode):hb).max(1e-4);Av.assign(t);const e=this.specularNode||mb;wv.assign(e)}copy(t){return this.shininessNode=t.shininessNode,this.specularNode=t.specularNode,super.copy(t)}}const kS=bg((()=>{const t=hM.dFdx().abs().max(hM.dFdy().abs());return t.x.max(t.y).max(t.z)})),HS=bg((t=>{const{roughness:e}=t,n=kS();let i=e.max(.0525);return i=i.add(n),i=i.min(1),i})),GS=bg((({alpha:t,dotNL:e,dotNV:n})=>{const i=t.pow2(),s=e.mul(i.add(i.oneMinus().mul(n.pow2())).sqrt()),r=n.mul(i.add(i.oneMinus().mul(e.pow2())).sqrt());return Xv(.5,s.add(r).max(dy))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),WS=bg((({alphaT:t,alphaB:e,dotTV:n,dotBV:i,dotTL:s,dotBL:r,dotNV:a,dotNL:o})=>{const l=o.mul(zg(t.mul(n),e.mul(i),a).length()),c=a.mul(zg(t.mul(s),e.mul(r),o).length());return Xv(.5,l.add(c)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),jS=bg((({alpha:t,dotNH:e})=>{const n=t.pow2(),i=e.pow2().mul(n.oneMinus()).oneMinus();return n.div(i.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),XS=Cg(1/Math.PI),qS=bg((({alphaT:t,alphaB:e,dotNH:n,dotTH:i,dotBH:s})=>{const r=t.mul(e),a=zg(e.mul(i),t.mul(s),r.mul(n)),o=a.dot(a),l=r.div(o);return XS.mul(r.mul(l.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),YS=bg((t=>{const{lightDirection:e,f0:n,f90:i,roughness:s,f:r,USE_IRIDESCENCE:a,USE_ANISOTROPY:o}=t,l=t.normalView||pM,c=s.pow2(),u=e.add(sM).normalize(),h=l.dot(e).clamp(),d=l.dot(sM).clamp(),p=l.dot(u).clamp(),m=sM.dot(u).clamp();let f,g,v=LS({f0:n,f90:i,dotVH:m});if(mg(a)&&(v=yv.mix(v,r)),mg(o)){const t=Tv.dot(e),n=Tv.dot(sM),i=Tv.dot(u),s=Sv.dot(e),r=Sv.dot(sM),a=Sv.dot(u);f=WS({alphaT:Mv,alphaB:c,dotTV:n,dotBV:r,dotTL:t,dotBL:s,dotNV:d,dotNL:h}),g=qS({alphaT:Mv,alphaB:c,dotNH:p,dotTH:i,dotBH:a})}else f=GS({alpha:c,dotNL:h,dotNV:d}),g=jS({alpha:c,dotNH:p});return v.mul(f).mul(g)})),ZS=bg((({roughness:t,dotNV:e})=>{const n=kg(-1,-.0275,-.572,.022),i=kg(1,.0425,1.04,-.04),s=t.mul(n).add(i),r=s.x.mul(s.x).min(e.mul(-9.28).exp2()).mul(s.x).add(s.y);return Pg(-1.04,1.04).mul(r).add(s.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),$S=bg((t=>{const{dotNV:e,specularColor:n,specularF90:i,roughness:s}=t,r=ZS({dotNV:e,roughness:s});return n.mul(r.x).add(i.mul(r.y))})),JS=bg((({f:t,f90:e,dotVH:n})=>{const i=n.oneMinus().saturate(),s=i.mul(i),r=i.mul(s,s).clamp(0,.9999);return t.sub(zg(e).mul(r)).div(r.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),KS=bg((({roughness:t,dotNH:e})=>{const n=t.pow2(),i=Cg(1).div(n),s=e.pow2().oneMinus().max(.0078125);return Cg(2).add(i).mul(s.pow(i.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),QS=bg((({dotNV:t,dotNL:e})=>Cg(1).div(Cg(4).mul(e.add(t).sub(e.mul(t)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),tw=bg((({lightDirection:t})=>{const e=t.add(sM).normalize(),n=pM.dot(t).clamp(),i=pM.dot(sM).clamp(),s=pM.dot(e).clamp(),r=KS({roughness:vv,dotNH:s}),a=QS({dotNV:i,dotNL:n});return gv.mul(r).mul(a)})),ew=bg((({N:t,V:e,roughness:n})=>{const i=t.dot(e).saturate(),s=Pg(n,i.oneMinus().sqrt());return s.assign(s.mul(.984375).add(.0078125)),s})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),nw=bg((({f:t})=>{const e=t.length();return Ky(e.mul(e).add(t.z).div(e.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),iw=bg((({v1:t,v2:e})=>{const n=t.dot(e),i=n.abs().toVar(),s=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),r=i.add(4.1616724).mul(i).add(3.417594).toVar(),a=s.div(r),o=n.greaterThan(0).select(a,Ky(n.mul(n).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return t.cross(e).mul(o)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),sw=bg((({N:t,V:e,P:n,mInv:i,p0:s,p1:r,p2:a,p3:o})=>{const l=r.sub(s).toVar(),c=o.sub(s).toVar(),u=l.cross(c),h=zg().toVar();return Eg(u.dot(n.sub(s)).greaterThanEqual(0),(()=>{const l=e.sub(t.mul(e.dot(t))).normalize(),c=t.cross(l).negate(),u=i.mul(Xg(l,c,t).transpose()).toVar(),d=u.mul(s.sub(n)).normalize().toVar(),p=u.mul(r.sub(n)).normalize().toVar(),m=u.mul(a.sub(n)).normalize().toVar(),f=u.mul(o.sub(n)).normalize().toVar(),g=zg(0).toVar();g.addAssign(iw({v1:d,v2:p})),g.addAssign(iw({v1:p,v2:m})),g.addAssign(iw({v1:m,v2:f})),g.addAssign(iw({v1:f,v2:d})),h.assign(zg(nw({f:g})))})),h})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),rw=1/6,aw=t=>jv(rw,jv(t,jv(t,t.negate().add(3)).sub(3)).add(1)),ow=t=>jv(rw,jv(t,jv(t,jv(3,t).sub(6))).add(4)),lw=t=>jv(rw,jv(t,jv(t,jv(-3,t).add(3)).add(3)).add(1)),cw=t=>jv(rw,a_(t,3)),uw=t=>aw(t).add(ow(t)),hw=t=>lw(t).add(cw(t)),dw=t=>Gv(-1,ow(t).div(aw(t).add(ow(t)))),pw=t=>Gv(1,cw(t).div(lw(t).add(cw(t)))),mw=(t,e,n)=>{const i=t.uvNode,s=jv(i,e.zw).add(.5),r=Ay(s),a=Ry(s),o=uw(a.x),l=hw(a.x),c=dw(a.x),u=pw(a.x),h=dw(a.y),d=pw(a.y),p=Pg(r.x.add(c),r.y.add(h)).sub(.5).mul(e.xy),m=Pg(r.x.add(u),r.y.add(h)).sub(.5).mul(e.xy),f=Pg(r.x.add(c),r.y.add(d)).sub(.5).mul(e.xy),g=Pg(r.x.add(u),r.y.add(d)).sub(.5).mul(e.xy),v=uw(a.y).mul(Gv(o.mul(t.uv(p).level(n)),l.mul(t.uv(m).level(n)))),y=hw(a.y).mul(Gv(o.mul(t.uv(f).level(n)),l.mul(t.uv(g).level(n))));return v.add(y)},fw=bg((([t,e=Cg(3)])=>{const n=Pg(t.size(Rg(e))),i=Pg(t.size(Rg(e.add(1)))),s=Xv(1,n),r=Xv(1,i),a=mw(t,kg(s,n),Ay(e)),o=mw(t,kg(r,i),Ny(e));return Ry(e).mix(a,o)})),gw=bg((([t,e,n,i,s])=>{const r=zg(g_(e.negate(),Cy(t),Xv(1,i))),a=zg(Fy(s[0].xyz),Fy(s[1].xyz),Fy(s[2].xyz));return Cy(r).mul(n.mul(a))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),vw=bg((([t,e])=>t.mul(m_(e.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),yw=jT(),_w=bg((([t,e,n])=>{const i=yw.uv(t),s=Sy(Cg(PT.x)).mul(vw(e,n));return fw(i,s)})),xw=bg((([t,e,n])=>(Eg(n.notEqual(0),(()=>{const i=Ty(e).negate().div(n);return My(i.negate().mul(t))})),zg(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Mw=bg((([t,e,n,i,s,r,a,o,l,c,u,h,d,p,m])=>{let f,g;if(m){f=kg().toVar(),g=zg().toVar();const s=u.sub(1).mul(m.mul(.025)),r=zg(u.sub(s),u,u.add(s));hT({start:0,end:3},(({i:s})=>{const u=r.element(s),m=gw(t,e,h,u,o),v=a.add(m),y=c.mul(l.mul(kg(v,1))),_=Pg(y.xy.div(y.w)).toVar();_.addAssign(1),_.divAssign(2),_.assign(Pg(_.x,_.y.oneMinus()));const x=_w(_,n,u);f.element(s).assign(x.element(s)),f.a.addAssign(x.a),g.element(s).assign(i.element(s).mul(xw(Fy(m),d,p).element(s)))})),f.a.divAssign(3)}else{const s=gw(t,e,h,u,o),r=a.add(s),m=c.mul(l.mul(kg(r,1))),v=Pg(m.xy.div(m.w)).toVar();v.addAssign(1),v.divAssign(2),v.assign(Pg(v.x,v.y.oneMinus())),f=_w(v,n,u),g=i.mul(xw(Fy(s),d,p))}const v=g.rgb.mul(f.rgb),y=t.dot(e).clamp(),_=zg($S({dotNV:y,specularColor:s,specularF90:r,roughness:n})),x=g.r.add(g.g,g.b).div(3);return kg(_.oneMinus().mul(v),f.a.oneMinus().mul(x).oneMinus())})),bw=Xg(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Tw=(t,e)=>t.sub(e).div(t.add(e)).pow2(),Sw=(t,e)=>{const n=t.mul(2*Math.PI*1e-9),i=zg(54856e-17,44201e-17,52481e-17),s=zg(1681e3,1795300,2208400),r=zg(43278e5,93046e5,66121e5),a=Cg(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(n.mul(2239900).add(e.x).cos()).mul(n.pow2().mul(-45282e5).exp());let o=i.mul(r.mul(2*Math.PI).sqrt()).mul(s.mul(n).add(e).cos()).mul(n.pow2().negate().mul(r).exp());o=zg(o.x.add(a),o.y,o.z).div(1.0685e-7);return bw.mul(o)},ww=bg((({outsideIOR:t,eta2:e,cosTheta1:n,thinFilmThickness:i,baseF0:s})=>{const r=p_(t,e,v_(0,.03,i)),a=t.div(r).pow2().mul(Cg(1).sub(n.pow2())),o=Cg(1).sub(a).sqrt(),l=Tw(r,t),c=LS({f0:l,f90:1,dotVH:n}),u=c.oneMinus(),h=r.lessThan(t).select(Math.PI,0),d=Cg(Math.PI).sub(h),p=(t=>{const e=t.sqrt();return zg(1).add(e).div(zg(1).sub(e))})(s.clamp(0,.9999)),m=Tw(p,r.toVec3()),f=LS({f0:m,f90:1,dotVH:o}),g=zg(p.x.lessThan(r).select(Math.PI,0),p.y.lessThan(r).select(Math.PI,0),p.z.lessThan(r).select(Math.PI,0)),v=r.mul(i,o,2),y=zg(d).add(g),_=c.mul(f).clamp(1e-5,.9999),x=_.sqrt(),M=u.pow2().mul(f).div(zg(1).sub(_));let b=c.add(M),T=M.sub(u);for(let t=1;t<=2;++t){T=T.mul(x);const e=Sw(Cg(t).mul(v),Cg(t).mul(y)).mul(2);b=b.add(T.mul(e))}return b.max(zg(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Ew=bg((({normal:t,viewDir:e,roughness:n})=>{const i=t.dot(e).saturate(),s=n.pow2(),r=T_(n.lessThan(.25),Cg(-339.2).mul(s).add(Cg(161.4).mul(n)).sub(25.9),Cg(-8.48).mul(s).add(Cg(14.3).mul(n)).sub(9.95)),a=T_(n.lessThan(.25),Cg(44).mul(s).sub(Cg(23.7).mul(n)).add(3.26),Cg(1.97).mul(s).sub(Cg(3.27).mul(n)).add(.72));return T_(n.lessThan(.25),0,Cg(.1).mul(n).sub(.025)).add(r.mul(i).add(a).exp()).mul(1/Math.PI).saturate()})),Aw=zg(.04),Nw=Cg(1);class Cw extends NS{constructor(t=!1,e=!1,n=!1,i=!1,s=!1,r=!1){super(),this.clearcoat=t,this.sheen=e,this.iridescence=n,this.anisotropy=i,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(t){if(!0===this.clearcoat&&(this.clearcoatRadiance=zg().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=zg().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=zg().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=zg().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=zg().toVar("sheenSpecularIndirect")),!0===this.iridescence){const t=pM.dot(sM).clamp();this.iridescenceFresnel=ww({outsideIOR:Cg(1),eta2:_v,cosTheta1:t,thinFilmThickness:xv,baseF0:wv}),this.iridescenceF0=JS({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(!0===this.transmission){const e=eM,n=Ux.sub(eM).normalize(),i=mM;t.backdrop=Mw(i,n,dv,uv,wv,Ev,e,Gx,Ix,Cx,Lv,Uv,Ov,Dv,this.dispersion?zv:null),t.backdropAlpha=Pv,uv.a.mulAssign(p_(1,t.backdrop.a,Pv))}}computeMultiscattering(t,e,n){const i=pM.dot(sM).clamp(),s=ZS({roughness:dv,dotNV:i}),r=(this.iridescenceF0?yv.mix(wv,this.iridescenceF0):wv).mul(s.x).add(n.mul(s.y)),a=s.x.add(s.y).oneMinus(),o=wv.add(wv.oneMinus().mul(.047619)),l=r.mul(o).div(a.mul(o).oneMinus());t.addAssign(r),e.addAssign(l.mul(a))}direct({lightDirection:t,lightColor:e,reflectedLight:n}){const i=pM.dot(t).clamp().mul(e);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(i.mul(tw({lightDirection:t}))),!0===this.clearcoat){const n=fM.dot(t).clamp().mul(e);this.clearcoatSpecularDirect.addAssign(n.mul(YS({lightDirection:t,f0:Aw,f90:Nw,roughness:fv,normalView:fM})))}n.directDiffuse.addAssign(i.mul(PS({diffuseColor:uv.rgb}))),n.directSpecular.addAssign(i.mul(YS({lightDirection:t,f0:wv,f90:1,roughness:dv,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:t,lightPosition:e,halfWidth:n,halfHeight:i,reflectedLight:s,ltc_1:r,ltc_2:a}){const o=e.add(n).sub(i),l=e.sub(n).sub(i),c=e.sub(n).add(i),u=e.add(n).add(i),h=pM,d=sM,p=iM.toVar(),m=ew({N:h,V:d,roughness:dv}),f=r.uv(m).toVar(),g=a.uv(m).toVar(),v=Xg(zg(f.x,0,f.y),zg(0,1,0),zg(f.z,0,f.w)).toVar(),y=wv.mul(g.x).add(wv.oneMinus().mul(g.y)).toVar();s.directSpecular.addAssign(t.mul(y).mul(sw({N:h,V:d,P:p,mInv:v,p0:o,p1:l,p2:c,p3:u}))),s.directDiffuse.addAssign(t.mul(uv).mul(sw({N:h,V:d,P:p,mInv:Xg(1,0,0,0,1,0,0,0,1),p0:o,p1:l,p2:c,p3:u})))}indirect(t,e,n){this.indirectDiffuse(t,e,n),this.indirectSpecular(t,e,n),this.ambientOcclusion(t,e,n)}indirectDiffuse({irradiance:t,reflectedLight:e}){e.indirectDiffuse.addAssign(t.mul(PS({diffuseColor:uv})))}indirectSpecular({radiance:t,iblIrradiance:e,reflectedLight:n}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(e.mul(gv,Ew({normal:pM,viewDir:sM,roughness:vv}))),!0===this.clearcoat){const t=fM.dot(sM).clamp(),e=$S({dotNV:t,specularColor:Aw,specularF90:Nw,roughness:fv});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(e))}const i=zg().toVar("singleScattering"),s=zg().toVar("multiScattering"),r=e.mul(1/Math.PI);this.computeMultiscattering(i,s,Ev);const a=i.add(s),o=uv.mul(a.r.max(a.g).max(a.b).oneMinus());n.indirectSpecular.addAssign(t.mul(i)),n.indirectSpecular.addAssign(s.mul(r)),n.indirectDiffuse.addAssign(o.mul(r))}ambientOcclusion({ambientOcclusion:t,reflectedLight:e}){const n=pM.dot(sM).clamp().add(t),i=dv.mul(-16).oneMinus().negate().exp2(),s=t.sub(n.pow(i).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(t),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(t),e.indirectDiffuse.mulAssign(t),e.indirectSpecular.mulAssign(s)}finish(t){const{outgoingLight:e}=t;if(!0===this.clearcoat){const t=fM.dot(sM).clamp(),n=LS({dotVH:t,f0:Aw,f90:Nw}),i=e.mul(mv.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(mv));e.assign(i)}if(!0===this.sheen){const t=gv.r.max(gv.g).max(gv.b).mul(.157).oneMinus(),n=e.mul(t).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);e.assign(n)}}}const Rw=Cg(1),Iw=Cg(-2),Lw=Cg(.8),Pw=Cg(-1),Uw=Cg(.4),Dw=Cg(2),Ow=Cg(.305),zw=Cg(3),Vw=Cg(.21),Fw=Cg(4),Bw=Cg(4),kw=Cg(16),Hw=bg((([t])=>{const e=zg(zy(t)).toVar(),n=Cg(-1).toVar();return Eg(e.x.greaterThan(e.z),(()=>{Eg(e.x.greaterThan(e.y),(()=>{n.assign(T_(t.x.greaterThan(0),0,3))})).Else((()=>{n.assign(T_(t.y.greaterThan(0),1,4))}))})).Else((()=>{Eg(e.z.greaterThan(e.y),(()=>{n.assign(T_(t.z.greaterThan(0),2,5))})).Else((()=>{n.assign(T_(t.y.greaterThan(0),1,4))}))})),n})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Gw=bg((([t,e])=>{const n=Pg().toVar();return Eg(e.equal(0),(()=>{n.assign(Pg(t.z,t.y).div(zy(t.x)))})).ElseIf(e.equal(1),(()=>{n.assign(Pg(t.x.negate(),t.z.negate()).div(zy(t.y)))})).ElseIf(e.equal(2),(()=>{n.assign(Pg(t.x.negate(),t.y).div(zy(t.z)))})).ElseIf(e.equal(3),(()=>{n.assign(Pg(t.z.negate(),t.y).div(zy(t.x)))})).ElseIf(e.equal(4),(()=>{n.assign(Pg(t.x.negate(),t.z).div(zy(t.y)))})).Else((()=>{n.assign(Pg(t.x,t.y).div(zy(t.z)))})),jv(.5,n.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),Ww=bg((([t])=>{const e=Cg(0).toVar();return Eg(t.greaterThanEqual(Lw),(()=>{e.assign(Rw.sub(t).mul(Pw.sub(Iw)).div(Rw.sub(Lw)).add(Iw))})).ElseIf(t.greaterThanEqual(Uw),(()=>{e.assign(Lw.sub(t).mul(Dw.sub(Pw)).div(Lw.sub(Uw)).add(Pw))})).ElseIf(t.greaterThanEqual(Ow),(()=>{e.assign(Uw.sub(t).mul(zw.sub(Dw)).div(Uw.sub(Ow)).add(Dw))})).ElseIf(t.greaterThanEqual(Vw),(()=>{e.assign(Ow.sub(t).mul(Fw.sub(zw)).div(Ow.sub(Vw)).add(zw))})).Else((()=>{e.assign(Cg(-2).mul(Sy(jv(1.16,t))))})),e})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),jw=bg((([t,e])=>{const n=t.toVar();n.assign(jv(2,n).sub(1));const i=zg(n,1).toVar();return Eg(e.equal(0),(()=>{i.assign(i.zyx)})).ElseIf(e.equal(1),(()=>{i.assign(i.xzy),i.xz.mulAssign(-1)})).ElseIf(e.equal(2),(()=>{i.x.mulAssign(-1)})).ElseIf(e.equal(3),(()=>{i.assign(i.zyx),i.xz.mulAssign(-1)})).ElseIf(e.equal(4),(()=>{i.assign(i.xzy),i.xy.mulAssign(-1)})).ElseIf(e.equal(5),(()=>{i.z.mulAssign(-1)})),i})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Xw=bg((([t,e,n,i,s,r])=>{const a=Cg(n),o=zg(e),l=m_(Ww(a),Iw,r),c=Ry(l),u=Ay(l),h=zg(qw(t,o,u,i,s,r)).toVar();return Eg(c.notEqual(0),(()=>{const e=zg(qw(t,o,u.add(1),i,s,r)).toVar();h.assign(p_(h,e,c))})),h})),qw=bg((([t,e,n,i,s,r])=>{const a=Cg(n).toVar(),o=zg(e),l=Cg(Hw(o)).toVar(),c=Cg(Ky(Bw.sub(a),0)).toVar();a.assign(Ky(a,Bw));const u=Cg(by(a)).toVar(),h=Pg(Gw(o,l).mul(u.sub(2)).add(1)).toVar();return Eg(l.greaterThan(2),(()=>{h.y.addAssign(u),l.subAssign(3)})),h.x.addAssign(l.mul(u)),h.x.addAssign(c.mul(jv(3,kw))),h.y.addAssign(jv(4,by(r).sub(u))),h.x.mulAssign(i),h.y.mulAssign(s),t.uv(h).grad(Pg(),Pg())})),Yw=bg((({envMap:t,mipInt:e,outputDirection:n,theta:i,axis:s,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const l=Ly(i),c=n.mul(l).add(s.cross(n).mul(Iy(i))).add(s.mul(s.dot(n).mul(l.oneMinus())));return qw(t,c,e,r,a,o)})),Zw=bg((({n:t,latitudinal:e,poleAxis:n,outputDirection:i,weights:s,samples:r,dTheta:a,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=zg(T_(e,n,r_(n,i))).toVar();Eg(gy(d.equals(zg(0))),(()=>{d.assign(zg(i.z,0,i.x.negate()))})),d.assign(Cy(d));const p=zg().toVar();return p.addAssign(s.element(Rg(0)).mul(Yw({theta:0,axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),hT({start:Rg(1),end:t},(({i:t})=>{Eg(t.greaterThanEqual(r),(()=>{pT()}));const e=Cg(a.mul(Cg(t))).toVar();p.addAssign(s.element(t).mul(Yw({theta:e.mul(-1),axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),p.addAssign(s.element(t).mul(Yw({theta:e,axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))})),kg(p,1)}));let $w=null;const Jw=new WeakMap;function Kw(t){let e=Jw.get(t);if((void 0!==e?e.pmremVersion:-1)!==t.pmremVersion){const n=t.image;if(t.isCubeTexture){if(!function(t){if(null==t)return!1;let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(n))return null;e=$w.fromCubemap(t,e)}else{if(!function(t){return null!=t&&t.height>0}(n))return null;e=$w.fromEquirectangular(t,e)}e.pmremVersion=t.pmremVersion,Jw.set(t,e)}return e.texture}class Qw extends Uf{static get type(){return"PMREMNode"}constructor(t,e=null,n=null){super("vec3"),this._value=t,this._pmrem=null,this.uvNode=e,this.levelNode=n,this._generator=null;const i=new Ti;i.isRenderTargetTexture=!0,this._texture=Tx(i),this._width=av(0),this._height=av(0),this._maxMip=av(0),this.updateBeforeType=Sf.RENDER}set value(t){this._value=t,this._pmrem=null}get value(){return this._value}updateFromTexture(t){const e=function(t){const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}(t.image.height);this._texture.value=t,this._width.value=e.texelWidth,this._height.value=e.texelHeight,this._maxMip.value=e.maxMip}updateBefore(){let t=this._pmrem;const e=t?t.pmremVersion:-1,n=this._value;e!==n.pmremVersion&&(t=!0===n.isPMREMTexture?n:Kw(n),null!==t&&(this._pmrem=t,this.updateFromTexture(t)))}setup(t){null===$w&&($w=t.createPMREMGenerator()),this.updateBefore(t);let e=this.uvNode;null===e&&t.context.getUV&&(e=t.context.getUV(this));const n=this.value;t.renderer.coordinateSystem===Bn&&!0!==n.isPMREMTexture&&!0===n.isRenderTargetTexture&&(e=zg(e.x.negate(),e.yz));let i=this.levelNode;return null===i&&t.context.getTextureLevel&&(i=t.context.getTextureLevel(this)),Xw(this._texture,e,i,this._width,this._height,this._maxMip)}}const tE=xg(Qw),eE=new WeakMap;class nE extends ST{static get type(){return"EnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){const{material:e}=t;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const t=n.isTextureNode?n.value:e[n.property];let i=eE.get(t);void 0===i&&(i=tE(t),eE.set(t,i)),n=i}const i=e.envMap?PM("envMapIntensity","float",t.material):PM("environmentIntensity","float",t.scene),s=!0===e.useAnisotropy||e.anisotropy>0?QM:pM,r=n.context(iE(dv,s)).mul(i),a=n.context(sE(mM)).mul(Math.PI).mul(i),o=nx(r),l=nx(a);t.context.radiance.addAssign(o),t.context.iblIrradiance.addAssign(l);const c=t.context.lightingModel.clearcoatRadiance;if(c){const t=n.context(iE(fv,fM)).mul(i),e=nx(t);c.addAssign(e)}}}const iE=(t,e)=>{let n=null;return{getUV:()=>(null===n&&(n=sM.negate().reflect(e),n=t.mul(t).mix(n,e).normalize(),n=n.transformDirection(Ix)),n),getTextureLevel:()=>t}},sE=t=>({getUV:()=>t,getTextureLevel:()=>Cg(1)}),rE=new yd;class aE extends rS{static get type(){return"MeshStandardNodeMaterial"}constructor(t){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(rE),this.setValues(t)}setupEnvironment(t){let e=super.setupEnvironment(t);return null===e&&t.environmentNode&&(e=t.environmentNode),e?new nE(e):null}setupLightingModel(){return new Cw}setupSpecular(){const t=p_(zg(.04),uv.rgb,pv);wv.assign(t),Ev.assign(1)}setupVariants(){const t=this.metalnessNode?Cg(this.metalnessNode):xb;pv.assign(t);let e=this.roughnessNode?Cg(this.roughnessNode):_b;e=HS({roughness:e}),dv.assign(e),this.setupSpecular(),uv.assign(kg(uv.rgb.mul(t.oneMinus()),uv.a))}copy(t){return this.emissiveNode=t.emissiveNode,this.metalnessNode=t.metalnessNode,this.roughnessNode=t.roughnessNode,super.copy(t)}}const oE=new _d;class lE extends aE{static get type(){return"MeshPhysicalNodeMaterial"}constructor(t){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(oE),this.setValues(t)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const t=this.iorNode?Cg(this.iorNode):Ub;Lv.assign(t),wv.assign(p_(Jy(o_(Lv.sub(1).div(Lv.add(1))).mul(gb),zg(1)).mul(fb),uv.rgb,pv)),Ev.assign(p_(fb,1,pv))}setupLightingModel(){return new Cw(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(t){if(super.setupVariants(t),this.useClearcoat){const t=this.clearcoatNode?Cg(this.clearcoatNode):bb,e=this.clearcoatRoughnessNode?Cg(this.clearcoatRoughnessNode):Tb;mv.assign(t),fv.assign(HS({roughness:e}))}if(this.useSheen){const t=this.sheenNode?zg(this.sheenNode):Eb,e=this.sheenRoughnessNode?Cg(this.sheenRoughnessNode):Ab;gv.assign(t),vv.assign(e)}if(this.useIridescence){const t=this.iridescenceNode?Cg(this.iridescenceNode):Cb,e=this.iridescenceIORNode?Cg(this.iridescenceIORNode):Rb,n=this.iridescenceThicknessNode?Cg(this.iridescenceThicknessNode):Ib;yv.assign(t),_v.assign(e),xv.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?Pg(this.anisotropyNode):Nb).toVar();bv.assign(t.length()),Eg(bv.equal(0),(()=>{t.assign(Pg(1,0))})).Else((()=>{t.divAssign(Pg(bv)),bv.assign(bv.saturate())})),Mv.assign(bv.pow2().mix(dv.pow2(),1)),Tv.assign($M[0].mul(t.x).add($M[1].mul(t.y))),Sv.assign($M[1].mul(t.x).sub($M[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?Cg(this.transmissionNode):Lb,e=this.thicknessNode?Cg(this.thicknessNode):Pb,n=this.attenuationDistanceNode?Cg(this.attenuationDistanceNode):Db,i=this.attenuationColorNode?zg(this.attenuationColorNode):Ob;if(Pv.assign(t),Uv.assign(e),Dv.assign(n),Ov.assign(i),this.useDispersion){const t=this.dispersionNode?Cg(this.dispersionNode):Gb;zv.assign(t)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?zg(this.clearcoatNormalNode):Sb}setup(t){t.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(t),super.setup(t)}copy(t){return this.clearcoatNode=t.clearcoatNode,this.clearcoatRoughnessNode=t.clearcoatRoughnessNode,this.clearcoatNormalNode=t.clearcoatNormalNode,this.sheenNode=t.sheenNode,this.sheenRoughnessNode=t.sheenRoughnessNode,this.iridescenceNode=t.iridescenceNode,this.iridescenceIORNode=t.iridescenceIORNode,this.iridescenceThicknessNode=t.iridescenceThicknessNode,this.specularIntensityNode=t.specularIntensityNode,this.specularColorNode=t.specularColorNode,this.transmissionNode=t.transmissionNode,this.thicknessNode=t.thicknessNode,this.attenuationDistanceNode=t.attenuationDistanceNode,this.attenuationColorNode=t.attenuationColorNode,this.dispersionNode=t.dispersionNode,this.anisotropyNode=t.anisotropyNode,super.copy(t)}}class cE extends Cw{constructor(t,e,n,i){super(t,e,n),this.useSSS=i}direct({lightDirection:t,lightColor:e,reflectedLight:n},i,s){if(!0===this.useSSS){const i=s.material,{thicknessColorNode:r,thicknessDistortionNode:a,thicknessAmbientNode:o,thicknessAttenuationNode:l,thicknessPowerNode:c,thicknessScaleNode:u}=i,h=t.add(pM.mul(a)).normalize(),d=Cg(sM.dot(h.negate()).saturate().pow(c).mul(u)),p=zg(d.add(o).mul(r));n.directDiffuse.addAssign(p.mul(l.mul(e)))}super.direct({lightDirection:t,lightColor:e,reflectedLight:n},i,s)}}class uE extends lE{static get type(){return"MeshSSSNodeMaterial"}constructor(t){super(t),this.thicknessColorNode=null,this.thicknessDistortionNode=Cg(.1),this.thicknessAmbientNode=Cg(0),this.thicknessAttenuationNode=Cg(.1),this.thicknessPowerNode=Cg(2),this.thicknessScaleNode=Cg(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new cE(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(t){return this.thicknessColorNode=t.thicknessColorNode,this.thicknessDistortionNode=t.thicknessDistortionNode,this.thicknessAmbientNode=t.thicknessAmbientNode,this.thicknessAttenuationNode=t.thicknessAttenuationNode,this.thicknessPowerNode=t.thicknessPowerNode,this.thicknessScaleNode=t.thicknessScaleNode,super.copy(t)}}const hE=bg((({normal:t,lightDirection:e,builder:n})=>{const i=t.dot(e),s=Pg(i.mul(.5).add(.5),0);if(n.material.gradientMap){const t=OM("gradientMap","texture").context({getUV:()=>s});return zg(t.r)}{const t=s.fwidth().mul(.5);return p_(zg(.7),zg(1),v_(Cg(.7).sub(t.x),Cg(.7).add(t.x),s.x))}}));class dE extends NS{direct({lightDirection:t,lightColor:e,reflectedLight:n},i,s){const r=hE({normal:lM,lightDirection:t,builder:s}).mul(e);n.directDiffuse.addAssign(r.mul(PS({diffuseColor:uv.rgb})))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:n}){n.indirectDiffuse.addAssign(e.mul(PS({diffuseColor:uv}))),n.indirectDiffuse.mulAssign(t)}}const pE=new Md;class mE extends rS{static get type(){return"MeshToonNodeMaterial"}constructor(t){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(pE),this.setValues(t)}setupLightingModel(){return new dE}}class fE extends Uf{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const t=zg(sM.z,0,sM.x.negate()).normalize(),e=sM.cross(t);return Pg(t.dot(pM),e.dot(pM)).mul(.495).add(.5)}}const gE=Mg(fE),vE=new Sd;class yE extends rS{static get type(){return"MeshMatcapNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(vE),this.setValues(t)}setupVariants(t){const e=gE;let n;n=t.material.matcap?OM("matcap","texture").context({getUV:()=>e}):zg(p_(.2,.8,e.y)),uv.rgb.mulAssign(n.rgb)}}const _E=new Uu;class xE extends rS{static get type(){return"PointsNodeMaterial"}constructor(t){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(_E),this.setValues(t)}copy(t){return this.sizeNode=t.sizeNode,super.copy(t)}}class ME extends Uf{static get type(){return"RotateNode"}constructor(t,e){super(),this.positionNode=t,this.rotationNode=e}getNodeType(t){return this.positionNode.getNodeType(t)}setup(t){const{rotationNode:e,positionNode:n}=this;if("vec2"===this.getNodeType(t)){const t=e.cos(),i=e.sin();return jg(t,i,i.negate(),t).mul(n)}{const t=e,i=qg(kg(1,0,0,0),kg(0,Ly(t.x),Iy(t.x).negate(),0),kg(0,Iy(t.x),Ly(t.x),0),kg(0,0,0,1)),s=qg(kg(Ly(t.y),0,Iy(t.y),0),kg(0,1,0,0),kg(Iy(t.y).negate(),0,Ly(t.y),0),kg(0,0,0,1)),r=qg(kg(Ly(t.z),Iy(t.z).negate(),0,0),kg(Iy(t.z),Ly(t.z),0,0),kg(0,0,1,0),kg(0,0,0,1));return i.mul(s).mul(r).mul(kg(n,1)).xyz}}}const bE=xg(ME),TE=new dc;class SE extends rS{static get type(){return"SpriteNodeMaterial"}constructor(t){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(TE),this.setValues(t)}setupPosition({object:t,camera:e,context:n}){const i=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:a}=this,o=Qx;let l=Zx.mul(zg(s||0)),c=Pg(Gx[0].xyz.length(),Gx[1].xyz.length());null!==a&&(c=c.mul(a)),!i&&e.isPerspectiveCamera&&(c=c.mul(l.z.negate()));let u=o.xy;if(t.center&&!0===t.center.isVector2){const t=((t,e,n)=>vg(new H_(t,e,n)))("center","vec2");u=u.sub(t.sub(.5))}u=u.mul(c);const h=Cg(r||wb),d=bE(u,h);l=kg(l.xy.add(d),l.zw);const p=Cx.mul(l);return n.vertex=o,p}copy(t){return this.positionNode=t.positionNode,this.rotationNode=t.rotationNode,this.scaleNode=t.scaleNode,super.copy(t)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(t){this._useSizeAttenuation!==t&&(this._useSizeAttenuation=t,this.needsUpdate=!0)}}class wE extends NS{constructor(){super(),this.shadowNode=Cg(1).toVar("shadowMask")}direct({shadowMask:t}){this.shadowNode.mulAssign(t)}finish(t){uv.a.mulAssign(this.shadowNode.oneMinus()),t.outgoingLight.rgb.assign(uv.rgb)}}const EE=new gd;class AE extends rS{static get type(){return"ShadowNodeMaterial"}constructor(t){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(EE),this.setValues(t)}setupLightingModel(){return new wE}}const NE=bg((({texture:t,uv:e})=>{const n=1e-4,i=zg().toVar();return Eg(e.x.lessThan(n),(()=>{i.assign(zg(1,0,0))})).ElseIf(e.y.lessThan(n),(()=>{i.assign(zg(0,1,0))})).ElseIf(e.z.lessThan(n),(()=>{i.assign(zg(0,0,1))})).ElseIf(e.x.greaterThan(.9999),(()=>{i.assign(zg(-1,0,0))})).ElseIf(e.y.greaterThan(.9999),(()=>{i.assign(zg(0,-1,0))})).ElseIf(e.z.greaterThan(.9999),(()=>{i.assign(zg(0,0,-1))})).Else((()=>{const n=.01,s=t.uv(e.add(zg(-.01,0,0))).r.sub(t.uv(e.add(zg(n,0,0))).r),r=t.uv(e.add(zg(0,-.01,0))).r.sub(t.uv(e.add(zg(0,n,0))).r),a=t.uv(e.add(zg(0,0,-.01))).r.sub(t.uv(e.add(zg(0,0,n))).r);i.assign(zg(s,r,a))})),i.normalize()}));class CE extends bx{static get type(){return"Texture3DNode"}constructor(t,e=null,n=null){super(t,e,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return zg(.5,.5,.5)}setUpdateMatrix(){}setupUV(t,e){return e}generateUV(t,e){return e.build(t,"vec3")}normal(t){return NE({texture:this,uv:t})}}const RE=xg(CE);class IE extends rS{static get type(){return"VolumeNodeMaterial"}constructor(t={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(t)}setup(t){const e=RE(this.map,null,0),n=bg((({orig:t,dir:e})=>{const n=zg(-.5),i=zg(.5),s=e.reciprocal(),r=n.sub(t).mul(s),a=i.sub(t).mul(s),o=Jy(r,a),l=Ky(r,a),c=Ky(o.x,Ky(o.y,o.z)),u=Jy(l.x,Jy(l.y,l.z));return Pg(c,u)}));this.fragmentNode=bg((()=>{const t=I_(zg(Yx.mul(kg(Ux,1)))),i=I_(Kx.sub(t)).normalize(),s=Pg(n({orig:t,dir:i})).toVar();s.x.greaterThan(s.y).discard(),s.assign(Pg(Ky(s.x,0),s.y));const r=zg(t.add(s.x.mul(i))).toVar(),a=zg(i.abs().reciprocal()).toVar(),o=Cg(Jy(a.x,Jy(a.y,a.z))).toVar("delta");o.divAssign(OM("steps","float"));const l=kg(OM("base","color"),0).toVar();return hT({type:"float",start:s.x,end:s.y,update:"+= delta"},(()=>{const t=lv("float","d").assign(e.uv(r.add(.5)).r);null!==this.testNode?this.testNode({map:e,mapValue:t,probe:r,finalColor:l}).append():(l.a.assign(1),pT()),r.addAssign(i.mul(o))})),l.a.equal(0).discard(),kg(l)}))(),super.setup(t)}}class LE extends Zd{constructor(t){super(t),this.textures={},this.nodes={}}load(t,e,n,i){const s=new Kd(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(n=>{try{e(this.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),this.manager.itemError(t)}}),n,i)}parseNodes(t){const e={};if(void 0!==t){for(const n of t){const{uuid:t,type:i}=n;e[t]=this.createNodeFromType(i),e[t].uuid=t}const n={nodes:e,textures:this.textures};for(const i of t){i.meta=n;e[i.uuid].deserialize(i),delete i.meta}}return e}parse(t){const e=this.createNodeFromType(t.type);e.uuid=t.uuid;const n={nodes:this.parseNodes(t.nodes),textures:this.textures};return t.meta=n,e.deserialize(t),delete t.meta,e}setTextures(t){return this.textures=t,this}setNodes(t){return this.nodes=t,this}createNodeFromType(t){return void 0===this.nodes[t]?(console.error("THREE.NodeLoader: Node type not found:",t),Cg()):vg(new this.nodes[t])}}class PE extends Sp{constructor(t){super(t),this.nodes={},this.nodeMaterials={}}parse(t){const e=super.parse(t),n=this.nodes,i=t.inputNodes;for(const t in i){const s=i[t];e[t]=n[s]}return e}setNodes(t){return this.nodes=t,this}setNodeMaterials(t){return this.nodeMaterials=t,this}createMaterialFromType(t){const e=this.nodeMaterials[t];return void 0!==e?new e:super.createMaterialFromType(t)}}class UE extends Np{constructor(t){super(t),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(t){return this.nodes=t,this}setNodeMaterials(t){return this.nodeMaterials=t,this}parse(t,e){this._nodesJSON=t.nodes;const n=super.parse(t,e);return this._nodesJSON=null,n}parseNodes(t,e){if(void 0!==t){const n=new LE;return n.setNodes(this.nodes),n.setTextures(e),n.parseNodes(t)}return{}}parseMaterials(t,e){const n={};if(void 0!==t){const i=this.parseNodes(this._nodesJSON,e),s=new PE;s.setTextures(e),s.setNodes(i),s.setNodeMaterials(this.nodeMaterials);for(let e=0,i=t.length;e<i;e++){const i=t[e];n[i.uuid]=s.parse(i)}}return n}}class DE{constructor(t,e,n=null){this.isNodeAttribute=!0,this.name=t,this.type=e,this.node=n}}class OE{constructor(t,e,n){this.isNodeUniform=!0,this.name=t,this.type=e,this.node=n.getSelf()}get value(){return this.node.value}set value(t){this.node.value=t}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class zE{constructor(t,e){this.isNodeVar=!0,this.name=t,this.type=e}}class VE extends zE{constructor(t,e){super(t,e),this.needsInterpolation=!1,this.isNodeVarying=!0}}class FE{constructor(t,e,n=""){this.name=t,this.type=e,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let BE=0;class kE{constructor(t=null){this.id=BE++,this.nodesData=new WeakMap,this.parent=t}getData(t){let e=this.nodesData.get(t);return void 0===e&&null!==this.parent&&(e=this.parent.getData(t)),e}setData(t,e){this.nodesData.set(t,e)}}class HE extends ov{static get type(){return"ParameterNode"}constructor(t,e=null){super(t,e),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const GE=(t,e)=>vg(new HE(t,e));class WE extends If{static get type(){return"CodeNode"}constructor(t="",e=[],n=""){super("code"),this.isCodeNode=!0,this.code=t,this.language=n,this.includes=e}isGlobal(){return!0}setIncludes(t){return this.includes=t,this}getIncludes(){return this.includes}generate(t){const e=this.getIncludes(t);for(const n of e)n.build(t);const n=t.getCodeFromNode(this,this.getNodeType(t));return n.code=this.code,n.code}serialize(t){super.serialize(t),t.code=this.code,t.language=this.language}deserialize(t){super.deserialize(t),this.code=t.code,this.language=t.language}}const jE=xg(WE),XE=(t,e)=>jE(t,e,"js"),qE=(t,e)=>jE(t,e,"wgsl"),YE=(t,e)=>jE(t,e,"glsl");class ZE extends WE{static get type(){return"FunctionNode"}constructor(t="",e=[],n=""){super(t,e,n)}getNodeType(t){return this.getNodeFunction(t).type}getInputs(t){return this.getNodeFunction(t).inputs}getNodeFunction(t){const e=t.getDataFromNode(this);let n=e.nodeFunction;return void 0===n&&(n=t.parser.parseFunction(this.code),e.nodeFunction=n),n}generate(t,e){super.generate(t);const n=this.getNodeFunction(t),i=n.name,s=n.type,r=t.getCodeFromNode(this,s);""!==i&&(r.name=i);const a=t.getPropertyName(r),o=this.getNodeFunction(t).getCode(a);return r.code=o+"\n","property"===e?a:t.format(`${a}()`,s,e)}}const $E=(t,e=[],n="")=>{for(let t=0;t<e.length;t++){const n=e[t];"function"==typeof n&&(e[t]=n.functionNode)}const i=vg(new ZE(t,e,n)),s=(...t)=>i.call(...t);return s.functionNode=i,s},JE=(t,e)=>$E(t,e,"glsl"),KE=(t,e)=>$E(t,e,"wgsl");class QE{constructor(t,e){this.name=t,this.value=e,this.boundary=0,this.itemSize=0,this.offset=0}setValue(t){this.value=t}getValue(){return this.value}}class tA extends QE{constructor(t,e=0){super(t,e),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class eA extends QE{constructor(t,e=new ti){super(t,e),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class nA extends QE{constructor(t,e=new Li){super(t,e),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class iA extends QE{constructor(t,e=new Si){super(t,e),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class sA extends QE{constructor(t,e=new tr){super(t,e),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class rA extends QE{constructor(t,e=new ei){super(t,e),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class aA extends QE{constructor(t,e=new ls){super(t,e),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class oA extends tA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class lA extends eA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class cA extends nA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class uA extends iA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class hA extends sA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class dA extends rA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class pA extends aA{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class mA extends If{static get type(){return"StackNode"}constructor(t=null){super(),this.nodes=[],this.outputNode=null,this.parent=t,this._currentCond=null,this.isStackNode=!0}getNodeType(t){return this.outputNode?this.outputNode.getNodeType(t):"void"}add(t){return this.nodes.push(t),this}If(t,e){const n=new gg(e);return this._currentCond=T_(t,n),this.add(this._currentCond)}ElseIf(t,e){const n=new gg(e),i=T_(t,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(t){return this._currentCond.elseNode=new gg(t),this}build(t,...e){const n=wg();Sg(this);for(const e of this.nodes)e.build(t,"void");return Sg(n),this.outputNode?this.outputNode.build(t,...e):super.build(t,...e)}else(...t){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...t)}elseif(...t){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...t)}}const fA=xg(mA);class gA{constructor(){this.weakMap=new WeakMap}get(t){let e=this.weakMap;for(let n=0;n<t.length;n++)if(e=e.get(t[n]),void 0===e)return;return e.get(t[t.length-1])}set(t,e){let n=this.weakMap;for(let e=0;e<t.length;e++){const i=t[e];!1===n.has(i)&&n.set(i,new WeakMap),n=n.get(i)}return n.set(t[t.length-1],e)}delete(t){let e=this.weakMap;for(let n=0;n<t.length;n++)if(e=e.get(t[n]),void 0===e)return!1;return e.delete(t[t.length-1])}}const vA=[.125,.215,.35,.446,.526,.582],yA=20,_A=new Ea(-1,1,1,-1,0,1),xA=new Qr(90,1),MA=new tr;let bA=null,TA=0,SA=0;const wA=(1+Math.sqrt(5))/2,EA=1/wA,AA=[new Li(-wA,EA,0),new Li(wA,EA,0),new Li(-EA,0,wA),new Li(EA,0,wA),new Li(0,wA,-EA),new Li(0,wA,EA),new Li(-1,1,-1),new Li(1,1,-1),new Li(-1,1,1),new Li(1,1,1)],NA=[3,1,5,0,4,2],CA=jw(vx(),gx("faceIndex")).normalize(),RA=zg(CA.x,CA.y.negate(),CA.z);class IA{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(t,e=0,n=.1,i=100){bA=this._renderer.getRenderTarget(),TA=this._renderer.getActiveCubeFace(),SA=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=DA(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=OA(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(bA,TA,SA),t.scissorTest=!1,PA(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===lt||t.mapping===ct?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),bA=this._renderer.getRenderTarget(),TA=this._renderer.getActiveCubeFace(),SA=this._renderer.getActiveMipmapLevel();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Mt,minFilter:Mt,generateMipmaps:!1,type:Pt,format:Bt,colorSpace:Je},i=LA(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=LA(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(t){const e=[],n=[],i=[],s=[];let r=t;const a=t-4+1+vA.length;for(let o=0;o<a;o++){const a=Math.pow(2,r);n.push(a);let l=1/a;o>t-4?l=vA[o-t+4-1]:0===o&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],p=6,m=6,f=3,g=2,v=1,y=new Float32Array(f*m*p),_=new Float32Array(g*m*p),x=new Float32Array(v*m*p);for(let t=0;t<p;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0],s=NA[t];y.set(i,f*m*s),_.set(d,g*m*s);const r=[s,s,s,s,s,s];x.set(r,v*m*s)}const M=new Cr;M.setAttribute("position",new dr(y,f)),M.setAttribute("uv",new dr(_,g)),M.setAttribute("faceIndex",new dr(x,v)),e.push(M),s.push(new kr(M,null)),r>4&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i,lodMeshes:s}}(i)),this._blurMaterial=function(t,e,n){const i=CM(new Array(yA).fill(0)),s=av(new Li(0,1,0)),r=av(0),a=Cg(yA),o=av(0),l=av(1),c=Tx(null),u=av(0),h=Cg(1/e),d=Cg(1/n),p=Cg(t),m={n:a,latitudinal:o,weights:i,poleAxis:s,outputDirection:RA,dTheta:r,samples:l,envMap:c,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:p},f=UA("blur");return f.uniforms=m,f.fragmentNode=Zw({...m,latitudinal:o.equal(1)}),f}(i,t,e)}return i}async _compileMaterial(t){const e=new kr(this._lodPlanes[0],t);await this._renderer.compile(e,_A)}_sceneToCubeUV(t,e,n,i){const s=xA;s.near=e,s.far=n;const r=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear;o.getClearColor(MA),o.autoClear=!1;let c=this._backgroundBox;if(null===c){const t=new sr({name:"PMREM.Background",side:d,depthWrite:!1,depthTest:!1});c=new kr(new Gr,t)}let u=!1;const h=t.background;h?h.isColor&&(c.material.color.copy(h),t.background=null,u=!0):(c.material.color.copy(MA),u=!0),o.setRenderTarget(i),o.clear(),u&&o.render(c,s);for(let e=0;e<6;e++){const n=e%3;0===n?(s.up.set(0,r[e],0),s.lookAt(a[e],0,0)):1===n?(s.up.set(0,0,r[e]),s.lookAt(0,a[e],0)):(s.up.set(0,r[e],0),s.lookAt(0,0,a[e]));const l=this._cubeSize;PA(i,n*l,e>2?l:0,l,l),o.render(t,s)}o.autoClear=l,t.background=h}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===lt||t.mapping===ct;i?null===this._cubemapMaterial&&(this._cubemapMaterial=DA(t)):null===this._equirectMaterial&&(this._equirectMaterial=OA(t));const s=i?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=t;const r=this._lodMeshes[0];r.material=s;const a=this._cubeSize;PA(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(r,_A)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),s=AA[(i-e-1)%AA.length];this._blur(t,e-1,e,n,s)}e.autoClear=n}_blur(t,e,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,n,i,"latitudinal",s),this._halfBlur(r,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,r,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const c=this._lodMeshes[i];c.material=l;const u=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(s)?Math.PI/(2*h):2*Math.PI/39,p=s/d,m=isFinite(s)?1+Math.floor(3*p):yA;m>yA&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<yA;++t){const e=t/p,n=Math.exp(-e*e/2);f.push(n),0===t?g+=n:t<m&&(g+=2*n)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;t.texture.frame=(t.texture.frame||0)+1,u.envMap.value=t.texture,u.samples.value=m,u.weights.array=f,u.latitudinal.value="latitudinal"===r?1:0,a&&(u.poleAxis.value=a);const{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-n;const y=this._sizeLods[i];PA(e,3*y*(i>v-4?i-v+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(c,_A)}}function LA(t,e,n){const i=new wi(t,e,n);return i.texture.mapping=dt,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function PA(t,e,n,i,s){t.viewport.set(e,n,i,s),t.scissor.set(e,n,i,s)}function UA(t){const e=new rS;return e.depthTest=!1,e.depthWrite=!1,e.blending=m,e.name=`PMREM_${t}`,e}function DA(t){const e=UA("cubemap");return e.fragmentNode=SM(t,RA),e}function OA(t){const e=UA("equirect");return e.fragmentNode=Tx(t,_S(RA),0),e}let zA=0;class VA{constructor(t="",e=[],n=0,i=[]){this.name=t,this.bindings=e,this.index=n,this.bindingsReference=i,this.id=zA++}}const FA=new WeakMap,BA=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),kA=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),HA=t=>(t=Number(t))+(t%1?"":".0");class GA{constructor(t,e,n){this.object=t,this.material=t&&t.material||null,this.geometry=t&&t.geometry||null,this.renderer=e,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=fA(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new kE,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let t=FA.get(this.renderer);return void 0===t&&(t=new gA,FA.set(this.renderer,t)),t}createRenderTarget(t,e,n){return new wi(t,e,n)}createCubeRenderTarget(t,e){return new xS(t,e)}createPMREMGenerator(){return new IA(this.renderer)}includes(t){return this.nodes.includes(t)}_getBindGroup(t,e){const n=this.getBindGroupsCache(),i=[];let s,r=!0;for(const t of e)i.push(t),r=r&&!0!==t.groupNode.shared;return r?(s=n.get(i),void 0===s&&(s=new VA(t,i,this.bindingsIndexes[t].group,i),n.set(i,s))):s=new VA(t,i,this.bindingsIndexes[t].group,i),s}getBindGroupArray(t,e){const n=this.bindings[e];let i=n[t];return void 0===i&&(void 0===this.bindingsIndexes[t]&&(this.bindingsIndexes[t]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[t]=i=[]),i}getBindings(){let t=this.bindGroups;if(null===t){const e={},n=this.bindings;for(const t of Nf)for(const i in n[t]){const s=n[t][i];(e[i]||(e[i]=[])).push(...s)}t=[];for(const n in e){const i=e[n],s=this._getBindGroup(n,i);t.push(s)}this.bindGroups=t}return t}sortBindingGroups(){const t=this.getBindings();t.sort(((t,e)=>t.bindings[0].groupNode.order-e.bindings[0].groupNode.order));for(let e=0;e<t.length;e++){const n=t[e];this.bindingsIndexes[n.name].group=e,n.index=e}}setHashNode(t,e){this.hashNodes[e]=t}addNode(t){!1===this.nodes.includes(t)&&(this.nodes.push(t),this.setHashNode(t,t.getHash(this)))}buildUpdateNodes(){for(const t of this.nodes){const e=t.getUpdateType(),n=t.getUpdateBeforeType(),i=t.getUpdateAfterType();e!==Sf.NONE&&this.updateNodes.push(t.getSelf()),n!==Sf.NONE&&this.updateBeforeNodes.push(t.getSelf()),i!==Sf.NONE&&this.updateAfterNodes.push(t.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(t){return t.magFilter===Mt||t.magFilter===bt||t.magFilter===_t||t.magFilter===St||t.minFilter===Mt||t.minFilter===bt||t.minFilter===_t||t.minFilter===St}addChain(t){this.chaining.push(t)}removeChain(t){if(this.chaining.pop()!==t)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(t){return t}getNodeFromHash(t){return this.hashNodes[t]}addFlow(t,e){return this.flowNodes[t].push(e),e}setContext(t){this.context=t}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(t){this.cache=t}getCache(){return this.cache}getCacheFromNode(t,e=!0){const n=this.getDataFromNode(t);return void 0===n.cache&&(n.cache=new kE(e?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(t){const e=this.getDataFromNode(t);return e.usageCount=void 0===e.usageCount?1:e.usageCount+1,e.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(t,e=null){if(null===e&&("float"===t||"int"===t||"uint"===t?e=0:"bool"===t?e=!1:"color"===t?e=new tr:"vec2"===t?e=new ti:"vec3"===t?e=new Li:"vec4"===t&&(e=new Si)),"float"===t)return HA(e);if("int"===t)return`${Math.round(e)}`;if("uint"===t)return e>=0?`${Math.round(e)}u`:"0u";if("bool"===t)return e?"true":"false";if("color"===t)return`${this.getType("vec3")}( ${HA(e.r)}, ${HA(e.g)}, ${HA(e.b)} )`;const n=this.getTypeLength(t),i=this.getComponentType(t),s=t=>this.generateConst(i,t);if(2===n)return`${this.getType(t)}( ${s(e.x)}, ${s(e.y)} )`;if(3===n)return`${this.getType(t)}( ${s(e.x)}, ${s(e.y)}, ${s(e.z)} )`;if(4===n)return`${this.getType(t)}( ${s(e.x)}, ${s(e.y)}, ${s(e.z)}, ${s(e.w)} )`;if(n>4&&e&&(e.isMatrix3||e.isMatrix4))return`${this.getType(t)}( ${e.elements.map(s).join(", ")} )`;if(n>4)return`${this.getType(t)}()`;throw new Error(`NodeBuilder: Type '${t}' not found in generate constant attempt.`)}getType(t){return"color"===t?"vec3":t}hasGeometryAttribute(t){return this.geometry&&void 0!==this.geometry.getAttribute(t)}getAttribute(t,e){const n=this.attributes;for(const e of n)if(e.name===t)return e;const i=new DE(t,e);return n.push(i),i}getPropertyName(t){return t.name}isVector(t){return/vec\d/.test(t)}isMatrix(t){return/mat\d/.test(t)}isReference(t){return"void"===t||"property"===t||"sampler"===t||"texture"===t||"cubeTexture"===t||"storageTexture"===t||"depthTexture"===t||"texture3D"===t}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(t){const e=t.type;if(t.isDataTexture){if(e===Rt)return"int";if(e===It)return"uint"}return"float"}getElementType(t){return"mat2"===t?"vec2":"mat3"===t?"vec3":"mat4"===t?"vec4":this.getComponentType(t)}getComponentType(t){if("float"===(t=this.getVectorType(t))||"bool"===t||"int"===t||"uint"===t)return t;const e=/(b|i|u|)(vec|mat)([2-4])/.exec(t);return null===e?null:"b"===e[1]?"bool":"i"===e[1]?"int":"u"===e[1]?"uint":"float"}getVectorType(t){return"color"===t?"vec3":"texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t?"vec4":t}getTypeFromLength(t,e="float"){if(1===t)return e;const n=BA.get(t);return("float"===e?"":e[0])+n}getTypeFromArray(t){return kA.get(t.constructor)}getTypeFromAttribute(t){let e=t;t.isInterleavedBufferAttribute&&(e=t.data);const n=e.array,i=t.itemSize,s=t.normalized;let r;return t instanceof xr||!0===s||(r=this.getTypeFromArray(n)),this.getTypeFromLength(i,r)}getTypeLength(t){const e=this.getVectorType(t),n=/vec([2-4])/.exec(e);return null!==n?Number(n[1]):"float"===e||"bool"===e||"int"===e||"uint"===e?1:!0===/mat2/.test(t)?4:!0===/mat3/.test(t)?9:!0===/mat4/.test(t)?16:0}getVectorFromMatrix(t){return t.replace("mat","vec")}changeComponentType(t,e){return this.getTypeFromLength(this.getTypeLength(t),e)}getIntegerType(t){const e=this.getComponentType(t);return"int"===e||"uint"===e?t:this.changeComponentType(t,"int")}addStack(){return this.stack=fA(this.stack),this.stacks.push(wg()||this.stack),Sg(this.stack),this.stack}removeStack(){const t=this.stack;return this.stack=t.parent,Sg(this.stacks.pop()),t}getDataFromNode(t,e=this.shaderStage,n=null){let i=(n=null===n?t.isGlobal(this)?this.globalCache:this.cache:n).getData(t);return void 0===i&&(i={},n.setData(t,i)),void 0===i[e]&&(i[e]={}),i[e]}getNodeProperties(t,e="any"){const n=this.getDataFromNode(t,e);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(t,e){const n=this.getDataFromNode(t);let i=n.bufferAttribute;if(void 0===i){const s=this.uniforms.index++;i=new DE("nodeAttribute"+s,e,t),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeFromNode(t,e=this.shaderStage){const n=this.getDataFromNode(t,e);if(void 0===n.structType){const i=this.structs.index++;t.name=`StructType${i}`,this.structs[e].push(t),n.structType=t}return t}getUniformFromNode(t,e,n=this.shaderStage,i=null){"in"===i&&(console.warn('NodeBuilder: "in" is a reserved word, using "inValue" instead.',t,i),t.name="inValue",i=t.name);const s=this.getDataFromNode(t,n,this.globalCache);let r=s.uniform;if(void 0===r){const a=this.uniforms.index++;r=new OE(i||"nodeUniform"+a,e,t),this.uniforms[n].push(r),s.uniform=r}return r}getVarFromNode(t,e=null,n=t.getNodeType(this),i=this.shaderStage){const s=this.getDataFromNode(t,i);let r=s.variable;if(void 0===r){const t=this.vars[i]||(this.vars[i]=[]);null===e&&(e="nodeVar"+t.length),r=new zE(e,n),t.push(r),s.variable=r}return r}getVaryingFromNode(t,e=null,n=t.getNodeType(this)){const i=this.getDataFromNode(t,"any");let s=i.varying;if(void 0===s){const t=this.varyings,r=t.length;null===e&&(e="nodeVarying"+r),s=new VE(e,n),t.push(s),i.varying=s}return s}getCodeFromNode(t,e,n=this.shaderStage){const i=this.getDataFromNode(t);let s=i.code;if(void 0===s){const t=this.codes[n]||(this.codes[n]=[]),r=t.length;s=new FE("nodeCode"+r,e),t.push(s),i.code=s}return s}addFlowCodeHierarchy(t,e){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(t);let s=!0,r=e;for(;r;){if(!0===i.get(r)){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(const t of n)this.addLineFlowCode(t)}addLineFlowCodeBlock(t,e,n){const i=this.getDataFromNode(t),s=i.flowCodes||(i.flowCodes=[]),r=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);s.push(e),r.set(n,!0)}addLineFlowCode(t,e=null){return""===t||(null!==e&&this.context.nodeBlock&&this.addLineFlowCodeBlock(e,t,this.context.nodeBlock),t=this.tab+t,/;\s*$/.test(t)||(t+=";\n"),this.flow.code+=t),this}addFlowCode(t){return this.flow.code+=t,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(t){return this.flowsData.get(t)}flowNode(t){const e=t.getNodeType(this),n=this.flowChildNode(t,e);return this.flowsData.set(t,n),n}buildFunctionNode(t){const e=new ZE,n=this.currentFunctionNode;return this.currentFunctionNode=e,e.code=this.buildFunctionCode(t),this.currentFunctionNode=n,e}flowShaderNode(t){const e=t.layout,n={[Symbol.iterator](){let t=0;const e=Object.values(this);return{next:()=>({value:e[t],done:t++>=e.length})}}};for(const t of e.inputs)n[t.name]=new HE(t.type,t.name);t.layout=null;const i=t.call(n),s=this.flowStagesNode(i,e.type);return t.layout=e,s}flowStagesNode(t,e=null){const n=this.flow,i=this.vars,s=this.cache,r=this.buildStage,a=this.stack,o={code:""};this.flow=o,this.vars={},this.cache=new kE,this.stack=fA();for(const n of Af)this.setBuildStage(n),o.result=t.build(this,e);return o.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.cache=s,this.stack=a,this.setBuildStage(r),o}getFunctionOperator(){return null}flowChildNode(t,e=null){const n=this.flow,i={code:""};return this.flow=i,i.result=t.build(this,e),this.flow=n,i}flowNodeFromShaderStage(t,e,n=null,i=null){const s=this.shaderStage;this.setShaderStage(t);const r=this.flowChildNode(e,n);return null!==i&&(r.code+=`${this.tab+i} = ${r.result};\n`),this.flowCode[t]=this.flowCode[t]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(t,e){return`${this.getType(t)} ${e}`}getVars(t){let e="";const n=this.vars[t];if(void 0!==n)for(const t of n)e+=`${this.getVar(t.type,t.name)}; `;return e}getUniforms(){console.warn("Abstract function.")}getCodes(t){const e=this.codes[t];let n="";if(void 0!==e)for(const t of e)n+=t.code+"\n";return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(t){this.shaderStage=t}getShaderStage(){return this.shaderStage}setBuildStage(t){this.buildStage=t}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:t,material:e,renderer:n}=this;if(null!==e){let t=n.nodes.library.fromMaterial(e);null===t&&(console.error(`NodeMaterial: Material "${e.type}" is not compatible.`),t=new rS),t.build(this)}else this.addFlow("compute",t);for(const t of Af){this.setBuildStage(t),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const e of Nf){this.setShaderStage(e);const n=this.flowNodes[e];for(const e of n)"generate"===t?this.flowNode(e):e.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(t,e){if("float"===e||"int"===e||"uint"===e)return new oA(t);if("vec2"===e||"ivec2"===e||"uvec2"===e)return new lA(t);if("vec3"===e||"ivec3"===e||"uvec3"===e)return new cA(t);if("vec4"===e||"ivec4"===e||"uvec4"===e)return new uA(t);if("color"===e)return new hA(t);if("mat3"===e)return new dA(t);if("mat4"===e)return new pA(t);throw new Error(`Uniform "${e}" not declared.`)}createNodeMaterial(t="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${t}() instead.`)}format(t,e,n){if((e=this.getVectorType(e))===(n=this.getVectorType(n))||null===n||this.isReference(n))return t;const i=this.getTypeLength(e),s=this.getTypeLength(n);return 16===i&&9===s?`${this.getType(n)}(${t}[0].xyz, ${t}[1].xyz, ${t}[2].xyz)`:9===i&&4===s?`${this.getType(n)}(${t}[0].xy, ${t}[1].xy)`:i>4||s>4||0===s?t:i===s?`${this.getType(n)}( ${t} )`:i>s?this.format(`${t}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(e)),n):4===s&&i>1?`${this.getType(n)}( ${this.format(t,e,"vec3")}, 1.0 )`:2===i?`${this.getType(n)}( ${this.format(t,e,"vec2")}, 0.0 )`:(1===i&&s>1&&e!==this.getComponentType(n)&&(t=`${this.getType(this.getComponentType(n))}( ${t} )`),`${this.getType(n)}( ${t} )`)}getSignature(){return`// Three.js r${t} - Node System\n`}}class WA{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(t,e){let n=t.get(e);return void 0===n&&(n={renderMap:new WeakMap,frameMap:new WeakMap},t.set(e,n)),n}updateBeforeNode(t){const e=t.getUpdateBeforeType(),n=t.updateReference(this);if(e===Sf.FRAME){const{frameMap:e}=this._getMaps(this.updateBeforeMap,n);e.get(n)!==this.frameId&&!1!==t.updateBefore(this)&&e.set(n,this.frameId)}else if(e===Sf.RENDER){const{renderMap:e}=this._getMaps(this.updateBeforeMap,n);e.get(n)!==this.renderId&&!1!==t.updateBefore(this)&&e.set(n,this.renderId)}else e===Sf.OBJECT&&t.updateBefore(this)}updateAfterNode(t){const e=t.getUpdateAfterType(),n=t.updateReference(this);if(e===Sf.FRAME){const{frameMap:e}=this._getMaps(this.updateAfterMap,n);e.get(n)!==this.frameId&&!1!==t.updateAfter(this)&&e.set(n,this.frameId)}else if(e===Sf.RENDER){const{renderMap:e}=this._getMaps(this.updateAfterMap,n);e.get(n)!==this.renderId&&!1!==t.updateAfter(this)&&e.set(n,this.renderId)}else e===Sf.OBJECT&&t.updateAfter(this)}updateNode(t){const e=t.getUpdateType(),n=t.updateReference(this);if(e===Sf.FRAME){const{frameMap:e}=this._getMaps(this.updateMap,n);e.get(n)!==this.frameId&&!1!==t.update(this)&&e.set(n,this.frameId)}else if(e===Sf.RENDER){const{renderMap:e}=this._getMaps(this.updateMap,n);e.get(n)!==this.renderId&&!1!==t.update(this)&&e.set(n,this.renderId)}else e===Sf.OBJECT&&t.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class jA{constructor(t,e,n=null,i="",s=!1){this.type=t,this.name=e,this.count=n,this.qualifier=i,this.isConst=s}}jA.isNodeFunctionInput=!0;class XA extends If{static get type(){return"StructTypeNode"}constructor(t){super(),this.types=t,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class qA extends If{static get type(){return"OutputStructNode"}constructor(...t){super(),this.members=t,this.isOutputStructNode=!0}setup(t){super.setup(t);const e=this.members,n=[];for(let i=0;i<e.length;i++)n.push(e[i].getNodeType(t));this.nodeType=t.getStructTypeFromNode(new XA(n)).name}generate(t,e){const n=t.getOutputStructName(),i=this.members,s=""!==n?n+".":"";for(let n=0;n<i.length;n++){const r=i[n].build(t,e);t.addLineFlowCode(`${s}m${n} = ${r}`,this)}return n}}const YA=xg(qA);function ZA(t,e){for(let n=0;n<t.length;n++)if(t[n].name===e)return n;return-1}class $A extends qA{static get type(){return"MRTNode"}constructor(t){super(),this.outputNodes=t,this.isMRTNode=!0}has(t){return void 0!==this.outputNodes[t]}get(t){return this.outputNodes[t]}merge(t){const e={...this.outputNodes,...t.outputNodes};return JA(e)}setup(t){const e=this.outputNodes,n=[],i=t.renderer.getRenderTarget().textures;for(const t in e){n[ZA(i,t)]=kg(e[t])}return this.members=n,super.setup(t)}}const JA=xg($A);class KA extends If{static get type(){return"FunctionOverloadingNode"}constructor(t=[],...e){super(),this.functionNodes=t,this.parametersNodes=e,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(t){const e=this.parametersNodes;let n=this._candidateFnCall;if(null===n){let i=null,s=-1;for(const n of this.functionNodes){const r=n.shaderNode.layout;if(null===r)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const a=r.inputs;if(e.length===a.length){let r=0;for(let n=0;n<e.length;n++){const i=e[n],s=a[n];i.getNodeType(t)===s.type?r++:r=0}r>s&&(i=n,s=r)}}this._candidateFnCall=n=i(...e)}return n}}const QA=xg(KA),tN=t=>(...e)=>QA(t,...e);class eN extends rv{static get type(){return"TimerNode"}constructor(t=eN.LOCAL,e=1,n=0){super(n),this.scope=t,this.scale=e,this.updateType=Sf.FRAME}update(t){const e=this.scope,n=this.scale;e===eN.LOCAL?this.value+=t.deltaTime*n:e===eN.DELTA?this.value=t.deltaTime*n:e===eN.FRAME?this.value=t.frameId:this.value=t.time*n}serialize(t){super.serialize(t),t.scope=this.scope,t.scale=this.scale}deserialize(t){super.deserialize(t),this.scope=t.scope,this.scale=t.scale}}eN.LOCAL="local",eN.GLOBAL="global",eN.DELTA="delta",eN.FRAME="frame";const nN=(t,e=0)=>vg(new eN(eN.LOCAL,t,e)),iN=(t,e=0)=>vg(new eN(eN.GLOBAL,t,e)),sN=(t,e=0)=>vg(new eN(eN.DELTA,t,e)),rN=Mg(eN,eN.FRAME).toUint();class aN extends If{static get type(){return"OscNode"}constructor(t=aN.SINE,e=nN()){super(),this.method=t,this.timeNode=e}getNodeType(t){return this.timeNode.getNodeType(t)}setup(){const t=this.method,e=vg(this.timeNode);let n=null;return t===aN.SINE?n=e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):t===aN.SQUARE?n=e.fract().round():t===aN.TRIANGLE?n=e.add(.5).fract().mul(2).sub(1).abs():t===aN.SAWTOOTH&&(n=e.fract()),n}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}aN.SINE="sine",aN.SQUARE="square",aN.TRIANGLE="triangle",aN.SAWTOOTH="sawtooth";const oN=xg(aN,aN.SINE),lN=xg(aN,aN.SQUARE),cN=xg(aN,aN.TRIANGLE),uN=xg(aN,aN.SAWTOOTH);class hN extends If{static get type(){return"SpriteSheetUVNode"}constructor(t,e=vx(),n=Cg(0)){super("vec2"),this.countNode=t,this.uvNode=e,this.frameNode=n}setup(){const{frameNode:t,uvNode:e,countNode:n}=this,{width:i,height:s}=n,r=t.mod(i.mul(s)).floor(),a=r.mod(i),o=s.sub(r.add(1).div(i).ceil()),l=n.reciprocal(),c=Pg(a,o);return e.add(c).mul(l)}}const dN=xg(hN);class pN extends Lf{static get type(){return"StorageArrayElementNode"}constructor(t,e){super(t,e),this.isStorageArrayElementNode=!0}set storageBufferNode(t){this.node=t}get storageBufferNode(){return this.node}setup(t){return!1===t.isAvailable("storageBuffer")&&!0===this.node.bufferObject&&t.setupPBO(this.node),super.setup(t)}generate(t,e){let n;const i=t.context.assign;if(n=!1===t.isAvailable("storageBuffer")?!0===this.node.bufferObject&&!0!==i?t.generatePBO(this):this.node.build(t):super.generate(t),!0!==i){const i=this.getNodeType(t);n=t.format(n,i,e)}return n}}const mN=xg(pN);class fN extends If{static get type(){return"TriplanarTexturesNode"}constructor(t,e=null,n=null,i=Cg(1),s=Qx,r=cM){super("vec4"),this.textureXNode=t,this.textureYNode=e,this.textureZNode=n,this.scaleNode=i,this.positionNode=s,this.normalNode=r}setup(){const{textureXNode:t,textureYNode:e,textureZNode:n,scaleNode:i,positionNode:s,normalNode:r}=this;let a=r.abs().normalize();a=a.div(a.dot(zg(1)));const o=s.yz.mul(i),l=s.zx.mul(i),c=s.xy.mul(i),u=t.value,h=null!==e?e.value:u,d=null!==n?n.value:u,p=Tx(u,o).mul(a.x),m=Tx(h,l).mul(a.y),f=Tx(d,c).mul(a.z);return Gv(p,m,f)}}const gN=xg(fN),vN=(...t)=>gN(...t),yN=new oa,_N=new Li,xN=new Li,MN=new Li,bN=new ls,TN=new Li(0,0,-1),SN=new Si,wN=new Li,EN=new Li,AN=new Si,NN=new ti,CN=new wi,RN=LT.flipX();let IN=!1;class LN extends bx{static get type(){return"ReflectorNode"}constructor(t={}){super(CN.texture,RN);const{target:e=new Ds,resolution:n=1,generateMipmaps:i=!1,bounces:s=!0}=t;this.target=e,this.resolution=n,this.generateMipmaps=i,this.bounces=s,this.updateBeforeType=s?Sf.RENDER:Sf.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(t,e){const n=this.resolution;e.getDrawingBufferSize(NN),t.setSize(Math.round(NN.width*n),Math.round(NN.height*n))}setup(t){return this._updateResolution(CN,t.renderer),super.setup(t)}getTextureNode(){return this.textureNode}getVirtualCamera(t){let e=this.virtualCameras.get(t);return void 0===e&&(e=t.clone(),this.virtualCameras.set(t,e)),e}getRenderTarget(t){let e=this.renderTargets.get(t);return void 0===e&&(e=new wi(0,0,{type:Pt}),!0===this.generateMipmaps&&(e.texture.minFilter=1008,e.texture.generateMipmaps=!0),this.renderTargets.set(t,e)),e}updateBefore(t){if(!1===this.bounces&&IN)return!1;IN=!0;const{scene:e,camera:n,renderer:i,material:s}=t,{target:r}=this,a=this.getVirtualCamera(n),o=this.getRenderTarget(a);if(i.getDrawingBufferSize(NN),this._updateResolution(o,i),xN.setFromMatrixPosition(r.matrixWorld),MN.setFromMatrixPosition(n.matrixWorld),bN.extractRotation(r.matrixWorld),_N.set(0,0,1),_N.applyMatrix4(bN),wN.subVectors(xN,MN),wN.dot(_N)>0)return;wN.reflect(_N).negate(),wN.add(xN),bN.extractRotation(n.matrixWorld),TN.set(0,0,-1),TN.applyMatrix4(bN),TN.add(MN),EN.subVectors(xN,TN),EN.reflect(_N).negate(),EN.add(xN),a.coordinateSystem=n.coordinateSystem,a.position.copy(wN),a.up.set(0,1,0),a.up.applyMatrix4(bN),a.up.reflect(_N),a.lookAt(EN),a.near=n.near,a.far=n.far,a.updateMatrixWorld(),a.projectionMatrix.copy(n.projectionMatrix),yN.setFromNormalAndCoplanarPoint(_N,xN),yN.applyMatrix4(a.matrixWorldInverse),SN.set(yN.normal.x,yN.normal.y,yN.normal.z,yN.constant);const l=a.projectionMatrix;AN.x=(Math.sign(SN.x)+l.elements[8])/l.elements[0],AN.y=(Math.sign(SN.y)+l.elements[9])/l.elements[5],AN.z=-1,AN.w=(1+l.elements[10])/l.elements[14],SN.multiplyScalar(1/SN.dot(AN));l.elements[2]=SN.x,l.elements[6]=SN.y,l.elements[10]=SN.z-0,l.elements[14]=SN.w,this.value=o.texture,s.visible=!1;const c=i.getRenderTarget(),u=i.getMRT();i.setMRT(null),i.setRenderTarget(o),i.render(e,a),i.setMRT(u),i.setRenderTarget(c),s.visible=!0,IN=!1}}const PN=t=>vg(new LN(t)),UN=new Ea(-1,1,1,-1,0,1);class DN extends Cr{constructor(t=!1){super();const e=!1===t?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Mr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Mr(e,2))}}const ON=new DN;class zN extends kr{constructor(t=null){super(ON,t),this.camera=UN,this.isQuadMesh=!0}renderAsync(t){return t.renderAsync(this,UN)}render(t){t.render(this,UN)}}const VN=new ti;class FN extends bx{static get type(){return"RTTNode"}constructor(t,e=null,n=null,i={type:Pt}){const s=new wi(e,n,i);super(s.texture,vx()),this.node=t,this.width=e,this.height=n,this.renderTarget=s,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new zN(new rS),this.updateBeforeType=Sf.RENDER}get autoSize(){return null===this.width}setup(t){return this._rttNode=this.node.context(t.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(t)}setSize(t,e){this.width=t,this.height=e;const n=t*this.pixelRatio,i=e*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(t){this.pixelRatio=t,this.setSize(this.width,this.height)}updateBefore({renderer:t}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=t.getPixelRatio();const e=t.getSize(VN);this.setSize(e.width,e.height)}this._quadMesh.material.fragmentNode=this._rttNode;const e=t.getRenderTarget();t.setRenderTarget(this.renderTarget),this._quadMesh.render(t),t.setRenderTarget(e)}clone(){const t=new bx(this.value,this.uvNode,this.levelNode);return t.sampler=this.sampler,t.referenceNode=this,t}}const BN=(t,...e)=>vg(new FN(vg(t),...e)),kN=(t,...e)=>t.isTextureNode?t:BN(t,...e);class HN extends fx{static get type(){return"VertexColorNode"}constructor(t=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=t}getAttributeName(){const t=this.index;return"color"+(t>0?t:"")}generate(t){const e=this.getAttributeName(t);let n;return n=!0===t.hasGeometryAttribute(e)?super.generate(t):t.generateConst(this.nodeType,new Si(1,1,1,1)),n}serialize(t){super.serialize(t),t.index=this.index}deserialize(t){super.deserialize(t),this.index=t.index}}const GN=(...t)=>vg(new HN(...t));class WN extends If{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const jN=Mg(WN);class XN extends If{static get type(){return"SceneNode"}constructor(t=XN.BACKGROUND_BLURRINESS,e=null){super(),this.scope=t,this.scene=e}setup(t){const e=this.scope,n=null!==this.scene?this.scene:t.scene;let i;return e===XN.BACKGROUND_BLURRINESS?i=PM("backgroundBlurriness","float",n):e===XN.BACKGROUND_INTENSITY?i=PM("backgroundIntensity","float",n):console.error("THREE.SceneNode: Unknown scope:",e),i}}XN.BACKGROUND_BLURRINESS="backgroundBlurriness",XN.BACKGROUND_INTENSITY="backgroundIntensity";const qN=Mg(XN,XN.BACKGROUND_BLURRINESS),YN=Mg(XN,XN.BACKGROUND_INTENSITY),ZN="storage",$N="read-only-storage",JN="write-only",KN="read-only";class QN extends wM{static get type(){return"StorageBufferNode"}constructor(t,e,n=0){super(t,e,n),this.isStorageBufferNode=!0,this.access=ZN,this.isAtomic=!1,this.bufferObject=!1,this.bufferCount=n,this._attribute=null,this._varying=null,this.global=!0,!0!==t.isStorageBufferAttribute&&!0!==t.isStorageInstancedBufferAttribute&&(t.isInstancedBufferAttribute?t.isStorageInstancedBufferAttribute=!0:t.isStorageBufferAttribute=!0)}getHash(t){if(0===this.bufferCount){let e=t.globalCache.getData(this.value);return void 0===e&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getInputType(){return"storageBuffer"}element(t){return mN(this,t)}setBufferObject(t){return this.bufferObject=t,this}setAccess(t){return this.access=t,this}toReadOnly(){return this.setAccess($N)}setAtomic(t){return this.isAtomic=t,this}toAtomic(){return this.setAtomic(!0)}generate(t){if(t.isAvailable("storageBuffer"))return super.generate(t);const e=this.getNodeType(t);null===this._attribute&&(this._attribute=Z_(this.value),this._varying=I_(this._attribute));const n=this._varying.build(t,e);return t.registerTransform(n,this._attribute),n}}const tC=(t,e,n)=>vg(new QN(t,e,n)),eC=(t,e,n)=>vg(new QN(t,e,n).setBufferObject(!0));class nC extends bx{static get type(){return"StorageTextureNode"}constructor(t,e,n=null){super(t,e),this.storeNode=n,this.isStorageTextureNode=!0,this.access=JN}getInputType(){return"storageTexture"}setup(t){super.setup(t);t.getNodeProperties(this).storeNode=this.storeNode}setAccess(t){return this.access=t,this}generate(t,e){let n;return n=null!==this.storeNode?this.generateStore(t):super.generate(t,e),n}toReadOnly(){return this.setAccess(KN)}toWriteOnly(){return this.setAccess(JN)}generateStore(t){const e=t.getNodeProperties(this),{uvNode:n,storeNode:i}=e,s=super.generate(t,"property"),r=n.build(t,"uvec2"),a=i.build(t,"vec4"),o=t.generateTextureStore(t,s,r,a);t.addLineFlowCode(o,this)}}const iC=xg(nC),sC=(t,e,n)=>{const i=iC(t,e,n);return null!==n&&i.append(),i};class rC extends LM{static get type(){return"UserDataNode"}constructor(t,e,n=null){super(t,e,n),this.userData=n}updateReference(t){return this.reference=null!==this.userData?this.userData:t.object.userData,this.reference}}const aC=(t,e,n)=>vg(new rC(t,e,n));class oC extends Uf{static get type(){return"PosterizeNode"}constructor(t,e){super(),this.sourceNode=t,this.stepsNode=e}setup(){const{sourceNode:t,stepsNode:e}=this;return t.mul(e).floor().div(e)}}const lC=xg(oC);let cC=null;class uC extends GT{static get type(){return"ViewportSharedTextureNode"}constructor(t=LT,e=null){null===cC&&(cC=new Hu),super(t,e,cC)}updateReference(){return this}}const hC=xg(uC),dC=new ti;class pC extends bx{static get type(){return"PassTextureNode"}constructor(t,e){super(e),this.passNode=t,this.setUpdateMatrix(!1)}setup(t){return t.object.isQuadMesh&&this.passNode.build(t),super.setup(t)}clone(){return new this.constructor(this.passNode,this.value)}}class mC extends pC{static get type(){return"PassMultipleTextureNode"}constructor(t,e,n=!1){super(t,null),this.textureName=e,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(t){return this.updateTexture(),super.setup(t)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class fC extends Uf{static get type(){return"PassNode"}constructor(t,e,n,i={}){super("vec4"),this.scope=t,this.scene=e,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const s=new Ka;s.isRenderTargetTexture=!0,s.name="depth";const r=new wi(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Pt,...i});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this.updateBeforeType=Sf.FRAME,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=av(0),this._cameraFar=av(0),this._mrt=null,this.isPassNode=!0}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(t){let e=this._textures[t];if(void 0===e){e=this.renderTarget.texture.clone(),e.isRenderTargetTexture=!0,e.name=t,this._textures[t]=e,this.renderTarget.textures.push(e)}return e}getPreviousTexture(t){let e=this._previousTextures[t];return void 0===e&&(e=this.getTexture(t).clone(),e.isRenderTargetTexture=!0,this._previousTextures[t]=e),e}toggleTexture(t){const e=this._previousTextures[t];if(void 0!==e){const n=this._textures[t],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=e,this._textures[t]=e,this._previousTextures[t]=n,this._textureNodes[t].updateTexture(),this._previousTextureNodes[t].updateTexture()}}getTextureNode(t="output"){let e=this._textureNodes[t];return void 0===e&&(this._textureNodes[t]=e=vg(new mC(this,t)),this._textureNodes[t].updateTexture()),e}getPreviousTextureNode(t="output"){let e=this._previousTextureNodes[t];return void 0===e&&(void 0===this._textureNodes[t]&&this.getTextureNode(t),this._previousTextureNodes[t]=e=vg(new mC(this,t,!0)),this._previousTextureNodes[t].updateTexture()),e}getViewZNode(t="depth"){let e=this._viewZNodes[t];if(void 0===e){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[t]=e=QT(this.getTextureNode(t),n,i)}return e}getLinearDepthNode(t="depth"){let e=this._linearDepthNodes[t];if(void 0===e){const n=this._cameraNear,i=this._cameraFar,s=this.getViewZNode(t);this._linearDepthNodes[t]=e=$T(s,n,i)}return e}setup({renderer:t}){return this.renderTarget.samples=void 0===this.options.samples?t.samples:this.options.samples,!0===t.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===fC.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(t){const{renderer:e}=t,{scene:n,camera:i}=this;this._pixelRatio=e.getPixelRatio();const s=e.getSize(dC);this.setSize(s.width,s.height);const r=e.getRenderTarget(),a=e.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(const t in this._previousTextures)this.toggleTexture(t);e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),e.render(n,i),e.setRenderTarget(r),e.setMRT(a)}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget.setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}fC.COLOR="color",fC.DEPTH="depth";const gC=(t,e,n)=>vg(new fC(fC.COLOR,t,e,n)),vC=(t,e)=>vg(new pC(t,e)),yC=(t,e)=>vg(new fC(fC.DEPTH,t,e)),_C=new zN,xC=new zN;class MC extends Uf{static get type(){return"GaussianBlurNode"}constructor(t,e=null,n=2){super("vec4"),this.textureNode=t,this.directionNode=e,this.sigma=n,this._invSize=av(new ti),this._passDirection=av(new ti),this._horizontalRT=new wi,this._horizontalRT.texture.name="GaussianBlurNode.horizontal",this._verticalRT=new wi,this._verticalRT.texture.name="GaussianBlurNode.vertical",this._textureNode=vC(this,this._verticalRT.texture),this.updateBeforeType=Sf.RENDER,this.resolution=new ti(1,1)}setSize(t,e){t=Math.max(Math.round(t*this.resolution.x),1),e=Math.max(Math.round(e*this.resolution.y),1),this._invSize.value.set(1/t,1/e),this._horizontalRT.setSize(t,e),this._verticalRT.setSize(t,e)}updateBefore(t){const{renderer:e}=t,n=this.textureNode,i=n.value,s=e.getRenderTarget(),r=e.getMRT(),a=n.value;_C.material=this._material,xC.material=this._material,this.setSize(i.image.width,i.image.height);const o=i.type;this._horizontalRT.texture.type=o,this._verticalRT.texture.type=o,e.setMRT(null),e.setRenderTarget(this._horizontalRT),this._passDirection.value.set(1,0),_C.render(e),n.value=this._horizontalRT.texture,e.setRenderTarget(this._verticalRT),this._passDirection.value.set(0,1),xC.render(e),e.setRenderTarget(s),e.setMRT(r),n.value=a}getTextureNode(){return this._textureNode}setup(t){const e=this.textureNode;if(!0!==e.isTextureNode)return console.error("GaussianBlurNode requires a TextureNode."),kg();const n=e.uvNode||vx(),i=Pg(this.directionNode||1),s=t=>e.uv(t),r=bg((()=>{const t=3+2*this.sigma,e=this._getCoefficients(t),r=this._invSize,a=i.mul(this._passDirection),o=Cg(e[0]).toVar(),l=kg(s(n).mul(o)).toVar();for(let i=1;i<t;i++){const t=Cg(i),c=Cg(e[i]),u=Pg(a.mul(r.mul(t))).toVar(),h=kg(s(n.add(u))),d=kg(s(n.sub(u)));l.addAssign(h.add(d).mul(c)),o.addAssign(jv(2,c))}return l.div(o)})),a=this._material||(this._material=new rS);a.fragmentNode=r().context(t.getSharedContext()),a.name="Gaussian_blur",a.needsUpdate=!0;return t.getNodeProperties(this).textureNode=e,this._textureNode}dispose(){this._horizontalRT.dispose(),this._verticalRT.dispose()}_getCoefficients(t){const e=[];for(let n=0;n<t;n++)e.push(.39894*Math.exp(-.5*n*n/(t*t))/t);return e}}const bC=(t,e,n)=>vg(new MC(kN(t),e,n)),TC=new ti,SC=new zN;class wC extends Uf{static get type(){return"AfterImageNode"}constructor(t,e=.96){super(t),this.textureNode=t,this.textureNodeOld=Tx(),this.damp=av(e),this._compRT=new wi,this._compRT.texture.name="AfterImageNode.comp",this._oldRT=new wi,this._oldRT.texture.name="AfterImageNode.old",this._textureNode=vC(this,this._compRT.texture),this.updateBeforeType=Sf.RENDER}getTextureNode(){return this._textureNode}setSize(t,e){this._compRT.setSize(t,e),this._oldRT.setSize(t,e)}updateBefore(t){const{renderer:e}=t,n=this.textureNode,i=n.value.type;this._compRT.texture.type=i,this._oldRT.texture.type=i,e.getDrawingBufferSize(TC),this.setSize(TC.x,TC.y);const s=e.getRenderTarget(),r=n.value;this.textureNodeOld.value=this._oldRT.texture,e.setRenderTarget(this._compRT),SC.render(e);const a=this._oldRT;this._oldRT=this._compRT,this._compRT=a,e.setRenderTarget(s),n.value=r}setup(t){const e=this.textureNode,n=this.textureNodeOld,i=e.uvNode||vx();n.uvNode=i;const s=bg((([t,e])=>{const n=Cg(e).toVar(),i=kg(t).toVar();return Ky(Vy(i.sub(n)),0)})),r=bg((()=>{const t=kg(n),r=kg((t=>e.uv(t))(i));return t.mulAssign(this.damp.mul(s(t,.1))),Ky(r,t)})),a=this._materialComposed||(this._materialComposed=new rS);a.name="AfterImage",a.fragmentNode=r(),SC.material=a;return t.getNodeProperties(this).textureNode=e,this._textureNode}dispose(){this._compRT.dispose(),this._oldRT.dispose()}}const EC=(t,e)=>vg(new wC(kN(t),e)),AC=bg((([t])=>LC(t.rgb))),NC=bg((([t,e=Cg(1)])=>e.mix(LC(t.rgb),t.rgb))),CC=bg((([t,e=Cg(1)])=>{const n=Gv(t.r,t.g,t.b).div(3),i=t.r.max(t.g.max(t.b)),s=i.sub(n).mul(e).mul(-3);return p_(t.rgb,i,s)})),RC=bg((([t,e=Cg(1)])=>{const n=zg(.57735,.57735,.57735),i=e.cos();return zg(t.rgb.mul(i).add(n.cross(t.rgb).mul(e.sin()).add(n.mul(s_(n,t.rgb).mul(i.oneMinus())))))})),IC=new Li,LC=(t,e=zg(...mi.getLuminanceCoefficients(IC)))=>s_(t,e),PC=(t,e)=>p_(zg(0),t,LC(t).sub(e).max(0)),UC=new zN;class DC extends Uf{static get type(){return"AnamorphicNode"}constructor(t,e,n,i){super("vec4"),this.textureNode=t,this.tresholdNode=e,this.scaleNode=n,this.colorNode=zg(.1,0,1),this.samples=i,this.resolution=new ti(1,1),this._renderTarget=new wi,this._renderTarget.texture.name="anamorphic",this._invSize=av(new ti),this._textureNode=vC(this,this._renderTarget.texture),this.updateBeforeType=Sf.RENDER}getTextureNode(){return this._textureNode}setSize(t,e){this._invSize.value.set(1/t,1/e),t=Math.max(Math.round(t*this.resolution.x),1),e=Math.max(Math.round(e*this.resolution.y),1),this._renderTarget.setSize(t,e)}updateBefore(t){const{renderer:e}=t,n=this.textureNode,i=n.value;this._renderTarget.texture.type=i.type;const s=e.getRenderTarget(),r=n.value;UC.material=this._material,this.setSize(i.image.width,i.image.height),e.setRenderTarget(this._renderTarget),UC.render(e),e.setRenderTarget(s),n.value=r}setup(t){const e=this.textureNode,n=e.uvNode||vx(),i=bg((()=>{const t=this.samples,i=Math.floor(t/2),s=zg(0).toVar();return hT({start:-i,end:i},(({i:t})=>{const r=Cg(t).abs().div(i).oneMinus(),a=(t=>e.uv(t))(Pg(n.x.add(this._invSize.x.mul(t).mul(this.scaleNode)),n.y)),o=PC(a,this.tresholdNode).mul(r);s.addAssign(o)})),s.mul(this.colorNode)})),s=this._material||(this._material=new rS);s.name="Anamorphic",s.fragmentNode=i();return t.getNodeProperties(this).textureNode=e,this._textureNode}dispose(){this._renderTarget.dispose()}}const OC=(t,e=.9,n=3,i=32)=>vg(new DC(kN(t),vg(e),vg(n),i));class zC extends Uf{static get type(){return"SobelOperatorNode"}constructor(t){super(),this.textureNode=t,this.updateBeforeType=Sf.RENDER,this._invSize=av(new ti)}updateBefore(){const t=this.textureNode.value;this._invSize.value.set(1/t.image.width,1/t.image.height)}setup(){const{textureNode:t}=this,e=t.uvNode||vx(),n=e=>t.uv(e);return bg((()=>{const t=this._invSize,i=Xg(-1,-2,-1,0,0,0,1,2,1),s=Xg(-1,0,1,-2,0,2,-1,0,1),r=LC(n(e.add(t.mul(Pg(-1,-1)))).xyz),a=LC(n(e.add(t.mul(Pg(-1,0)))).xyz),o=LC(n(e.add(t.mul(Pg(-1,1)))).xyz),l=LC(n(e.add(t.mul(Pg(0,-1)))).xyz),c=LC(n(e.add(t.mul(Pg(0,0)))).xyz),u=LC(n(e.add(t.mul(Pg(0,1)))).xyz),h=LC(n(e.add(t.mul(Pg(1,-1)))).xyz),d=LC(n(e.add(t.mul(Pg(1,0)))).xyz),p=LC(n(e.add(t.mul(Pg(1,1)))).xyz),m=Gv(i[0][0].mul(r),i[1][0].mul(l),i[2][0].mul(h),i[0][1].mul(a),i[1][1].mul(c),i[2][1].mul(d),i[0][2].mul(o),i[1][2].mul(u),i[2][2].mul(p)),f=Gv(s[0][0].mul(r),s[1][0].mul(l),s[2][0].mul(h),s[0][1].mul(a),s[1][1].mul(c),s[2][1].mul(d),s[0][2].mul(o),s[1][2].mul(u),s[2][2].mul(p)),g=m.mul(m).add(f.mul(f)).sqrt();return kg(zg(g),1)}))()}}const VC=t=>vg(new zC(kN(t)));class FC extends Uf{static get type(){return"DepthOfFieldNode"}constructor(t,e,n,i,s){super(),this.textureNode=t,this.viewZNode=e,this.focusNode=n,this.apertureNode=i,this.maxblurNode=s,this._aspect=av(0),this.updateBeforeType=Sf.RENDER}updateBefore(){const t=this.textureNode.value;this._aspect.value=t.image.width/t.image.height}setup(){const t=this.textureNode,e=t.uvNode||vx(),n=e=>t.uv(e);return bg((()=>{const t=Pg(1,this._aspect),i=this.focusNode.add(this.viewZNode),s=Pg(m_(i.mul(this.apertureNode),this.maxblurNode.negate(),this.maxblurNode)),r=s.mul(.9),a=s.mul(.7),o=s.mul(.4);let l=kg(0);return l=l.add(n(e)),l=l.add(n(e.add(Pg(0,.4).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.15,.37).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.29,.29).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.37,.15).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.4,0).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.37,-.15).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.29,-.29).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.15,-.37).mul(t).mul(s)))),l=l.add(n(e.add(Pg(0,-.4).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.15,.37).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.29,.29).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.37,.15).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.4,0).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.37,-.15).mul(t).mul(s)))),l=l.add(n(e.add(Pg(-.29,-.29).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.15,-.37).mul(t).mul(s)))),l=l.add(n(e.add(Pg(.15,.37).mul(t).mul(r)))),l=l.add(n(e.add(Pg(-.37,.15).mul(t).mul(r)))),l=l.add(n(e.add(Pg(.37,-.15).mul(t).mul(r)))),l=l.add(n(e.add(Pg(-.15,-.37).mul(t).mul(r)))),l=l.add(n(e.add(Pg(-.15,.37).mul(t).mul(r)))),l=l.add(n(e.add(Pg(.37,.15).mul(t).mul(r)))),l=l.add(n(e.add(Pg(-.37,-.15).mul(t).mul(r)))),l=l.add(n(e.add(Pg(.15,-.37).mul(t).mul(r)))),l=l.add(n(e.add(Pg(.29,.29).mul(t).mul(a)))),l=l.add(n(e.add(Pg(.4,0).mul(t).mul(a)))),l=l.add(n(e.add(Pg(.29,-.29).mul(t).mul(a)))),l=l.add(n(e.add(Pg(0,-.4).mul(t).mul(a)))),l=l.add(n(e.add(Pg(-.29,.29).mul(t).mul(a)))),l=l.add(n(e.add(Pg(-.4,0).mul(t).mul(a)))),l=l.add(n(e.add(Pg(-.29,-.29).mul(t).mul(a)))),l=l.add(n(e.add(Pg(0,.4).mul(t).mul(a)))),l=l.add(n(e.add(Pg(.29,.29).mul(t).mul(o)))),l=l.add(n(e.add(Pg(.4,0).mul(t).mul(o)))),l=l.add(n(e.add(Pg(.29,-.29).mul(t).mul(o)))),l=l.add(n(e.add(Pg(0,-.4).mul(t).mul(o)))),l=l.add(n(e.add(Pg(-.29,.29).mul(t).mul(o)))),l=l.add(n(e.add(Pg(-.4,0).mul(t).mul(o)))),l=l.add(n(e.add(Pg(-.29,-.29).mul(t).mul(o)))),l=l.add(n(e.add(Pg(0,.4).mul(t).mul(o)))),l=l.div(41),l.a=1,kg(l)}))()}}const BC=(t,e,n=1,i=.025,s=1)=>vg(new FC(kN(t),vg(e),vg(n),vg(i),vg(s)));class kC extends Uf{static get type(){return"DotScreenNode"}constructor(t,e=new ti(.5,.5),n=1.57,i=1){super("vec4"),this.inputNode=t,this.center=av(e),this.angle=av(n),this.scale=av(i)}setup(){const t=this.inputNode,e=bg((()=>{const t=Iy(this.angle),e=Ly(this.angle),n=vx().mul(PT).sub(this.center),i=Pg(e.mul(n.x).sub(t.mul(n.y)),t.mul(n.x).add(e.mul(n.y))).mul(this.scale);return Iy(i.x).mul(Iy(i.y)).mul(4)})),n=bg((()=>{const n=t,i=Gv(n.r,n.g,n.b).div(3);return kg(zg(i.mul(10).sub(5).add(e())),n.a)}));return n()}}const HC=(t,e,n,i)=>vg(new kC(vg(t),e,n,i));class GC extends Uf{static get type(){return"RGBShiftNode"}constructor(t,e=.005,n=0){super("vec4"),this.textureNode=t,this.amount=av(e),this.angle=av(n)}setup(){const{textureNode:t}=this,e=t.uvNode||vx(),n=e=>t.uv(e);return bg((()=>{const t=Pg(Ly(this.angle),Iy(this.angle)).mul(this.amount),i=n(e.add(t)),s=n(e),r=n(e.sub(t));return kg(i.r,s.g,r.b,s.a)}))()}}const WC=(t,e,n)=>vg(new GC(kN(t),e,n));class jC extends Uf{static get type(){return"FilmNode"}constructor(t,e=null,n=null){super(),this.inputNode=t,this.intensityNode=e,this.uvNode=n}setup(){const t=this.uvNode||vx(),e=bg((()=>{const e=this.inputNode.rgb,n=__(Ry(t.add(nN())));let i=e.add(e.mul(m_(n.add(.1),0,1)));return null!==this.intensityNode&&(i=p_(e,i,this.intensityNode)),kg(i,this.inputNode.a)}));return e()}}const XC=xg(jC);class qC extends Uf{static get type(){return"Lut3DNode"}constructor(t,e,n,i){super(),this.inputNode=t,this.lutNode=e,this.size=av(n),this.intensityNode=i}setup(){const{inputNode:t,lutNode:e}=this,n=bg((()=>{const n=t,i=Cg(1).div(this.size),s=Cg(.5).div(this.size),r=zg(s).add(n.rgb.mul(Cg(1).sub(i))),a=kg((t=>e.uv(t))(r).rgb,n.a);return kg(p_(n,a,this.intensityNode))}));return n()}}const YC=(t,e,n,i)=>vg(new qC(vg(t),vg(e),n,vg(i))),ZC=new zN,$C=new tr,JC=new ti;class KC extends Uf{static get type(){return"GTAONode"}constructor(t,e,n){super(),this.depthNode=t,this.normalNode=e,this.radius=av(.25),this.resolution=av(new ti),this.thickness=av(1),this.distanceExponent=av(1),this.distanceFallOff=av(1),this.scale=av(1),this.noiseNode=Tx(function(t=5){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=function(t){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=e*e,i=Array(n).fill(0);let s=Math.floor(e/2),r=e-1;for(let t=1;t<=n;)-1===s&&r===e?(r=e-2,s=0):(r===e&&(r=0),s<0&&(s=e-1)),0===i[s*e+r]?(i[s*e+r]=t++,r++,s--):(r-=2,s++);return i}(e),i=n.length,s=new Uint8Array(4*i);for(let t=0;t<i;++t){const e=n[t],r=2*Math.PI*e/i,a=new Li(Math.cos(r),Math.sin(r),0).normalize();s[4*t]=255*(.5*a.x+.5),s[4*t+1]=255*(.5*a.y+.5),s[4*t+2]=127,s[4*t+3]=255}const r=new Hc(s,e,e);return r.wrapS=pt,r.wrapT=pt,r.needsUpdate=!0,r}()),this.cameraProjectionMatrix=av(n.projectionMatrix),this.cameraProjectionMatrixInverse=av(n.projectionMatrixInverse),this.SAMPLES=av(16),this._aoRenderTarget=new wi,this._aoRenderTarget.texture.name="GTAONode.AO",this._material=null,this._textureNode=vC(this,this._aoRenderTarget.texture),this.updateBeforeType=Sf.FRAME}getTextureNode(){return this._textureNode}setSize(t,e){this.resolution.value.set(t,e),this._aoRenderTarget.setSize(t,e)}updateBefore(t){const{renderer:e}=t,n=e.getDrawingBufferSize(JC),i=e.getRenderTarget(),s=e.getMRT();e.getClearColor($C);const r=e.getClearAlpha();ZC.material=this._material,this.setSize(n.width,n.height),e.setMRT(null),e.setClearColor(16777215,1),e.setRenderTarget(this._aoRenderTarget),ZC.render(e),e.setRenderTarget(i),e.setMRT(s),e.setClearColor($C,r)}setup(t){const e=vx(),n=t=>this.depthNode.uv(t).x,i=t=>this.noiseNode.uv(t),s=bg((([t])=>{const e=this.cameraProjectionMatrix.mul(kg(t,1));let i=e.xy.div(e.w).mul(.5).add(.5).toVar();i=Pg(i.x,i.y.oneMinus());const s=n(i);return zg(i,s)})),r=bg((([t,e])=>{t=Pg(t.x,t.y.oneMinus()).mul(2).sub(1);const n=kg(zg(t,e),1),i=kg(this.cameraProjectionMatrixInverse.mul(n));return i.xyz.div(i.w)})),a=bg((()=>{const t=n(e);t.greaterThanEqual(1).discard();const a=r(e,t),o=this.normalNode.rgb.normalize(),l=this.radius,c=_x(this.noiseNode,0);let u=Pg(e.x,e.y.oneMinus());u=u.mul(this.resolution.div(c));const h=i(u),d=h.xyz.mul(2).sub(1),p=zg(d.xy,0).normalize(),m=zg(p.y.mul(-1),p.x,0),f=Xg(p,m,zg(0,0,1)),g=this.SAMPLES.lessThan(30).select(3,5),v=Gv(this.SAMPLES,g.sub(1)).div(g),y=Cg(0).toVar();return hT({start:Rg(0),end:g,type:"int",condition:"<"},(({i:t})=>{const e=Cg(t).div(Cg(g)).mul(my),n=kg(Ly(e),Iy(e),0,Gv(.5,jv(.5,h.w)));n.xyz=Cy(f.mul(n.xyz));const i=Cy(a.xyz.negate()),c=Cy(r_(n.xyz,i)),u=r_(c,i),d=Cy(o.sub(c.mul(s_(o,c)))),p=r_(d,c),m=Pg(s_(i,p),s_(i,p.negate())).toVar();hT({end:v,type:"int",name:"j",condition:"<"},(({j:t})=>{const e=n.xyz.mul(l).mul(n.w).mul(a_(Xv(Cg(t).add(1),Cg(v)),this.distanceExponent)),o=s(a.add(e)),c=r(o.xy,o.z).sub(a);Eg(zy(c.z).lessThan(this.thickness),(()=>{const e=s_(i,Cy(c));m.x.addAssign(Ky(0,jv(e.sub(m.x),p_(1,Cg(2).div(Cg(t).add(2)),this.distanceFallOff))))}));const u=s(a.sub(e)),h=r(u.xy,u.z).sub(a);Eg(zy(h.z).lessThan(this.thickness),(()=>{const e=s_(i,Cy(h));m.y.addAssign(Ky(0,jv(e.sub(m.y),p_(1,Cg(2).div(Cg(t).add(2)),this.distanceFallOff))))}))}));const _=wy(Wv(1,m.mul(m))),x=s_(d,u),M=s_(d,i),b=jv(.5,Dy(m.y).sub(Dy(m.x)).add(_.x.mul(m.x).sub(_.y.mul(m.y)))),T=jv(.5,Wv(2,m.x.mul(m.x)).sub(m.y.mul(m.y))),S=x.mul(b).add(M.mul(T));y.addAssign(S)})),y.assign(m_(y.div(g),0,1)),y.assign(a_(y,this.scale)),kg(zg(y),1)})),o=this._material||(this._material=new rS);return o.fragmentNode=a().context(t.getSharedContext()),o.name="GTAO",o.needsUpdate=!0,this._textureNode}dispose(){this._aoRenderTarget.dispose()}}const QC=(t,e,n)=>vg(new KC(vg(t),vg(e),n));class tR extends Uf{static get type(){return"DenoiseNode"}constructor(t,e,n,i,s){super(),this.textureNode=t,this.depthNode=e,this.normalNode=n,this.noiseNode=i,this.cameraProjectionMatrixInverse=av(s.projectionMatrixInverse),this.lumaPhi=av(5),this.depthPhi=av(5),this.normalPhi=av(5),this.radius=av(5),this.index=av(0),this._resolution=av(new ti),this._sampleVectors=CM(function(t,e,n){const i=function(t,e,n){const i=[];for(let s=0;s<t;s++){const r=2*Math.PI*e*s/t,a=Math.pow(s/(t-1),n);i.push(new Li(Math.cos(r),Math.sin(r),a))}return i}(t,e,n),s=[];for(let e=0;e<t;e++){const t=i[e];s.push(t)}return s}(16,2,1)),this.updateBeforeType=Sf.RENDER}updateBefore(){const t=this.textureNode.value;this._resolution.value.set(t.image.width,t.image.height)}setup(){const t=vx(),e=t=>this.textureNode.uv(t),n=t=>this.depthNode.uv(t).x,i=t=>this.normalNode.uv(t),s=t=>this.noiseNode.uv(t),r=bg((([t,e])=>{t=Pg(t.x,t.y.oneMinus()).mul(2).sub(1);const n=kg(zg(t,e),1),i=kg(this.cameraProjectionMatrixInverse.mul(n));return i.xyz.div(i.w)})),a=bg((([t,s,a,o])=>{const l=e(o),c=n(o),u=i(o).rgb.normalize(),h=l.rgb,d=r(o,c),p=s_(s,u).toVar(),m=a_(Ky(p,0),this.normalPhi).toVar(),f=zy(LC(h).sub(LC(t))).toVar(),g=Ky(Cg(1).sub(f.div(this.lumaPhi)),0).toVar(),v=zy(s_(a.sub(d),s)).toVar(),y=Ky(Cg(1).sub(v.div(this.depthPhi)),0),_=g.mul(y).mul(m);return kg(h.mul(_),_)})),o=bg((([t])=>{const o=n(t),l=i(t).rgb.normalize(),c=e(t);Eg(o.greaterThanEqual(1).or(s_(l,l).equal(0)),(()=>c));const u=zg(c.rgb),h=r(t,o),d=_x(this.noiseNode,0);let p=Pg(t.x,t.y.oneMinus());p=p.mul(this._resolution.div(d));const m=s(p),f=Iy(m.element(this.index.mod(4).mul(2).mul(my))),g=Ly(m.element(this.index.mod(4).mul(2).mul(my))),v=Pg(f,g),y=jg(v.x,v.y.negate(),v.x,v.y),_=Cg(1).toVar(),x=zg(c.rgb).toVar();return hT({start:Rg(0),end:Rg(16),type:"int",condition:"<"},(({i:e})=>{const n=this._sampleVectors.element(e).toVar(),i=y.mul(n.xy.mul(Cg(1).add(n.z.mul(this.radius.sub(1))))).div(this._resolution).toVar(),s=t.add(i).toVar(),r=a(u,l,h,s);x.addAssign(r.xyz),_.addAssign(r.w)})),Eg(_.greaterThan(Cg(0)),(()=>{x.divAssign(_)})),kg(x,c.a)})).setLayout({name:"denoise",type:"vec4",inputs:[{name:"uv",type:"vec2"}]});return bg((()=>o(t)))()}}const eR=(t,e,n,i,s)=>vg(new tR(kN(t),vg(e),vg(n),vg(i),s));class nR extends Uf{static get type(){return"FXAANode"}constructor(t){super(),this.textureNode=t,this.updateBeforeType=Sf.RENDER,this._invSize=av(new ti)}updateBefore(){const t=this.textureNode.value;this._invSize.value.set(1/t.image.width,1/t.image.height)}setup(){const t=this.textureNode.bias(-100),e=t.uvNode||vx(),n=e=>t.uv(e),i=(e,n,i)=>t.uv(e.add(n.mul(i))),s=Rg(5),r=bg((([t,e])=>{const n=kg(e).toVar(),i=kg(t).toVar(),s=kg(zy(i.sub(n))).toVar();return Ky(Ky(Ky(s.r,s.g),s.b),s.a)})),a=bg((([t,e,a,o])=>{const l=n(t).toVar(),c=i(t,Pg(0,-1),e.xy).toVar(),u=i(t,Pg(1,0),e.xy).toVar(),h=i(t,Pg(0,1),e.xy).toVar(),d=i(t,Pg(-1,0),e.xy).toVar(),p=r(l,h).toVar(),m=r(l,c).toVar(),f=r(l,u).toVar(),g=r(l,d).toVar(),v=Ky(p,Ky(m,Ky(f,g))).toVar();Eg(v.lessThan(a),(()=>l));const y=Wv(p.add(m),f.add(g)).toVar();y.mulAssign(o),Eg(zy(y).lessThan(.3),(()=>{const n=f.greaterThan(g).select(1,-1).toVar(),s=m.greaterThan(p).select(1,-1).toVar(),a=Pg(n,s).toVar(),v=i(t,Pg(a.x,a.y),e.xy),_=r(l,v).toVar(),x=i(t,Pg(a.x.negate(),a.y.negate()),e.xy),M=r(l,x).toVar();y.assign(M.sub(_)),y.mulAssign(o),Eg(zy(y).lessThan(.3),(()=>{const t=h.add(c).add(u).add(d);return p_(l,t.mul(.25),.4)}))}));const _=Pg().toVar();Eg(y.lessThanEqual(0),(()=>{h.assign(d),c.assign(u),_.x.assign(0),_.y.assign(e.y)})).Else((()=>{_.x.assign(e.x),_.y.assign(0)}));const x=r(l,h).toVar(),M=r(l,c).toVar();Eg(x.lessThanEqual(M),(()=>{h.assign(c)}));const b=Rg(0).toVar(),T=Rg(0).toVar(),S=Cg(0).toVar(),w=Cg(0).toVar(),E=Pg(t).toVar(),A=Pg(t).toVar(),N=Rg(0).toVar(),C=Rg(0).toVar();hT(s,(({i:e})=>{const i=e.add(1).toVar();Eg(b.equal(0),(()=>{S.addAssign(i),E.assign(t.add(_.mul(S)));const s=n(E.xy),a=r(s,l).toVar(),o=r(s,h).toVar();Eg(a.greaterThan(o),(()=>{b.assign(1)})),N.assign(e)})),Eg(T.equal(0),(()=>{w.addAssign(i),A.assign(t.sub(_.mul(w)));const s=n(A.xy),a=r(s,l).toVar(),o=r(s,h).toVar();Eg(a.greaterThan(o),(()=>{T.assign(1)})),C.assign(e)})),Eg(b.equal(1).or(T.equal(1)),(()=>{pT()}))})),Eg(b.equal(0).and(T.equal(0)),(()=>l));const R=Cg(1).toVar(),I=Cg(1).toVar();Eg(b.equal(1),(()=>{R.assign(Cg(N).div(Cg(s.sub(1))))})),Eg(T.equal(1),(()=>{I.assign(Cg(C).div(Cg(s.sub(1))))}));const L=Jy(R,I);return L.assign(a_(L,.5)),L.assign(Cg(1).sub(L)),p_(l,h,L.mul(.5))})).setLayout({name:"FxaaPixelShader",type:"vec4",inputs:[{name:"uv",type:"vec2"},{name:"fxaaQualityRcpFrame",type:"vec2"},{name:"fxaaQualityEdgeThreshold",type:"float"},{name:"fxaaQualityinvEdgeThreshold",type:"float"}]});return bg((()=>{const t=Cg(.2),n=Cg(1).div(t);return a(e,this._invSize,t,n)}))()}}const iR=t=>vg(new nR(kN(t))),sR=new zN,rR=new tr(0,0,0),aR=new tr,oR=new ti,lR=new ti(1,0),cR=new ti(0,1);class uR extends Uf{static get type(){return"BloomNode"}constructor(t,e=1,n=0,i=0){super(),this.inputNode=t,this.strength=av(e),this.radius=av(n),this.threshold=av(i),this.smoothWidth=av(.01),this._renderTargetsHorizontal=[],this._renderTargetsVertical=[],this._nMips=5,this._renderTargetBright=new wi(1,1,{type:Pt}),this._renderTargetBright.texture.name="UnrealBloomPass.bright",this._renderTargetBright.texture.generateMipmaps=!1;for(let t=0;t<this._nMips;t++){const e=new wi(1,1,{type:Pt});e.texture.name="UnrealBloomPass.h"+t,e.texture.generateMipmaps=!1,this._renderTargetsHorizontal.push(e);const n=new wi(1,1,{type:Pt});n.texture.name="UnrealBloomPass.v"+t,n.texture.generateMipmaps=!1,this._renderTargetsVertical.push(n)}this._compositeMaterial=null,this._highPassFilterMaterial=null,this._separableBlurMaterials=[],this._textureNodeBright=Tx(this._renderTargetBright.texture),this._textureNodeBlur0=Tx(this._renderTargetsVertical[0].texture),this._textureNodeBlur1=Tx(this._renderTargetsVertical[1].texture),this._textureNodeBlur2=Tx(this._renderTargetsVertical[2].texture),this._textureNodeBlur3=Tx(this._renderTargetsVertical[3].texture),this._textureNodeBlur4=Tx(this._renderTargetsVertical[4].texture),this._textureOutput=vC(this,this._renderTargetsHorizontal[0].texture),this.updateBeforeType=Sf.FRAME}getTextureNode(){return this._textureOutput}setSize(t,e){let n=Math.round(t/2),i=Math.round(e/2);this._renderTargetBright.setSize(n,i);for(let t=0;t<this._nMips;t++)this._renderTargetsHorizontal[t].setSize(n,i),this._renderTargetsVertical[t].setSize(n,i),this._separableBlurMaterials[t].invSize.value.set(1/n,1/i),n=Math.round(n/2),i=Math.round(i/2)}updateBefore(t){const{renderer:e}=t,n=e.getDrawingBufferSize(oR);this.setSize(n.width,n.height);const i=e.getRenderTarget(),s=e.getMRT();e.getClearColor(aR);const r=e.getClearAlpha();this.setSize(n.width,n.height),e.setMRT(null),e.setClearColor(rR,0),e.setRenderTarget(this._renderTargetBright),sR.material=this._highPassFilterMaterial,sR.render(e);let a=this._renderTargetBright;for(let t=0;t<this._nMips;t++)sR.material=this._separableBlurMaterials[t],this._separableBlurMaterials[t].colorTexture.value=a.texture,this._separableBlurMaterials[t].direction.value=lR,e.setRenderTarget(this._renderTargetsHorizontal[t]),e.clear(),sR.render(e),this._separableBlurMaterials[t].colorTexture.value=this._renderTargetsHorizontal[t].texture,this._separableBlurMaterials[t].direction.value=cR,e.setRenderTarget(this._renderTargetsVertical[t]),e.clear(),sR.render(e),a=this._renderTargetsVertical[t];e.setRenderTarget(this._renderTargetsHorizontal[0]),e.clear(),sR.material=this._compositeMaterial,sR.render(e),e.setRenderTarget(i),e.setMRT(s),e.setClearColor(aR,r)}setup(t){const e=bg((()=>{const t=this.inputNode,e=LC(t.rgb),n=v_(this.threshold,this.threshold.add(this.smoothWidth),e);return p_(kg(0),t,n)}));this._highPassFilterMaterial=this._highPassFilterMaterial||new rS,this._highPassFilterMaterial.fragmentNode=e().context(t.getSharedContext()),this._highPassFilterMaterial.name="Bloom_highPass",this._highPassFilterMaterial.needsUpdate=!0;const n=[3,5,7,9,11];for(let e=0;e<this._nMips;e++)this._separableBlurMaterials.push(this._getSeperableBlurMaterial(t,n[e]));const i=CM([1,.8,.6,.4,.2]),s=CM([new Li(1,1,1),new Li(1,1,1),new Li(1,1,1),new Li(1,1,1),new Li(1,1,1)]),r=bg((([t,e])=>{const n=Cg(1.2).sub(t);return p_(t,n,e)})).setLayout({name:"lerpBloomFactor",type:"float",inputs:[{name:"factor",type:"float"},{name:"radius",type:"float"}]}),a=bg((()=>{const t=r(i.element(0),this.radius).mul(kg(s.element(0),1)).mul(this._textureNodeBlur0),e=r(i.element(1),this.radius).mul(kg(s.element(1),1)).mul(this._textureNodeBlur1),n=r(i.element(2),this.radius).mul(kg(s.element(2),1)).mul(this._textureNodeBlur2),a=r(i.element(3),this.radius).mul(kg(s.element(3),1)).mul(this._textureNodeBlur3),o=r(i.element(4),this.radius).mul(kg(s.element(4),1)).mul(this._textureNodeBlur4);return t.add(e).add(n).add(a).add(o).mul(this.strength)}));return this._compositeMaterial=this._compositeMaterial||new rS,this._compositeMaterial.fragmentNode=a().context(t.getSharedContext()),this._compositeMaterial.name="Bloom_comp",this._compositeMaterial.needsUpdate=!0,this._textureOutput}dispose(){for(let t=0;t<this._renderTargetsHorizontal.length;t++)this._renderTargetsHorizontal[t].dispose();for(let t=0;t<this._renderTargetsVertical.length;t++)this._renderTargetsVertical[t].dispose();this._renderTargetBright.dispose()}_getSeperableBlurMaterial(t,e){const n=[];for(let t=0;t<e;t++)n.push(.39894*Math.exp(-.5*t*t/(e*e))/e);const i=Tx(),s=CM(n),r=av(new ti),a=av(new ti(.5,.5)),o=vx(),l=t=>i.uv(t),c=bg((()=>{const t=s.element(0).toVar(),n=l(o).rgb.mul(t).toVar();return hT({start:Rg(1),end:Rg(e),type:"int",condition:"<"},(({i:e})=>{const i=Cg(e),c=s.element(e),u=a.mul(r).mul(i),h=l(o.add(u)).rgb,d=l(o.sub(u)).rgb;n.addAssign(Gv(h,d).mul(c)),t.addAssign(Cg(2).mul(c))})),kg(n.div(t),1)})),u=new rS;return u.fragmentNode=c().context(t.getSharedContext()),u.name="Bloom_seperable",u.needsUpdate=!0,u.colorTexture=i,u.direction=a,u.invSize=r,u}}const hR=(t,e,n,i)=>vg(new uR(vg(t),e,n,i));class dR extends Uf{static get type(){return"TransitionNode"}constructor(t,e,n,i,s,r){super(),this.textureNodeA=t,this.textureNodeB=e,this.mixTextureNode=n,this.mixRatioNode=i,this.thresholdNode=s,this.useTextureNode=r}setup(){const{textureNodeA:t,textureNodeB:e,mixTextureNode:n,mixRatioNode:i,thresholdNode:s,useTextureNode:r}=this,a=t=>{const e=t.uvNode||vx();return t.uv(e)},o=bg((()=>{const o=a(t),l=a(e),c=kg().toVar();return Eg(r.equal(Rg(1)),(()=>{const t=a(n),e=i.mul(s.mul(2).add(1)).sub(s),r=m_(Wv(t.r,e).mul(Cg(1).div(s)),0,1);c.assign(p_(o,l,r))})).Else((()=>{c.assign(p_(l,o,i))})),c}));return o()}}const pR=(t,e,n,i=0,s=.1,r=0)=>vg(new dR(kN(t),kN(e),kN(n),vg(i),vg(s),vg(r)));class mR extends Uf{static get type(){return"PixelationNode"}constructor(t,e,n,i,s,r){super(),this.textureNode=t,this.depthNode=e,this.normalNode=n,this.pixelSize=i,this.normalEdgeStrength=s,this.depthEdgeStrength=r,this._resolution=av(new Si),this.updateBeforeType=Sf.RENDER}updateBefore(){const t=this.textureNode.value,e=t.image.width,n=t.image.height;this._resolution.value.set(e,n,1/e,1/n)}setup(){const{textureNode:t,depthNode:e,normalNode:n}=this,i=t.uvNode||vx(),s=e.uvNode||vx(),r=n.uvNode||vx(),a=(t,n)=>e.uv(s.add(Pg(t,n).mul(this._resolution.zw))).r,o=(t,e)=>n.uv(r.add(Pg(t,e).mul(this._resolution.zw))).rgb.normalize(),l=(t,e,n,i)=>{const s=a(t,e).sub(n),r=o(t,e),l=zg(1,1,1),c=s_(i.sub(r),l),u=m_(v_(-.01,.01,c),0,1),h=m_(Vy(s.mul(.25).add(.0025)),0,1);return Cg(1).sub(s_(i,r)).mul(h).mul(u)},c=bg((()=>{const e=t.uv(i),n=lv("float","depth"),s=lv("vec3","normal");Eg(this.depthEdgeStrength.greaterThan(0).or(this.normalEdgeStrength.greaterThan(0)),(()=>{n.assign(a(0,0)),s.assign(o(0,0))}));const r=lv("float","dei");Eg(this.depthEdgeStrength.greaterThan(0),(()=>{r.assign((t=>{const e=lv("float","diff");return e.addAssign(m_(a(1,0).sub(t))),e.addAssign(m_(a(-1,0).sub(t))),e.addAssign(m_(a(0,1).sub(t))),e.addAssign(m_(a(0,-1).sub(t))),Ay(v_(.01,.02,e).mul(2)).div(2)})(n))}));const c=lv("float","nei");Eg(this.normalEdgeStrength.greaterThan(0),(()=>{c.assign(((t,e)=>{const n=lv("float","indicator");return n.addAssign(l(0,-1,t,e)),n.addAssign(l(0,1,t,e)),n.addAssign(l(-1,0,t,e)),n.addAssign(l(1,0,t,e)),t_(.1,n)})(n,s))}));const u=r.greaterThan(0).select(Cg(1).sub(r.mul(this.depthEdgeStrength)),c.mul(this.normalEdgeStrength).add(1));return e.mul(u)}));return c()}}class fR extends fC{static get type(){return"PixelationPassNode"}constructor(t,e,n=6,i=.3,s=.4){super("color",t,e,{minFilter:gt,magFilter:gt}),this.pixelSize=n,this.normalEdgeStrength=i,this.depthEdgeStrength=s,this.isPixelationPassNode=!0,this._mrt=JA({output:Nv,normal:hM})}setSize(t,e){const n=this.pixelSize.value?this.pixelSize.value:this.pixelSize,i=Math.floor(t/n),s=Math.floor(e/n);super.setSize(i,s)}setup(){return((t,e,n,i=6,s=.3,r=.4)=>vg(new mR(kN(t),kN(e),kN(n),vg(i),vg(s),vg(r))))(super.getTextureNode("output"),super.getTextureNode("depth"),super.getTextureNode("normal"),this.pixelSize,this.normalEdgeStrength,this.depthEdgeStrength)}}const gR=(t,e,n,i,s)=>vg(new fR(t,e,n,i,s)),vR=new ti;class yR extends fC{static get type(){return"SSAAPassNode"}constructor(t,e){super(fC.COLOR,t,e),this.isSSAAPassNode=!0,this.sampleLevel=4,this.unbiased=!0,this.clearColor=new tr(0),this.clearAlpha=0,this._currentClearColor=new tr,this.sampleWeight=av(1),this.sampleRenderTarget=null,this._quadMesh=new zN}updateBefore(t){const{renderer:e}=t,{scene:n,camera:i}=this;this._pixelRatio=e.getPixelRatio();const s=e.getSize(vR);this.setSize(s.width,s.height),this.sampleRenderTarget.setSize(this.renderTarget.width,this.renderTarget.height),e.getClearColor(this._currentClearColor);const r=e.getClearAlpha(),a=e.getRenderTarget(),o=e.getMRT(),l=e.autoClear;this._cameraNear.value=i.near,this._cameraFar.value=i.far,e.setMRT(this.getMRT()),e.autoClear=!1;const c=_R[Math.max(0,Math.min(this.sampleLevel,5))],u=1/c.length,h={fullWidth:this.renderTarget.width,fullHeight:this.renderTarget.height,offsetX:0,offsetY:0,width:this.renderTarget.width,height:this.renderTarget.height},d=Object.assign({},i.view);d.enabled&&Object.assign(h,d);for(let t=0;t<c.length;t++){const s=c[t];if(i.setViewOffset&&i.setViewOffset(h.fullWidth,h.fullHeight,h.offsetX+.0625*s[0],h.offsetY+.0625*s[1],h.width,h.height),this.sampleWeight.value=u,this.unbiased){const e=(t+.5)/c.length-.5;this.sampleWeight.value+=.03125*e}e.setClearColor(this.clearColor,this.clearAlpha),e.setRenderTarget(this.sampleRenderTarget),e.clear(),e.render(n,i),e.setRenderTarget(this.renderTarget),0===t&&(e.setClearColor(0,0),e.clear()),this._quadMesh.render(e)}e.copyTextureToTexture(this.sampleRenderTarget.depthTexture,this.renderTarget.depthTexture),i.setViewOffset&&d.enabled?i.setViewOffset(d.fullWidth,d.fullHeight,d.offsetX,d.offsetY,d.width,d.height):i.clearViewOffset&&i.clearViewOffset(),e.setRenderTarget(a),e.setMRT(o),e.autoClear=l,e.setClearColor(this._currentClearColor,r)}setup(t){let e;null===this.sampleRenderTarget&&(this.sampleRenderTarget=this.renderTarget.clone());const n=this.getMRT();if(null!==n){const t={};for(const e in n.outputNodes){const n=ZA(this.sampleRenderTarget.textures,e);n>=0&&(t[e]=Tx(this.sampleRenderTarget.textures[n]).mul(this.sampleWeight))}e=JA(t)}else e=Tx(this.sampleRenderTarget.texture).mul(this.sampleWeight);return this._quadMesh.material=new rS,this._quadMesh.material.fragmentNode=e,this._quadMesh.material.transparent=!0,this._quadMesh.material.depthTest=!1,this._quadMesh.material.depthWrite=!1,this._quadMesh.material.premultipliedAlpha=!0,this._quadMesh.material.blending=2,this._quadMesh.material.normals=!1,this._quadMesh.material.name="SSAA",super.setup(t)}dispose(){super.dispose(),null!==this.sampleRenderTarget&&this.sampleRenderTarget.dispose()}}const _R=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]],xR=(t,e)=>vg(new yR(t,e)),MR=new ti;class bR extends fC{static get type(){return"StereoPassNode"}constructor(t,e){super(fC.COLOR,t,e),this.isStereoPassNode=!0,this.stereo=new Fp,this.stereo.aspect=.5}updateBefore(t){const{renderer:e}=t,{scene:n,camera:i,stereo:s,renderTarget:r}=this;this._pixelRatio=e.getPixelRatio(),s.cameraL.coordinateSystem=e.coordinateSystem,s.cameraR.coordinateSystem=e.coordinateSystem,s.update(i);const a=e.getSize(MR);this.setSize(a.width,a.height);const o=e.autoClear;e.autoClear=!1;const l=e.getRenderTarget(),c=e.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(const t in this._previousTextures)this.toggleTexture(t);e.setRenderTarget(r),e.setMRT(this._mrt),e.clear(),r.scissorTest=!0,r.scissor.set(0,0,r.width/2,r.height),r.viewport.set(0,0,r.width/2,r.height),e.render(n,s.cameraL),r.scissor.set(r.width/2,0,r.width/2,r.height),r.viewport.set(r.width/2,0,r.width/2,r.height),e.render(n,s.cameraR),r.scissorTest=!1,e.setRenderTarget(l),e.setMRT(c),e.autoClear=o}}const TR=(t,e)=>vg(new bR(t,e)),SR=new ti,wR=new zN;class ER extends fC{static get type(){return"StereoCompositePassNode"}constructor(t,e){super(fC.COLOR,t,e),this.isStereoCompositePassNode=!0,this.stereo=new Fp;const n={minFilter:Mt,magFilter:gt,type:Pt};this._renderTargetL=new wi(1,1,n),this._renderTargetR=new wi(1,1,n),this._mapLeft=Tx(this._renderTargetL.texture),this._mapRight=Tx(this._renderTargetR.texture),this._material=null}updateStereoCamera(t){this.stereo.cameraL.coordinateSystem=t,this.stereo.cameraR.coordinateSystem=t,this.stereo.update(this.camera)}setSize(t,e){super.setSize(t,e),this._renderTargetL.setSize(this.renderTarget.width,this.renderTarget.height),this._renderTargetR.setSize(this.renderTarget.width,this.renderTarget.height)}updateBefore(t){const{renderer:e}=t,{scene:n,stereo:i,renderTarget:s}=this;this._pixelRatio=e.getPixelRatio(),this.updateStereoCamera(e.coordinateSystem);const r=e.getSize(SR);this.setSize(r.width,r.height);const a=e.getRenderTarget();e.setRenderTarget(this._renderTargetL),e.render(n,i.cameraL),e.setRenderTarget(this._renderTargetR),e.render(n,i.cameraR),e.setRenderTarget(s),wR.material=this._material,wR.render(e),e.setRenderTarget(a)}dispose(){super.dispose(),this._renderTargetL.dispose(),this._renderTargetR.dispose(),null!==this._material&&this._material.dispose()}}class AR extends ER{static get type(){return"AnaglyphPassNode"}constructor(t,e){super(t,e),this.isAnaglyphPassNode=!0,this._colorMatrixLeft=av((new ei).fromArray([.4561,-.0400822,-.0152161,.500484,-.0378246,-.0205971,.176381,-.0157589,-.00546856])),this._colorMatrixRight=av((new ei).fromArray([-.0434706,.378476,-.0721527,-.0879388,.73364,-.112961,-.00155529,-.0184503,1.2264]))}setup(t){const e=vx(),n=bg((()=>{const t=this._mapLeft.uv(e),n=this._mapRight.uv(e),i=m_(this._colorMatrixLeft.mul(t.rgb).add(this._colorMatrixRight.mul(n.rgb)));return kg(i.rgb,Ky(t.a,n.a))})),i=this._material||(this._material=new rS);return i.fragmentNode=n().context(t.getSharedContext()),i.name="Anaglyph",i.needsUpdate=!0,super.setup(t)}}const NR=(t,e)=>vg(new AR(t,e));class CR extends ER{static get type(){return"ParallaxBarrierPassNode"}constructor(t,e){super(t,e),this.isParallaxBarrierPassNode=!0}setup(t){const e=vx(),n=bg((()=>{const t=kg().toVar();return Eg(Qy(UT.y,2).greaterThan(1),(()=>{t.assign(this._mapLeft.uv(e))})).Else((()=>{t.assign(this._mapRight.uv(e))})),t})),i=this._material||(this._material=new rS);return i.fragmentNode=n().context(t.getSharedContext()),i.needsUpdate=!0,super.setup(t)}}const RR=(t,e)=>vg(new CR(t,e));class IR extends fC{static get type(){return"ToonOutlinePassNode"}constructor(t,e,n,i,s){super(fC.COLOR,t,e),this.colorNode=n,this.thicknessNode=i,this.alphaNode=s,this._materialCache=new WeakMap}updateBefore(t){const{renderer:e}=t,n=e.getRenderObjectFunction();e.setRenderObjectFunction(((t,n,i,s,r,a,o)=>{if((r.isMeshToonMaterial||r.isMeshToonNodeMaterial)&&!1===r.wireframe){const l=this._getOutlineMaterial(r);e.renderObject(t,n,i,s,l,a,o)}e.renderObject(t,n,i,s,r,a,o)})),super.updateBefore(t),e.setRenderObjectFunction(n)}_createMaterial(){const t=new rS;t.isMeshToonOutlineMaterial=!0,t.name="Toon_Outline",t.side=d;const e=cM.negate(),n=Cx.mul(Zx),i=Cg(1),s=n.mul(kg(Qx,1)),r=n.mul(kg(Qx.add(e),1)),a=Cy(s.sub(r));return t.vertexNode=s.add(a.mul(this.thicknessNode).mul(s.w).mul(i)),t.colorNode=kg(this.colorNode,this.alphaNode),t}_getOutlineMaterial(t){let e=this._materialCache.get(t);return void 0===e&&(e=this._createMaterial(),this._materialCache.set(t,e)),e}}const LR=(t,e,n=new tr(0,0,0),i=.003,s=1)=>vg(new IR(t,e,vg(n),vg(i),vg(s)));class PR extends If{static get type(){return"ScriptableValueNode"}constructor(t=null){super(),this._value=t,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new Hn,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(t){this._value!==t&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=t,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const t=this.value;if(t&&null===this._cache&&"URL"===this.inputType&&t.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([t.value]));else if(t&&null!==t.value&&void 0!==t.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof t.value||"Number"===this.inputType&&"number"==typeof t.value||"Vector2"===this.inputType&&t.value.isVector2||"Vector3"===this.inputType&&t.value.isVector3||"Vector4"===this.inputType&&t.value.isVector4||"Color"===this.inputType&&t.value.isColor||"Matrix3"===this.inputType&&t.value.isMatrix3||"Matrix4"===this.inputType&&t.value.isMatrix4))return t.value;return this._cache||t}getNodeType(t){return this.value&&this.value.isNode?this.value.getNodeType(t):"float"}setup(){return this.value&&this.value.isNode?this.value:Cg()}serialize(t){super.serialize(t),null!==this.value?"ArrayBuffer"===this.inputType?t.value=xf(this.value):t.value=this.value?this.value.toJSON(t.meta).uuid:null:t.value=null,t.inputType=this.inputType,t.outputType=this.outputType}deserialize(t){super.deserialize(t);let e=null;null!==t.value&&(e="ArrayBuffer"===t.inputType?Mf(t.value):"Texture"===t.inputType?t.meta.textures[t.value]:t.meta.nodes[t.value]||null),this.value=e,this.inputType=t.inputType,this.outputType=t.outputType}}const UR=xg(PR);class DR extends Map{get(t,e=null,...n){if(this.has(t))return super.get(t);if(null!==e){const i=e(...n);return this.set(t,i),i}}}class OR{constructor(t){this.scriptableNode=t}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(t){return this.scriptableNode.getInputLayout(t)}get(t){const e=this.parameters[t];return e?e.getValue():null}}const zR=new DR;class VR extends If{static get type(){return"ScriptableNode"}constructor(t=null,e={}){super(),this.codeNode=t,this.parameters=e,this._local=new DR,this._output=UR(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(t,e){return this._local.set(t,e)}getLocal(t){return this._local.get(t)}onRefresh(){this._refresh()}getInputLayout(t){for(const e of this.getLayout())if(e.inputType&&(e.id===t||e.name===t))return e}getOutputLayout(t){for(const e of this.getLayout())if(e.outputType&&(e.id===t||e.name===t))return e}setOutput(t,e){const n=this._outputs;return void 0===n[t]?n[t]=UR(e):n[t].value=e,this}getOutput(t){return this._outputs[t]}getParameter(t){return this.parameters[t]}setParameter(t,e){const n=this.parameters;return e&&e.isScriptableNode?(this.deleteParameter(t),n[t]=e,n[t].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):e&&e.isScriptableValueNode?(this.deleteParameter(t),n[t]=e,n[t].events.addEventListener("refresh",this.onRefresh)):void 0===n[t]?(n[t]=UR(e),n[t].events.addEventListener("refresh",this.onRefresh)):n[t].value=e,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(t){let e=this.parameters[t];return e&&(e.isScriptableNode&&(e=e.getDefaultOutput()),e.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const t of Object.keys(this.parameters))this.deleteParameter(t);return this.needsUpdate=!0,this}call(t,...e){const n=this.getObject()[t];if("function"==typeof n)return n(...e)}async callAsync(t,...e){const n=this.getObject()[t];if("function"==typeof n)return"AsyncFunction"===n.constructor.name?await n(...e):n(...e)}getNodeType(t){return this.getDefaultOutputNode().getNodeType(t)}refresh(t=null){null!==t?this.getOutput(t).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const t=new OR(this),e=zR.get("THREE"),n=zR.get("TSL"),i=this.getMethod(this.codeNode),s=[t,this._local,zR,()=>this.refresh(),(t,e)=>this.setOutput(t,e),e,n];this._object=i(...s);const r=this._object.layout;if(r&&(!1===r.cache&&this._local.clear(),this._output.outputType=r.outputType||null,Array.isArray(r.elements)))for(const t of r.elements){const e=t.id||t.name;t.inputType&&(void 0===this.getParameter(e)&&this.setParameter(e,null),this.getParameter(e).inputType=t.inputType),t.outputType&&(void 0===this.getOutput(e)&&this.setOutput(e,null),this.getOutput(e).outputType=t.outputType)}return this._object}deserialize(t){super.deserialize(t);for(const t in this.parameters){let e=this.parameters[t];e.isScriptableNode&&(e=e.getDefaultOutput()),e.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const t=this.getDefaultOutput().value;return t&&t.isNode?t:Cg()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const t=["layout","init","main","dispose"].join(", "),e="\nreturn { ...output, "+t+" };",n="var "+t+"; var output = {};\n"+this.codeNode.code+e;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],n),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(t){const e=[pf(this.source),this.getDefaultOutputNode().getCacheKey(t)];for(const n in this.parameters)e.push(this.parameters[n].getCacheKey(t));return mf(e)}set needsUpdate(t){!0===t&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const FR=xg(VR);class BR extends If{static get type(){return"FogNode"}constructor(t,e){super("float"),this.isFogNode=!0,this.colorNode=t,this.factorNode=e}getViewZNode(t){let e;const n=t.context.getViewZ;return void 0!==n&&(e=n(this)),(e||iM.z).negate()}setup(){return this.factorNode}}const kR=xg(BR);class HR extends BR{static get type(){return"FogRangeNode"}constructor(t,e,n){super(t),this.isFogRangeNode=!0,this.nearNode=e,this.farNode=n}setup(t){const e=this.getViewZNode(t);return v_(this.nearNode,this.farNode,e)}}const GR=xg(HR);class WR extends BR{static get type(){return"FogExp2Node"}constructor(t,e){super(t),this.isFogExp2Node=!0,this.densityNode=e}setup(t){const e=this.getViewZNode(t),n=this.densityNode;return n.mul(n,e,e).negate().exp().oneMinus()}}const jR=xg(WR);let XR=null,qR=null;class YR extends If{static get type(){return"RangeNode"}constructor(t=Cg(),e=Cg()){super(),this.minNode=t,this.maxNode=e}getVectorLength(t){const e=t.getTypeLength(yf(this.minNode.value)),n=t.getTypeLength(yf(this.maxNode.value));return e>n?e:n}getNodeType(t){return t.object.count>1?t.getTypeFromLength(this.getVectorLength(t)):"float"}setup(t){const e=t.object;let n=null;if(e.count>1){const i=this.minNode.value,s=this.maxNode.value,r=t.getTypeLength(yf(i)),a=t.getTypeLength(yf(s));XR=XR||new Si,qR=qR||new Si,XR.setScalar(0),qR.setScalar(0),1===r?XR.setScalar(i):i.isColor?XR.set(i.r,i.g,i.b):XR.set(i.x,i.y,i.z||0,i.w||0),1===a?qR.setScalar(s):s.isColor?qR.set(s.r,s.g,s.b):qR.set(s.x,s.y,s.z||0,s.w||0);const o=4,l=o*e.count,c=new Float32Array(l);for(let t=0;t<l;t++){const e=t%o,n=XR.getComponent(e),i=qR.getComponent(e);c[t]=Qn.lerp(n,i,Math.random())}const u=this.getNodeType(t);if(e.count<=4096)n=EM(c,"vec4",e.count).element(Jb).convert(u);else{const e=new Xc(c,4);t.geometry.setAttribute("__range"+this.id,e),n=J_(e).convert(u)}}else n=Cg(0);return n}}const ZR=xg(YR),$R=bg((({depthTexture:t,shadowCoord:e})=>Tx(t,e.xy).compare(e.z))),JR=bg((({depthTexture:t,shadowCoord:e,shadow:n})=>{const i=(e,n)=>Tx(t,e).compare(n),s=PM("mapSize","vec2",n).setGroup(iv),r=PM("radius","float",n).setGroup(iv),a=Pg(1).div(s),o=a.x.negate().mul(r),l=a.y.negate().mul(r),c=a.x.mul(r),u=a.y.mul(r),h=o.div(2),d=l.div(2),p=c.div(2),m=u.div(2);return Gv(i(e.xy.add(Pg(o,l)),e.z),i(e.xy.add(Pg(0,l)),e.z),i(e.xy.add(Pg(c,l)),e.z),i(e.xy.add(Pg(h,d)),e.z),i(e.xy.add(Pg(0,d)),e.z),i(e.xy.add(Pg(p,d)),e.z),i(e.xy.add(Pg(o,0)),e.z),i(e.xy.add(Pg(h,0)),e.z),i(e.xy,e.z),i(e.xy.add(Pg(p,0)),e.z),i(e.xy.add(Pg(c,0)),e.z),i(e.xy.add(Pg(h,m)),e.z),i(e.xy.add(Pg(0,m)),e.z),i(e.xy.add(Pg(p,m)),e.z),i(e.xy.add(Pg(o,u)),e.z),i(e.xy.add(Pg(0,u)),e.z),i(e.xy.add(Pg(c,u)),e.z)).mul(1/17)})),KR=bg((({depthTexture:t,shadowCoord:e,shadow:n})=>{const i=(e,n)=>Tx(t,e).compare(n),s=PM("mapSize","vec2",n).setGroup(iv),r=Pg(1).div(s),a=r.x,o=r.y,l=e.xy,c=Ry(l.mul(s).add(.5));return l.subAssign(c.mul(r)),Gv(i(l,e.z),i(l.add(Pg(a,0)),e.z),i(l.add(Pg(0,o)),e.z),i(l.add(r),e.z),p_(i(l.add(Pg(a.negate(),0)),e.z),i(l.add(Pg(a.mul(2),0)),e.z),c.x),p_(i(l.add(Pg(a.negate(),o)),e.z),i(l.add(Pg(a.mul(2),o)),e.z),c.x),p_(i(l.add(Pg(0,o.negate())),e.z),i(l.add(Pg(0,o.mul(2))),e.z),c.y),p_(i(l.add(Pg(a,o.negate())),e.z),i(l.add(Pg(a,o.mul(2))),e.z),c.y),p_(p_(i(l.add(Pg(a.negate(),o.negate())),e.z),i(l.add(Pg(a.mul(2),o.negate())),e.z),c.x),p_(i(l.add(Pg(a.negate(),o.mul(2))),e.z),i(l.add(Pg(a.mul(2),o.mul(2))),e.z),c.x),c.y)).mul(1/9)})),QR=bg((({depthTexture:t,shadowCoord:e})=>{const n=Cg(1).toVar(),i=Tx(t).uv(e.xy).rg,s=t_(e.z,i.x);return Eg(s.notEqual(Cg(1)),(()=>{const t=e.z.sub(i.x),r=Ky(0,i.y.mul(i.y));let a=r.div(r.add(t.mul(t)));a=m_(Wv(a,.3).div(.95-.3)),n.assign(m_(Ky(s,a)))})),n})),tI=bg((({samples:t,radius:e,size:n,shadowPass:i})=>{const s=Cg(0).toVar(),r=Cg(0).toVar(),a=t.lessThanEqual(Cg(1)).select(Cg(0),Cg(2).div(t.sub(1))),o=t.lessThanEqual(Cg(1)).select(Cg(0),Cg(-1));hT({start:Rg(0),end:Rg(t),type:"int",condition:"<"},(({i:t})=>{const l=o.add(Cg(t).mul(a)),c=i.uv(Gv(UT.xy,Pg(0,l).mul(e)).div(n)).x;s.addAssign(c),r.addAssign(c.mul(c))})),s.divAssign(t),r.divAssign(t);const l=wy(r.sub(s.mul(s)));return Pg(s,l)})),eI=bg((({samples:t,radius:e,size:n,shadowPass:i})=>{const s=Cg(0).toVar(),r=Cg(0).toVar(),a=t.lessThanEqual(Cg(1)).select(Cg(0),Cg(2).div(t.sub(1))),o=t.lessThanEqual(Cg(1)).select(Cg(0),Cg(-1));hT({start:Rg(0),end:Rg(t),type:"int",condition:"<"},(({i:t})=>{const l=o.add(Cg(t).mul(a)),c=i.uv(Gv(UT.xy,Pg(l,0).mul(e)).div(n));s.addAssign(c.x),r.addAssign(Gv(c.y.mul(c.y),c.x.mul(c.x)))})),s.divAssign(t),r.divAssign(t);const l=wy(r.sub(s.mul(s)));return Pg(s,l)})),nI=[$R,JR,KR,QR];let iI=null;const sI=new zN;class rI extends ST{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=Sf.FRAME,this.light=t,this.color=new tr,this.colorNode=av(this.color).setGroup(iv),this.baseColorNode=null,this.shadowMap=null,this.shadowNode=null,this.shadowColorNode=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.isAnalyticLightNode=!0}getCacheKey(){return ff(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(t){const{object:e,renderer:n}=t;if(!1===n.shadowMap.enabled)return;let i=this.shadowColorNode;if(null===i){null===iI&&(iI=new rS,iI.fragmentNode=kg(0,0,0,1),iI.isShadowNodeMaterial=!0,iI.name="ShadowMaterial");const s=n.shadowMap.type,r=this.light.shadow,a=new Ka;a.compareFunction=513;const o=t.createRenderTarget(r.mapSize.width,r.mapSize.height);if(o.depthTexture=a,r.camera.updateProjectionMatrix(),s===u){a.compareFunction=null,this.vsmShadowMapVertical=t.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:qt,type:Pt}),this.vsmShadowMapHorizontal=t.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:qt,type:Pt});const e=Tx(a),n=Tx(this.vsmShadowMapVertical.texture),i=PM("blurSamples","float",r).setGroup(iv),s=PM("radius","float",r).setGroup(iv),o=PM("mapSize","vec2",r).setGroup(iv);let l=this.vsmMaterialVertical||(this.vsmMaterialVertical=new rS);l.fragmentNode=tI({samples:i,radius:s,size:o,shadowPass:e}).context(t.getSharedContext()),l.name="VSMVertical",l=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new rS),l.fragmentNode=eI({samples:i,radius:s,size:o,shadowPass:n}).context(t.getSharedContext()),l.name="VSMHorizontal"}const l=PM("intensity","float",r).setGroup(iv),c=PM("bias","float",r).setGroup(iv),h=PM("normalBias","float",r).setGroup(iv),d=e.material.shadowPositionNode||eM;let p=av(r.matrix).setGroup(iv).mul(d.add(dM.mul(h)));p=p.xyz.div(p.w);let m=p.z.add(c);n.coordinateSystem===kn&&(m=m.mul(2).sub(1)),p=zg(p.x,p.y.oneMinus(),m);const f=p.x.greaterThanEqual(0).and(p.x.lessThanEqual(1)).and(p.y.greaterThanEqual(0)).and(p.y.lessThanEqual(1)).and(p.z.lessThanEqual(1)),g=r.filterNode||nI[n.shadowMap.type]||null;if(null===g)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const v=Tx(o.texture,p),y=f.select(g({depthTexture:s===u?this.vsmShadowMapHorizontal.texture:a,shadowCoord:p,shadow:r}),Cg(1));this.shadowMap=o,this.light.shadow.map=o,this.shadowNode=y,this.shadowColorNode=i=this.colorNode.mul(p_(1,y.rgb.mix(v,1),l.mul(v.a))),this.baseColorNode=this.colorNode}this.colorNode=i,this.updateBeforeType=Sf.RENDER}setup(t){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?t.object.receiveShadow&&this.setupShadow(t):null!==this.shadowNode&&this.disposeShadow()}updateShadow(t){const{shadowMap:e,light:n}=this,{renderer:i,scene:s,camera:r}=t,a=i.shadowMap.type,o=e.depthTexture.version;this._depthVersionCached=o;const l=s.overrideMaterial;s.overrideMaterial=iI,e.setSize(n.shadow.mapSize.width,n.shadow.mapSize.height),n.shadow.updateMatrices(n),n.shadow.camera.layers.mask=r.layers.mask;const c=i.getRenderTarget(),h=i.getRenderObjectFunction();i.setRenderObjectFunction(((t,...e)=>{(!0===t.castShadow||t.receiveShadow&&a===u)&&i.renderObject(t,...e)})),i.setRenderTarget(e),i.render(s,n.shadow.camera),i.setRenderObjectFunction(h),!0!==n.isPointLight&&a===u&&this.vsmPass(t,n),i.setRenderTarget(c),s.overrideMaterial=l}vsmPass(t,e){const{renderer:n}=t;this.vsmShadowMapVertical.setSize(e.shadow.mapSize.width,e.shadow.mapSize.height),this.vsmShadowMapHorizontal.setSize(e.shadow.mapSize.width,e.shadow.mapSize.height),n.setRenderTarget(this.vsmShadowMapVertical),sI.material=this.vsmMaterialVertical,sI.render(n),n.setRenderTarget(this.vsmShadowMapHorizontal),sI.material=this.vsmMaterialHorizontal,sI.render(n)}disposeShadow(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.shadowNode=null,this.shadowColorNode=null,this.baseColorNode=null,this.updateBeforeType=Sf.NONE}updateBefore(t){const e=this.light.shadow;(e.needsUpdate||e.autoUpdate)&&(this.updateShadow(t),this.shadowMap.depthTexture.version===this._depthVersionCached&&(e.needsUpdate=!1))}update(){const{light:t}=this;this.color.copy(t.color).multiplyScalar(t.intensity)}}const aI=bg((t=>{const{lightDistance:e,cutoffDistance:n,decayExponent:i}=t,s=e.pow(i).max(.01).reciprocal();return n.greaterThan(0).select(s.mul(e.div(n).pow4().oneMinus().clamp().pow2()),s)}));let oI;function lI(t){oI=oI||new WeakMap;let e=oI.get(t);return void 0===e&&oI.set(t,e={}),e}function cI(t){const e=lI(t);return e.position||(e.position=av(new Li).setGroup(iv).onRenderUpdate(((e,n)=>n.value.setFromMatrixPosition(t.matrixWorld))))}function uI(t){const e=lI(t);return e.targetPosition||(e.targetPosition=av(new Li).setGroup(iv).onRenderUpdate(((e,n)=>n.value.setFromMatrixPosition(t.target.matrixWorld))))}function hI(t){const e=lI(t);return e.viewPosition||(e.viewPosition=av(new Li).setGroup(iv).onRenderUpdate((({camera:e},n)=>{n.value=n.value||new Li,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(e.matrixWorldInverse)})))}const dI=t=>Ix.transformDirection(cI(t).sub(uI(t))),pI=bg((([t])=>{const e=t.toUint().mul(747796405).add(2891336453),n=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return n.shiftRight(22).bitXor(n).toFloat().mul(1/2**32)})),mI=(t,e)=>a_(jv(4,t.mul(Wv(1,t))),e),fI=(t,e)=>t.lessThan(.5)?mI(t.mul(2),e).div(2):Wv(1,mI(jv(Wv(1,t),2),e).div(2)),gI=(t,e,n)=>a_(Xv(a_(t,e),Gv(a_(t,e),a_(Wv(1,t),n))),1/e),vI=(t,e)=>Iy(my.mul(e.mul(t).sub(1))).div(my.mul(e.mul(t).sub(1))),yI=bg((([t])=>t.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),_I=bg((([t])=>zg(yI(t.z.add(yI(t.y.mul(1)))),yI(t.z.add(yI(t.x.mul(1)))),yI(t.y.add(yI(t.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),xI=bg((([t,e,n])=>{const i=zg(t).toVar(),s=Cg(1.4).toVar(),r=Cg(0).toVar(),a=zg(i).toVar();return hT({start:Cg(0),end:Cg(3),type:"float",condition:"<="},(()=>{const t=zg(_I(a.mul(2))).toVar();i.addAssign(t.add(n.mul(Cg(.1).mul(e)))),a.mulAssign(1.8),s.mulAssign(1.5),i.mulAssign(1.2);const o=Cg(yI(i.z.add(yI(i.x.add(yI(i.y)))))).toVar();r.addAssign(o.div(s)),a.addAssign(.14)})),r})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]}),MI=bg((([t,e,n=Pg(.5)])=>bE(t.sub(n),e).add(n))),bI=bg((([t,e,n=Pg(.5)])=>{const i=t.sub(n),s=i.dot(i),r=s.mul(s).mul(e);return t.add(i.mul(r))})),TI=bg((({position:t=null,horizontal:e=!0,vertical:n=!1})=>{let i;null!==t?(i=Gx.toVar(),i[3][0]=t.x,i[3][1]=t.y,i[3][2]=t.z):i=Gx;const s=Ix.mul(i);return mg(e)&&(s[0][0]=Gx[0].length(),s[0][1]=0,s[0][2]=0),mg(n)&&(s[1][0]=0,s[1][1]=Gx[1].length(),s[1][2]=0),s[2][0]=0,s[2][1]=0,s[2][2]=1,Cx.mul(s).mul(Qx)})),SI=bg((([t=null])=>{const e=nS();return nS(YT(t)).sub(e).lessThan(0).select(LT,t)})),wI=new WeakMap;class EI extends Uf{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.updateType=Sf.OBJECT,this.updateAfterType=Sf.OBJECT,this.previousModelWorldMatrix=av(new ls),this.previousProjectionMatrix=av(new ls).setGroup(iv),this.previousCameraViewMatrix=av(new ls)}update({frameId:t,camera:e,object:n}){const i=NI(n);this.previousModelWorldMatrix.value.copy(i);const s=AI(e);s.frameId!==t&&(s.frameId=t,void 0===s.previousProjectionMatrix?(s.previousProjectionMatrix=new ls,s.previousCameraViewMatrix=new ls,s.currentProjectionMatrix=new ls,s.currentCameraViewMatrix=new ls,s.previousProjectionMatrix.copy(e.projectionMatrix),s.previousCameraViewMatrix.copy(e.matrixWorldInverse)):(s.previousProjectionMatrix.copy(s.currentProjectionMatrix),s.previousCameraViewMatrix.copy(s.currentCameraViewMatrix)),s.currentProjectionMatrix.copy(e.projectionMatrix),s.currentCameraViewMatrix.copy(e.matrixWorldInverse),this.previousProjectionMatrix.value.copy(s.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(s.previousCameraViewMatrix))}updateAfter({object:t}){NI(t).copy(t.matrixWorld)}setup(){const t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),e=Cx.mul(Zx).mul(Qx),n=this.previousProjectionMatrix.mul(t).mul(tM),i=e.xy.div(e.w),s=n.xy.div(n.w);return Wv(i,s)}}function AI(t){let e=wI.get(t);return void 0===e&&(e={},wI.set(t,e)),e}function NI(t,e=0){const n=AI(t);let i=n[e];return void 0===i&&(n[e]=i=new ls),i}const CI=Mg(EI),RI=bg((([t,e])=>Jy(1,t.oneMinus().div(e)).oneMinus())).setLayout({name:"burnBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),II=bg((([t,e])=>Jy(t.div(e.oneMinus()),1))).setLayout({name:"dodgeBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),LI=bg((([t,e])=>t.oneMinus().mul(e.oneMinus()).oneMinus())).setLayout({name:"screenBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),PI=bg((([t,e])=>p_(t.mul(2).mul(e),t.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),t_(.5,t)))).setLayout({name:"overlayBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),UI=bg((([t,e,n=Rg(16)])=>{const i=e=>t.uv(e),s=vx(),r=i(s).toVar(),a=Cg(n);return hT({start:Rg(1),end:n,type:"int",condition:"<="},(({i:t})=>{const n=e.mul(Cg(t).div(a.sub(1)).sub(.5));r.addAssign(i(s.add(n)))})),r.divAssign(a),r})),DI=bg((([t,e=1])=>{const n=t,i=LC(n.rgb),s=zg(i),r=Jy(1,Ky(0,Cg(10).mul(i.sub(.45)))),a=s.mul(n.rgb).mul(2),o=Cg(2).mul(s.oneMinus()).mul(n.rgb.oneMinus()).oneMinus(),l=p_(a,o,r),c=n.a.mul(e),u=c.mul(l.rgb);return u.addAssign(n.rgb.mul(c.oneMinus())),kg(u,n.a)})),OI=bg((([t])=>{const e=zg(t);return kg(s_(e,zg(.393,.769,.189)),s_(e,zg(.349,.686,.168)),s_(e,zg(.272,.534,.131)),t.a)})),zI=bg((([t])=>{const e=t.mul(.9478672986).add(.0521327014).pow(2.4),n=t.mul(.0773993808),i=t.lessThanEqual(.04045);return p_(e,n,i)})).setLayout({name:"sRGBToLinearSRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),VI=bg((([t])=>{const e=t.pow(.41666).mul(1.055).sub(.055),n=t.mul(12.92),i=t.lessThanEqual(.0031308);return p_(e,n,i)})).setLayout({name:"linearSRGBTosRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),FI=bg((([t,e])=>t.mul(e).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),BI=bg((([t,e])=>(t=t.mul(e)).div(t.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),kI=bg((([t,e])=>{const n=(t=(t=t.mul(e)).sub(.004).max(0)).mul(t.mul(6.2).add(.5)),i=t.mul(t.mul(6.2).add(1.7)).add(.06);return n.div(i).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),HI=bg((([t])=>{const e=t.mul(t.add(.0245786)).sub(90537e-9),n=t.mul(t.add(.432951).mul(.983729)).add(.238081);return e.div(n)})),GI=bg((([t,e])=>{const n=Xg(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=Xg(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return t=t.mul(e).div(.6),t=n.mul(t),t=HI(t),(t=i.mul(t)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),WI=Xg(zg(1.6605,-.1246,-.0182),zg(-.5876,1.1329,-.1006),zg(-.0728,-.0083,1.1187)),jI=Xg(zg(.6274,.0691,.0164),zg(.3293,.9195,.088),zg(.0433,.0113,.8956)),XI=bg((([t])=>{const e=zg(t).toVar(),n=zg(e.mul(e)).toVar(),i=zg(n.mul(n)).toVar();return Cg(15.5).mul(i.mul(n)).sub(jv(40.14,i.mul(e))).add(jv(31.96,i).sub(jv(6.868,n.mul(e))).add(jv(.4298,n).add(jv(.1191,e).sub(.00232))))})),qI=bg((([t,e])=>{const n=zg(t).toVar(),i=Xg(zg(.856627153315983,.137318972929847,.11189821299995),zg(.0951212405381588,.761241990602591,.0767994186031903),zg(.0482516061458583,.101439036467562,.811302368396859)),s=Xg(zg(1.1271005818144368,-.1413297634984383,-.14132976349843826),zg(-.11060664309660323,1.157823702216272,-.11060664309660294),zg(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=Cg(-12.47393),a=Cg(4.026069);return n.mulAssign(e),n.assign(jI.mul(n)),n.assign(i.mul(n)),n.assign(Ky(n,1e-10)),n.assign(Sy(n)),n.assign(n.sub(r).div(a.sub(r))),n.assign(m_(n,0,1)),n.assign(XI(n)),n.assign(s.mul(n)),n.assign(a_(Ky(zg(0),n),zg(2.2))),n.assign(WI.mul(n)),n.assign(m_(n,0,1)),n})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),YI=bg((([t,e])=>{const n=Cg(.76),i=Cg(.15);t=t.mul(e);const s=Jy(t.r,Jy(t.g,t.b)),r=T_(s.lessThan(.08),s.sub(jv(6.25,s.mul(s))),.04);t.subAssign(r);const a=Ky(t.r,Ky(t.g,t.b));Eg(a.lessThan(n),(()=>t));const o=Wv(1,n),l=Wv(1,o.mul(o).div(a.add(o.sub(n))));t.mulAssign(l.div(a));const c=Wv(1,Xv(1,i.mul(a.sub(l)).add(1)));return p_(t,zg(l),c)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class ZI extends If{static get type(){return"ComputeBuiltinNode"}constructor(t,e){super(e),this._builtinName=t}getHash(t){return this.getBuiltinName(t)}getNodeType(){return this.nodeType}setBuiltinName(t){return this._builtinName=t,this}getBuiltinName(){return this._builtinName}hasBuiltin(t){t.hasBuiltin(this._builtinName)}generate(t,e){const n=this.getBuiltinName(t),i=this.getNodeType(t);return"compute"===t.shaderStage?t.format(n,i,e):(console.warn(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${t.shaderStage} stage`),t.generateConst(i))}serialize(t){super.serialize(t),t.global=this.global,t._builtinName=this._builtinName}deserialize(t){super.deserialize(t),this.global=t.global,this._builtinName=t._builtinName}}const $I=(t,e)=>vg(new ZI(t,e)),JI=$I("numWorkgroups","uvec3"),KI=$I("workgroupId","uvec3"),QI=$I("localId","uvec3"),tL=$I("subgroupSize","uint");const eL=xg(class extends If{constructor(t){super(),this.scope=t}generate(t){const{scope:e}=this,{renderer:n}=t;!0===n.backend.isWebGLBackend?t.addFlowCode(`\t// ${e}Barrier \n`):t.addLineFlowCode(`${e}Barrier()`,this)}}),nL=()=>eL("workgroup").append(),iL=()=>eL("storage").append(),sL=()=>eL("texture").append();class rL extends Lf{constructor(t,e){super(t,e),this.isWorkgroupInfoElementNode=!0}generate(t,e){let n;const i=t.context.assign;if(n=super.generate(t),!0!==i){const i=this.getNodeType(t);n=t.format(n,i,e)}return n}}class aL extends If{constructor(t,e,n=0){super(e),this.bufferType=e,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.scope=t}label(t){return this.name=t,this}getHash(){return this.uuid}setScope(t){return this.scope=t,this}getInputType(){return`${this.scope}Array`}element(t){return vg(new rL(this,t))}generate(t){return t.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const oL=(t,e)=>vg(new aL("Workgroup",t,e));class lL extends Uf{static get type(){return"AtomicFunctionNode"}constructor(t,e,n,i=null){super("uint"),this.method=t,this.pointerNode=e,this.valueNode=n,this.storeNode=i}getInputType(t){return this.pointerNode.getNodeType(t)}getNodeType(t){return this.getInputType(t)}generate(t){const e=this.method,n=this.getNodeType(t),i=this.getInputType(t),s=this.pointerNode,r=this.valueNode,a=[];a.push(`&${s.build(t,i)}`),a.push(r.build(t,i));const o=`${t.getMethod(e,n)}( ${a.join(", ")} )`;if(null!==this.storeNode){const e=this.storeNode.build(t,i);t.addLineFlowCode(`${e} = ${o}`,this)}else t.addLineFlowCode(o,this)}}lL.ATOMIC_LOAD="atomicLoad",lL.ATOMIC_STORE="atomicStore",lL.ATOMIC_ADD="atomicAdd",lL.ATOMIC_SUB="atomicSub",lL.ATOMIC_MAX="atomicMax",lL.ATOMIC_MIN="atomicMin",lL.ATOMIC_AND="atomicAnd",lL.ATOMIC_OR="atomicOr",lL.ATOMIC_XOR="atomicXor";const cL=xg(lL),uL=(t,e,n,i)=>{const s=cL(t,e,n,i);return s.append(),s},hL=(t,e,n=null)=>uL(lL.ATOMIC_STORE,t,e,n),dL=(t,e,n=null)=>uL(lL.ATOMIC_ADD,t,e,n),pL=(t,e,n=null)=>uL(lL.ATOMIC_SUB,t,e,n),mL=(t,e,n=null)=>uL(lL.ATOMIC_MAX,t,e,n),fL=(t,e,n=null)=>uL(lL.ATOMIC_MIN,t,e,n),gL=(t,e,n=null)=>uL(lL.ATOMIC_AND,t,e,n),vL=(t,e,n=null)=>uL(lL.ATOMIC_OR,t,e,n),yL=(t,e,n=null)=>uL(lL.ATOMIC_XOR,t,e,n),_L=bg((([t=e()])=>{const e=t.mul(2),n=e.x.floor(),i=e.y.floor();return n.add(i).mod(2).sign()})),xL=bg((([t,e,n])=>{const i=Cg(n).toVar(),s=Cg(e).toVar(),r=Lg(t).toVar();return T_(r,s,i)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),ML=bg((([t,e])=>{const n=Lg(e).toVar(),i=Cg(t).toVar();return T_(n,i.negate(),i)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),bL=bg((([t])=>{const e=Cg(t).toVar();return Rg(Ay(e))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),TL=bg((([t,e])=>{const n=Cg(t).toVar();return e.assign(bL(n)),n.sub(Cg(e))})),SL=tN([bg((([t,e,n,i,s,r])=>{const a=Cg(r).toVar(),o=Cg(s).toVar(),l=Cg(i).toVar(),c=Cg(n).toVar(),u=Cg(e).toVar(),h=Cg(t).toVar(),d=Cg(Wv(1,o)).toVar();return Wv(1,a).mul(h.mul(d).add(u.mul(o))).add(a.mul(c.mul(d).add(l.mul(o))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),bg((([t,e,n,i,s,r])=>{const a=Cg(r).toVar(),o=Cg(s).toVar(),l=zg(i).toVar(),c=zg(n).toVar(),u=zg(e).toVar(),h=zg(t).toVar(),d=Cg(Wv(1,o)).toVar();return Wv(1,a).mul(h.mul(d).add(u.mul(o))).add(a.mul(c.mul(d).add(l.mul(o))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),wL=tN([bg((([t,e,n,i,s,r,a,o,l,c,u])=>{const h=Cg(u).toVar(),d=Cg(c).toVar(),p=Cg(l).toVar(),m=Cg(o).toVar(),f=Cg(a).toVar(),g=Cg(r).toVar(),v=Cg(s).toVar(),y=Cg(i).toVar(),_=Cg(n).toVar(),x=Cg(e).toVar(),M=Cg(t).toVar(),b=Cg(Wv(1,p)).toVar(),T=Cg(Wv(1,d)).toVar();return Cg(Wv(1,h)).toVar().mul(T.mul(M.mul(b).add(x.mul(p))).add(d.mul(_.mul(b).add(y.mul(p))))).add(h.mul(T.mul(v.mul(b).add(g.mul(p))).add(d.mul(f.mul(b).add(m.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),bg((([t,e,n,i,s,r,a,o,l,c,u])=>{const h=Cg(u).toVar(),d=Cg(c).toVar(),p=Cg(l).toVar(),m=zg(o).toVar(),f=zg(a).toVar(),g=zg(r).toVar(),v=zg(s).toVar(),y=zg(i).toVar(),_=zg(n).toVar(),x=zg(e).toVar(),M=zg(t).toVar(),b=Cg(Wv(1,p)).toVar(),T=Cg(Wv(1,d)).toVar();return Cg(Wv(1,h)).toVar().mul(T.mul(M.mul(b).add(x.mul(p))).add(d.mul(_.mul(b).add(y.mul(p))))).add(h.mul(T.mul(v.mul(b).add(g.mul(p))).add(d.mul(f.mul(b).add(m.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),EL=bg((([t,e,n])=>{const i=Cg(n).toVar(),s=Cg(e).toVar(),r=Ig(t).toVar(),a=Ig(r.bitAnd(Ig(7))).toVar(),o=Cg(xL(a.lessThan(Ig(4)),s,i)).toVar(),l=Cg(jv(2,xL(a.lessThan(Ig(4)),i,s))).toVar();return ML(o,Lg(a.bitAnd(Ig(1)))).add(ML(l,Lg(a.bitAnd(Ig(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),AL=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Cg(e).toVar(),o=Ig(t).toVar(),l=Ig(o.bitAnd(Ig(15))).toVar(),c=Cg(xL(l.lessThan(Ig(8)),a,r)).toVar(),u=Cg(xL(l.lessThan(Ig(4)),r,xL(l.equal(Ig(12)).or(l.equal(Ig(14))),a,s))).toVar();return ML(c,Lg(l.bitAnd(Ig(1)))).add(ML(u,Lg(l.bitAnd(Ig(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),NL=tN([EL,AL]),CL=bg((([t,e,n])=>{const i=Cg(n).toVar(),s=Cg(e).toVar(),r=Fg(t).toVar();return zg(NL(r.x,s,i),NL(r.y,s,i),NL(r.z,s,i))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),RL=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Cg(e).toVar(),o=Fg(t).toVar();return zg(NL(o.x,a,r,s),NL(o.y,a,r,s),NL(o.z,a,r,s))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),IL=tN([CL,RL]),LL=bg((([t])=>{const e=Cg(t).toVar();return jv(.6616,e)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),PL=bg((([t])=>{const e=Cg(t).toVar();return jv(.982,e)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),UL=tN([LL,bg((([t])=>{const e=zg(t).toVar();return jv(.6616,e)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),DL=tN([PL,bg((([t])=>{const e=zg(t).toVar();return jv(.982,e)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),OL=bg((([t,e])=>{const n=Rg(e).toVar(),i=Ig(t).toVar();return i.shiftLeft(n).bitOr(i.shiftRight(Rg(32).sub(n)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),zL=bg((([t,e,n])=>{t.subAssign(n),t.bitXorAssign(OL(n,Rg(4))),n.addAssign(e),e.subAssign(t),e.bitXorAssign(OL(t,Rg(6))),t.addAssign(n),n.subAssign(e),n.bitXorAssign(OL(e,Rg(8))),e.addAssign(t),t.subAssign(n),t.bitXorAssign(OL(n,Rg(16))),n.addAssign(e),e.subAssign(t),e.bitXorAssign(OL(t,Rg(19))),t.addAssign(n),n.subAssign(e),n.bitXorAssign(OL(e,Rg(4))),e.addAssign(t)})),VL=bg((([t,e,n])=>{const i=Ig(n).toVar(),s=Ig(e).toVar(),r=Ig(t).toVar();return i.bitXorAssign(s),i.subAssign(OL(s,Rg(14))),r.bitXorAssign(i),r.subAssign(OL(i,Rg(11))),s.bitXorAssign(r),s.subAssign(OL(r,Rg(25))),i.bitXorAssign(s),i.subAssign(OL(s,Rg(16))),r.bitXorAssign(i),r.subAssign(OL(i,Rg(4))),s.bitXorAssign(r),s.subAssign(OL(r,Rg(14))),i.bitXorAssign(s),i.subAssign(OL(s,Rg(24))),i})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),FL=bg((([t])=>{const e=Ig(t).toVar();return Cg(e).div(Cg(Ig(Rg(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),BL=bg((([t])=>{const e=Cg(t).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),kL=tN([bg((([t])=>{const e=Rg(t).toVar(),n=Ig(Ig(1)).toVar(),i=Ig(Ig(Rg(3735928559)).add(n.shiftLeft(Ig(2))).add(Ig(13))).toVar();return VL(i.add(Ig(e)),i,i)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),bg((([t,e])=>{const n=Rg(e).toVar(),i=Rg(t).toVar(),s=Ig(Ig(2)).toVar(),r=Ig().toVar(),a=Ig().toVar(),o=Ig().toVar();return r.assign(a.assign(o.assign(Ig(Rg(3735928559)).add(s.shiftLeft(Ig(2))).add(Ig(13))))),r.addAssign(Ig(i)),a.addAssign(Ig(n)),VL(r,a,o)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Rg(e).toVar(),r=Rg(t).toVar(),a=Ig(Ig(3)).toVar(),o=Ig().toVar(),l=Ig().toVar(),c=Ig().toVar();return o.assign(l.assign(c.assign(Ig(Rg(3735928559)).add(a.shiftLeft(Ig(2))).add(Ig(13))))),o.addAssign(Ig(r)),l.addAssign(Ig(s)),c.addAssign(Ig(i)),VL(o,l,c)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),bg((([t,e,n,i])=>{const s=Rg(i).toVar(),r=Rg(n).toVar(),a=Rg(e).toVar(),o=Rg(t).toVar(),l=Ig(Ig(4)).toVar(),c=Ig().toVar(),u=Ig().toVar(),h=Ig().toVar();return c.assign(u.assign(h.assign(Ig(Rg(3735928559)).add(l.shiftLeft(Ig(2))).add(Ig(13))))),c.addAssign(Ig(o)),u.addAssign(Ig(a)),h.addAssign(Ig(r)),zL(c,u,h),c.addAssign(Ig(s)),VL(c,u,h)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),bg((([t,e,n,i,s])=>{const r=Rg(s).toVar(),a=Rg(i).toVar(),o=Rg(n).toVar(),l=Rg(e).toVar(),c=Rg(t).toVar(),u=Ig(Ig(5)).toVar(),h=Ig().toVar(),d=Ig().toVar(),p=Ig().toVar();return h.assign(d.assign(p.assign(Ig(Rg(3735928559)).add(u.shiftLeft(Ig(2))).add(Ig(13))))),h.addAssign(Ig(c)),d.addAssign(Ig(l)),p.addAssign(Ig(o)),zL(h,d,p),h.addAssign(Ig(a)),d.addAssign(Ig(r)),VL(h,d,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),HL=tN([bg((([t,e])=>{const n=Rg(e).toVar(),i=Rg(t).toVar(),s=Ig(kL(i,n)).toVar(),r=Fg().toVar();return r.x.assign(s.bitAnd(Rg(255))),r.y.assign(s.shiftRight(Rg(8)).bitAnd(Rg(255))),r.z.assign(s.shiftRight(Rg(16)).bitAnd(Rg(255))),r})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Rg(e).toVar(),r=Rg(t).toVar(),a=Ig(kL(r,s,i)).toVar(),o=Fg().toVar();return o.x.assign(a.bitAnd(Rg(255))),o.y.assign(a.shiftRight(Rg(8)).bitAnd(Rg(255))),o.z.assign(a.shiftRight(Rg(16)).bitAnd(Rg(255))),o})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),GL=tN([bg((([t])=>{const e=Pg(t).toVar(),n=Rg().toVar(),i=Rg().toVar(),s=Cg(TL(e.x,n)).toVar(),r=Cg(TL(e.y,i)).toVar(),a=Cg(BL(s)).toVar(),o=Cg(BL(r)).toVar(),l=Cg(SL(NL(kL(n,i),s,r),NL(kL(n.add(Rg(1)),i),s.sub(1),r),NL(kL(n,i.add(Rg(1))),s,r.sub(1)),NL(kL(n.add(Rg(1)),i.add(Rg(1))),s.sub(1),r.sub(1)),a,o)).toVar();return UL(l)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),bg((([t])=>{const e=zg(t).toVar(),n=Rg().toVar(),i=Rg().toVar(),s=Rg().toVar(),r=Cg(TL(e.x,n)).toVar(),a=Cg(TL(e.y,i)).toVar(),o=Cg(TL(e.z,s)).toVar(),l=Cg(BL(r)).toVar(),c=Cg(BL(a)).toVar(),u=Cg(BL(o)).toVar(),h=Cg(wL(NL(kL(n,i,s),r,a,o),NL(kL(n.add(Rg(1)),i,s),r.sub(1),a,o),NL(kL(n,i.add(Rg(1)),s),r,a.sub(1),o),NL(kL(n.add(Rg(1)),i.add(Rg(1)),s),r.sub(1),a.sub(1),o),NL(kL(n,i,s.add(Rg(1))),r,a,o.sub(1)),NL(kL(n.add(Rg(1)),i,s.add(Rg(1))),r.sub(1),a,o.sub(1)),NL(kL(n,i.add(Rg(1)),s.add(Rg(1))),r,a.sub(1),o.sub(1)),NL(kL(n.add(Rg(1)),i.add(Rg(1)),s.add(Rg(1))),r.sub(1),a.sub(1),o.sub(1)),l,c,u)).toVar();return DL(h)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),WL=tN([bg((([t])=>{const e=Pg(t).toVar(),n=Rg().toVar(),i=Rg().toVar(),s=Cg(TL(e.x,n)).toVar(),r=Cg(TL(e.y,i)).toVar(),a=Cg(BL(s)).toVar(),o=Cg(BL(r)).toVar(),l=zg(SL(IL(HL(n,i),s,r),IL(HL(n.add(Rg(1)),i),s.sub(1),r),IL(HL(n,i.add(Rg(1))),s,r.sub(1)),IL(HL(n.add(Rg(1)),i.add(Rg(1))),s.sub(1),r.sub(1)),a,o)).toVar();return UL(l)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),bg((([t])=>{const e=zg(t).toVar(),n=Rg().toVar(),i=Rg().toVar(),s=Rg().toVar(),r=Cg(TL(e.x,n)).toVar(),a=Cg(TL(e.y,i)).toVar(),o=Cg(TL(e.z,s)).toVar(),l=Cg(BL(r)).toVar(),c=Cg(BL(a)).toVar(),u=Cg(BL(o)).toVar(),h=zg(wL(IL(HL(n,i,s),r,a,o),IL(HL(n.add(Rg(1)),i,s),r.sub(1),a,o),IL(HL(n,i.add(Rg(1)),s),r,a.sub(1),o),IL(HL(n.add(Rg(1)),i.add(Rg(1)),s),r.sub(1),a.sub(1),o),IL(HL(n,i,s.add(Rg(1))),r,a,o.sub(1)),IL(HL(n.add(Rg(1)),i,s.add(Rg(1))),r.sub(1),a,o.sub(1)),IL(HL(n,i.add(Rg(1)),s.add(Rg(1))),r,a.sub(1),o.sub(1)),IL(HL(n.add(Rg(1)),i.add(Rg(1)),s.add(Rg(1))),r.sub(1),a.sub(1),o.sub(1)),l,c,u)).toVar();return DL(h)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),jL=tN([bg((([t])=>{const e=Cg(t).toVar(),n=Rg(bL(e)).toVar();return FL(kL(n))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),bg((([t])=>{const e=Pg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar();return FL(kL(n,i))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),bg((([t])=>{const e=zg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar(),s=Rg(bL(e.z)).toVar();return FL(kL(n,i,s))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),bg((([t])=>{const e=kg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar(),s=Rg(bL(e.z)).toVar(),r=Rg(bL(e.w)).toVar();return FL(kL(n,i,s,r))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),XL=tN([bg((([t])=>{const e=Cg(t).toVar(),n=Rg(bL(e)).toVar();return zg(FL(kL(n,Rg(0))),FL(kL(n,Rg(1))),FL(kL(n,Rg(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),bg((([t])=>{const e=Pg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar();return zg(FL(kL(n,i,Rg(0))),FL(kL(n,i,Rg(1))),FL(kL(n,i,Rg(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),bg((([t])=>{const e=zg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar(),s=Rg(bL(e.z)).toVar();return zg(FL(kL(n,i,s,Rg(0))),FL(kL(n,i,s,Rg(1))),FL(kL(n,i,s,Rg(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),bg((([t])=>{const e=kg(t).toVar(),n=Rg(bL(e.x)).toVar(),i=Rg(bL(e.y)).toVar(),s=Rg(bL(e.z)).toVar(),r=Rg(bL(e.w)).toVar();return zg(FL(kL(n,i,s,r,Rg(0))),FL(kL(n,i,s,r,Rg(1))),FL(kL(n,i,s,r,Rg(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),qL=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Rg(e).toVar(),o=zg(t).toVar(),l=Cg(0).toVar(),c=Cg(1).toVar();return hT(a,(()=>{l.addAssign(c.mul(GL(o))),c.mulAssign(s),o.mulAssign(r)})),l})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),YL=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Rg(e).toVar(),o=zg(t).toVar(),l=zg(0).toVar(),c=Cg(1).toVar();return hT(a,(()=>{l.addAssign(c.mul(WL(o))),c.mulAssign(s),o.mulAssign(r)})),l})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),ZL=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Rg(e).toVar(),o=zg(t).toVar();return Pg(qL(o,a,r,s),qL(o.add(zg(Rg(19),Rg(193),Rg(17))),a,r,s))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),$L=bg((([t,e,n,i])=>{const s=Cg(i).toVar(),r=Cg(n).toVar(),a=Rg(e).toVar(),o=zg(t).toVar(),l=zg(YL(o,a,r,s)).toVar(),c=Cg(qL(o.add(zg(Rg(19),Rg(193),Rg(17))),a,r,s)).toVar();return kg(l,c)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),JL=bg((([t,e,n,i,s,r,a])=>{const o=Rg(a).toVar(),l=Cg(r).toVar(),c=Rg(s).toVar(),u=Rg(i).toVar(),h=Rg(n).toVar(),d=Rg(e).toVar(),p=Pg(t).toVar(),m=zg(XL(Pg(d.add(u),h.add(c)))).toVar(),f=Pg(m.x,m.y).toVar();f.subAssign(.5),f.mulAssign(l),f.addAssign(.5);const g=Pg(Pg(Cg(d),Cg(h)).add(f)).toVar(),v=Pg(g.sub(p)).toVar();return Eg(o.equal(Rg(2)),(()=>zy(v.x).add(zy(v.y)))),Eg(o.equal(Rg(3)),(()=>Ky(zy(v.x),zy(v.y)))),s_(v,v)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),KL=tN([JL,bg((([t,e,n,i,s,r,a,o,l])=>{const c=Rg(l).toVar(),u=Cg(o).toVar(),h=Rg(a).toVar(),d=Rg(r).toVar(),p=Rg(s).toVar(),m=Rg(i).toVar(),f=Rg(n).toVar(),g=Rg(e).toVar(),v=zg(t).toVar(),y=zg(XL(zg(g.add(p),f.add(d),m.add(h)))).toVar();y.subAssign(.5),y.mulAssign(u),y.addAssign(.5);const _=zg(zg(Cg(g),Cg(f),Cg(m)).add(y)).toVar(),x=zg(_.sub(v)).toVar();return Eg(c.equal(Rg(2)),(()=>zy(x.x).add(zy(x.y)).add(zy(x.z)))),Eg(c.equal(Rg(3)),(()=>Ky(Ky(zy(x.x),zy(x.y)),zy(x.z)))),s_(x,x)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),QL=bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=Pg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Pg(TL(r.x,a),TL(r.y,o)).toVar(),c=Cg(1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{const n=Cg(KL(l,t,e,a,o,s,i)).toVar();c.assign(Jy(c,n))}))})),Eg(i.equal(Rg(0)),(()=>{c.assign(wy(c))})),c})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),tP=bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=Pg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Pg(TL(r.x,a),TL(r.y,o)).toVar(),c=Pg(1e6,1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{const n=Cg(KL(l,t,e,a,o,s,i)).toVar();Eg(n.lessThan(c.x),(()=>{c.y.assign(c.x),c.x.assign(n)})).ElseIf(n.lessThan(c.y),(()=>{c.y.assign(n)}))}))})),Eg(i.equal(Rg(0)),(()=>{c.assign(wy(c))})),c})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),eP=bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=Pg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Pg(TL(r.x,a),TL(r.y,o)).toVar(),c=zg(1e6,1e6,1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{const n=Cg(KL(l,t,e,a,o,s,i)).toVar();Eg(n.lessThan(c.x),(()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(n)})).ElseIf(n.lessThan(c.y),(()=>{c.z.assign(c.y),c.y.assign(n)})).ElseIf(n.lessThan(c.z),(()=>{c.z.assign(n)}))}))})),Eg(i.equal(Rg(0)),(()=>{c.assign(wy(c))})),c})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),nP=tN([QL,bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=zg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Rg().toVar(),c=zg(TL(r.x,a),TL(r.y,o),TL(r.z,l)).toVar(),u=Cg(1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{hT({start:-1,end:Rg(1),name:"z",condition:"<="},(({z:n})=>{const r=Cg(KL(c,t,e,n,a,o,l,s,i)).toVar();u.assign(Jy(u,r))}))}))})),Eg(i.equal(Rg(0)),(()=>{u.assign(wy(u))})),u})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),iP=tN([tP,bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=zg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Rg().toVar(),c=zg(TL(r.x,a),TL(r.y,o),TL(r.z,l)).toVar(),u=Pg(1e6,1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{hT({start:-1,end:Rg(1),name:"z",condition:"<="},(({z:n})=>{const r=Cg(KL(c,t,e,n,a,o,l,s,i)).toVar();Eg(r.lessThan(u.x),(()=>{u.y.assign(u.x),u.x.assign(r)})).ElseIf(r.lessThan(u.y),(()=>{u.y.assign(r)}))}))}))})),Eg(i.equal(Rg(0)),(()=>{u.assign(wy(u))})),u})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),sP=tN([eP,bg((([t,e,n])=>{const i=Rg(n).toVar(),s=Cg(e).toVar(),r=zg(t).toVar(),a=Rg().toVar(),o=Rg().toVar(),l=Rg().toVar(),c=zg(TL(r.x,a),TL(r.y,o),TL(r.z,l)).toVar(),u=zg(1e6,1e6,1e6).toVar();return hT({start:-1,end:Rg(1),name:"x",condition:"<="},(({x:t})=>{hT({start:-1,end:Rg(1),name:"y",condition:"<="},(({y:e})=>{hT({start:-1,end:Rg(1),name:"z",condition:"<="},(({z:n})=>{const r=Cg(KL(c,t,e,n,a,o,l,s,i)).toVar();Eg(r.lessThan(u.x),(()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(r)})).ElseIf(r.lessThan(u.y),(()=>{u.z.assign(u.y),u.y.assign(r)})).ElseIf(r.lessThan(u.z),(()=>{u.z.assign(r)}))}))}))})),Eg(i.equal(Rg(0)),(()=>{u.assign(wy(u))})),u})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),rP=bg((([t])=>{const e=t.y,n=t.z,i=zg().toVar();return Eg(e.lessThan(1e-4),(()=>{i.assign(zg(n,n,n))})).Else((()=>{let s=t.x;s=s.sub(Ay(s)).mul(6).toVar();const r=Rg(Xy(s)),a=s.sub(Cg(r)),o=n.mul(e.oneMinus()),l=n.mul(e.mul(a).oneMinus()),c=n.mul(e.mul(a.oneMinus()).oneMinus());Eg(r.equal(Rg(0)),(()=>{i.assign(zg(n,c,o))})).ElseIf(r.equal(Rg(1)),(()=>{i.assign(zg(l,n,o))})).ElseIf(r.equal(Rg(2)),(()=>{i.assign(zg(o,n,c))})).ElseIf(r.equal(Rg(3)),(()=>{i.assign(zg(o,l,n))})).ElseIf(r.equal(Rg(4)),(()=>{i.assign(zg(c,o,n))})).Else((()=>{i.assign(zg(n,o,l))}))})),i})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),aP=bg((([t])=>{const e=zg(t).toVar(),n=Cg(e.x).toVar(),i=Cg(e.y).toVar(),s=Cg(e.z).toVar(),r=Cg(Jy(n,Jy(i,s))).toVar(),a=Cg(Ky(n,Ky(i,s))).toVar(),o=Cg(a.sub(r)).toVar(),l=Cg().toVar(),c=Cg().toVar(),u=Cg().toVar();return u.assign(a),Eg(a.greaterThan(0),(()=>{c.assign(o.div(a))})).Else((()=>{c.assign(0)})),Eg(c.lessThanEqual(0),(()=>{l.assign(0)})).Else((()=>{Eg(n.greaterThanEqual(a),(()=>{l.assign(i.sub(s).div(o))})).ElseIf(i.greaterThanEqual(a),(()=>{l.assign(Gv(2,s.sub(n).div(o)))})).Else((()=>{l.assign(Gv(4,n.sub(i).div(o)))})),l.mulAssign(1/6),Eg(l.lessThan(0),(()=>{l.addAssign(1)}))})),zg(l,c,u)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),oP=bg((([t])=>{const e=zg(t).toVar(),n=Bg(Jv(e,zg(.04045))).toVar(),i=zg(e.div(12.92)).toVar(),s=zg(a_(Ky(e.add(zg(.055)),zg(0)).div(1.055),zg(2.4))).toVar();return p_(i,s,n)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),lP=(t,e)=>{t=Cg(t),e=Cg(e);const n=Pg(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return v_(t.sub(n),t.add(n),e)},cP=(t,e,n,i)=>p_(t,e,n[i].clamp()),uP=(t,e,n=vx())=>cP(t,e,n,"x"),hP=(t,e,n=vx())=>cP(t,e,n,"y"),dP=(t,e,n,i,s)=>p_(t,e,lP(n,i[s])),pP=(t,e,n,i=vx())=>dP(t,e,n,i,"x"),mP=(t,e,n,i=vx())=>dP(t,e,n,i,"y"),fP=(t=1,e=0,n=vx())=>n.mul(t).add(e),gP=(t,e=1)=>(t=Cg(t)).abs().pow(e).mul(t.sign()),vP=(t,e=1,n=.5)=>Cg(t).sub(n).mul(e).add(n),yP=(t=vx(),e=1,n=0)=>GL(t.convert("vec2|vec3")).mul(e).add(n),_P=(t=vx(),e=1,n=0)=>WL(t.convert("vec2|vec3")).mul(e).add(n),xP=(t=vx(),e=1,n=0)=>{t=t.convert("vec2|vec3");return kg(WL(t),GL(t.add(Pg(19,73)))).mul(e).add(n)},MP=(t=vx(),e=1)=>nP(t.convert("vec2|vec3"),e,Rg(1)),bP=(t=vx(),e=1)=>iP(t.convert("vec2|vec3"),e,Rg(1)),TP=(t=vx(),e=1)=>sP(t.convert("vec2|vec3"),e,Rg(1)),SP=(t=vx())=>jL(t.convert("vec2|vec3")),wP=(t=vx(),e=3,n=2,i=.5,s=1)=>qL(t,Rg(e),n,i).mul(s),EP=(t=vx(),e=3,n=2,i=.5,s=1)=>ZL(t,Rg(e),n,i).mul(s),AP=(t=vx(),e=3,n=2,i=.5,s=1)=>YL(t,Rg(e),n,i).mul(s),NP=(t=vx(),e=3,n=2,i=.5,s=1)=>$L(t,Rg(e),n,i).mul(s),CP=bg((([t,e])=>{const n=t.x,i=t.y,s=t.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(1.023328).mul(i)),r=r.add(e.element(2).mul(1.023328).mul(s)),r=r.add(e.element(3).mul(1.023328).mul(n)),r=r.add(e.element(4).mul(.858086).mul(n).mul(i)),r=r.add(e.element(5).mul(.858086).mul(i).mul(s)),r=r.add(e.element(6).mul(s.mul(s).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(.858086).mul(n).mul(s)),r=r.add(e.element(8).mul(.429043).mul(jv(n,n).sub(jv(i,i)))),r}));class RP extends rI{static get type(){return"PointLightNode"}constructor(t=null){super(t),this.cutoffDistanceNode=av(0).setGroup(iv),this.decayExponentNode=av(0).setGroup(iv)}update(t){const{light:e}=this;super.update(t),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}setup(t){const{colorNode:e,cutoffDistanceNode:n,decayExponentNode:i,light:s}=this,r=t.context.lightingModel,a=hI(s).sub(iM),o=a.normalize(),l=a.length(),c=aI({lightDistance:l,cutoffDistance:n,decayExponent:i}),u=e.mul(c),h=t.context.reflectedLight;r.direct({lightDirection:o,lightColor:u,reflectedLight:h},t.stack,t)}}class IP extends rI{static get type(){return"DirectionalLightNode"}constructor(t=null){super(t)}setup(t){super.setup(t);const e=t.context.lightingModel,n=this.colorNode,i=dI(this.light),s=t.context.reflectedLight;e.direct({lightDirection:i,lightColor:n,reflectedLight:s},t.stack,t)}}const LP=new ls,PP=new ls;let UP=null;class DP extends rI{static get type(){return"RectAreaLightNode"}constructor(t=null){super(t),this.halfHeight=av(new Li).setGroup(iv),this.halfWidth=av(new Li).setGroup(iv)}update(t){super.update(t);const{light:e}=this,n=t.camera.matrixWorldInverse;PP.identity(),LP.copy(e.matrixWorld),LP.premultiply(n),PP.extractRotation(LP),this.halfWidth.value.set(.5*e.width,0,0),this.halfHeight.value.set(0,.5*e.height,0),this.halfWidth.value.applyMatrix4(PP),this.halfHeight.value.applyMatrix4(PP)}setup(t){let e,n;super.setup(t),t.isAvailable("float32Filterable")?(e=Tx(UP.LTC_FLOAT_1),n=Tx(UP.LTC_FLOAT_2)):(e=Tx(UP.LTC_HALF_1),n=Tx(UP.LTC_HALF_2));const{colorNode:i,light:s}=this,r=t.context.lightingModel,a=hI(s),o=t.context.reflectedLight;r.directRectArea({lightColor:i,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:o,ltc_1:e,ltc_2:n},t.stack,t)}static setLTC(t){UP=t}}class OP extends rI{static get type(){return"SpotLightNode"}constructor(t=null){super(t),this.coneCosNode=av(0).setGroup(iv),this.penumbraCosNode=av(0).setGroup(iv),this.cutoffDistanceNode=av(0).setGroup(iv),this.decayExponentNode=av(0).setGroup(iv)}update(t){super.update(t);const{light:e}=this;this.coneCosNode.value=Math.cos(e.angle),this.penumbraCosNode.value=Math.cos(e.angle*(1-e.penumbra)),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}getSpotAttenuation(t){const{coneCosNode:e,penumbraCosNode:n}=this;return v_(e,n,t)}setup(t){super.setup(t);const e=t.context.lightingModel,{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:r}=this,a=hI(r).sub(iM),o=a.normalize(),l=o.dot(dI(r)),c=this.getSpotAttenuation(l),u=a.length(),h=aI({lightDistance:u,cutoffDistance:i,decayExponent:s}),d=n.mul(c).mul(h),p=t.context.reflectedLight;e.direct({lightDirection:o,lightColor:d,reflectedLight:p},t.stack,t)}}class zP extends OP{static get type(){return"IESSpotLightNode"}getSpotAttenuation(t){const e=this.light.iesMap;let n=null;if(e&&!0===e.isTexture){const i=t.acos().mul(1/Math.PI);n=Tx(e,Pg(i,0),0).r}else n=super.getSpotAttenuation(t);return n}}class VP extends rI{static get type(){return"AmbientLightNode"}constructor(t=null){super(t)}setup({context:t}){t.irradiance.addAssign(this.colorNode)}}class FP extends rI{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=cI(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=av(new tr).setGroup(iv)}update(t){const{light:e}=this;super.update(t),this.lightPositionNode.object3d=e,this.groundColorNode.value.copy(e.groundColor).multiplyScalar(e.intensity)}setup(t){const{colorNode:e,groundColorNode:n,lightDirectionNode:i}=this,s=hM.dot(i).mul(.5).add(.5),r=p_(n,e,s);t.context.irradiance.addAssign(r)}}class BP extends rI{static get type(){return"LightProbeNode"}constructor(t=null){super(t);const e=[];for(let t=0;t<9;t++)e.push(new Li);this.lightProbe=CM(e)}update(t){const{light:e}=this;super.update(t);for(let t=0;t<9;t++)this.lightProbe.array[t].copy(e.sh.coefficients[t]).multiplyScalar(e.intensity)}setup(t){const e=CP(dM,this.lightProbe);t.context.irradiance.addAssign(e)}}class kP{parseFunction(){console.warn("Abstract function.")}}class HP{constructor(t,e,n="",i=""){this.type=t,this.inputs=e,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}}HP.isNodeFunction=!0;const GP=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,WP=/[a-z_0-9]+/gi,jP="#pragma main";class XP extends HP{constructor(t){const{type:e,inputs:n,name:i,precision:s,inputsCode:r,blockCode:a,headerCode:o}=(t=>{const e=(t=t.trim()).indexOf(jP),n=-1!==e?t.slice(e+12):t,i=n.match(GP);if(null!==i&&5===i.length){const s=i[4],r=[];let a=null;for(;null!==(a=WP.exec(s));)r.push(a);const o=[];let l=0;for(;l<r.length;){const t="const"===r[l][0];!0===t&&l++;let e=r[l][0];"in"===e||"out"===e||"inout"===e?l++:e="";const n=r[l++][0];let i=Number.parseInt(r[l][0]);!1===Number.isNaN(i)?l++:i=null;const s=r[l++][0];o.push(new jA(n,s,i,e,t))}const c=n.substring(i[0].length),u=void 0!==i[3]?i[3]:"";return{type:i[2],inputs:o,name:u,precision:void 0!==i[1]?i[1]:"",inputsCode:s,blockCode:c,headerCode:-1!==e?t.slice(0,e):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(t);super(e,n,i,s),this.inputsCode=r,this.blockCode=a,this.headerCode=o}getCode(t=this.name){let e;const n=this.blockCode;if(""!==n){const{type:i,inputsCode:s,headerCode:r,precision:a}=this;let o=`${i} ${t} ( ${s.trim()} )`;""!==a&&(o=`${a} ${o}`),e=r+o+n}else e="";return e}}class qP extends kP{parseFunction(t){return new XP(t)}}class YP{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map,this.colorSpaceNodes=new Map}fromMaterial(t){if(t.isNodeMaterial)return t;let e=null;const n=this.getMaterialNodeClass(t.type);if(null!==n){e=new n;for(const n in t)e[n]=t[n]}return e}addColorSpace(t,e){this.addType(t,e,this.colorSpaceNodes)}getColorSpaceFunction(t){return this.colorSpaceNodes.get(t)||null}addToneMapping(t,e){this.addType(t,e,this.toneMappingNodes)}getToneMappingFunction(t){return this.toneMappingNodes.get(t)||null}getMaterialNodeClass(t){return this.materialNodes.get(t)||null}addMaterial(t,e){this.addType(t,e.name,this.materialNodes)}getLightNodeClass(t){return this.lightNodes.get(t)||null}addLight(t,e){this.addClass(t,e,this.lightNodes)}addType(t,e,n){if(n.has(e))console.warn(`Redefinition of node ${e}`);else{if("function"!=typeof t)throw new Error(`Node class ${t.name} is not a class.`);if("function"==typeof e||"object"==typeof e)throw new Error(`Base class ${e} is not a class.`);n.set(e,t)}}addClass(t,e,n){if(n.has(e))console.warn(`Redefinition of node ${e.name}`);else{if("function"!=typeof t)throw new Error(`Node class ${t.name} is not a class.`);if("function"!=typeof e)throw new Error(`Base class ${e.name} is not a class.`);n.set(e,t)}}}class ZP extends dp{constructor(t,e,n,i,s,r){super(t,e,n,i,s,r),this.iesMap=null}copy(t,e){return super.copy(t,e),this.iesMap=t.iesMap,this}}class $P extends YP{constructor(){super(),this.addLight(RP,vp),this.addLight(IP,_p),this.addLight(DP,Mp),this.addLight(OP,dp),this.addLight(VP,xp),this.addLight(FP,ap),this.addLight(BP,Tp),this.addLight(zP,ZP),this.addToneMapping(FI,K),this.addToneMapping(BI,Q),this.addToneMapping(kI,tt),this.addToneMapping(GI,et),this.addToneMapping(qI,it),this.addToneMapping(YI,st),this.addColorSpace(VI,D_(Je,$e)),this.addColorSpace(zI,D_($e,Je))}}if("undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window){try{import.meta&&(window.__THREE__IMPORTS__||(window.__THREE__IMPORTS__=[]),window.__THREE__IMPORTS__.push({url:import.meta.url,revision:t}))}catch{}window.__THREE__?(console.warn("WARNING: Multiple instances of Three.js being imported. Existing: "+window.__THREE__+", new: "+t),console.warn(window.__THREE__IMPORTS__)):window.__THREE__=t}export{et as ACESFilmicToneMapping,wT as AONode,x as AddEquation,$ as AddOperation,Fe as AdditiveAnimationBlendMode,g as AdditiveBlending,wC as AfterImageNode,it as AgXToneMapping,Vt as AlphaFormat,Nn as AlwaysCompare,k as AlwaysDepth,xn as AlwaysStencilFunc,xp as AmbientLight,VP as AmbientLightNode,AR as AnaglyphPassNode,rI as AnalyticLightNode,DC as AnamorphicNode,cm as AnimationAction,Wd as AnimationClip,Qd as AnimationLoader,hm as AnimationMixer,lm as AnimationObjectGroup,Id as AnimationUtils,Zu as ArcCurve,Zl as ArrayCamera,Lf as ArrayElementNode,rf as ArrowHelper,Vv as AssignNode,rt as AttachedBindMode,fx as AttributeNode,qp as Audio,Qp as AudioAnalyser,Up as AudioContext,Xp as AudioListener,Dp as AudioLoader,af as AxesHelper,YS as BRDF_GGX,PS as BRDF_Lambert,d as BackSide,Ge as BasicDepthPacking,ES as BasicEnvironmentNode,$P as BasicNodeLibrary,o as BasicShadowMap,sT as BatchNode,_u as BatchedMesh,uR as BloomNode,kc as Bone,zd as BooleanKeyframeTrack,wm as Box2,Di as Box3,Qm as Box3Helper,Gr as BoxGeometry,Km as BoxHelper,pT as Break,dr as BufferAttribute,Y_ as BufferAttributeNode,Cr as BufferGeometry,Ap as BufferGeometryLoader,wM as BufferNode,rb as BumpMapNode,ix as BypassNode,At as ByteType,Xd as Cache,ex as CacheNode,Zr as Camera,Zm as CameraHelper,Xu as CanvasTexture,gh as CapsuleGeometry,eh as CatmullRomCurve3,tt as CineonToneMapping,vh as CircleGeometry,mt as ClampToEdgeWrapping,Bp as Clock,WE as CodeNode,tr as Color,Vd as ColorKeyframeTrack,mi as ColorManagement,O_ as ColorSpaceNode,Wu as CompressedArrayTexture,ju as CompressedCubeTexture,Gu as CompressedTexture,tp as CompressedTextureLoader,Q_ as ComputeNode,_h as ConeGeometry,kf as ConstNode,V as ConstantAlphaFactor,O as ConstantColorFactor,w_ as ContextNode,dT as Continue,lf as Controls,Pf as ConvertNode,ea as CubeCamera,lt as CubeReflectionMapping,ct as CubeRefractionMapping,na as CubeTexture,np as CubeTextureLoader,TM as CubeTextureNode,dt as CubeUVReflectionMapping,rh as CubicBezierCurve,ah as CubicBezierCurve3,Pd as CubicInterpolant,s as CullFaceBack,r as CullFaceFront,a as CullFaceFrontBack,i as CullFaceNone,qu as Curve,ph as CurvePath,_ as CustomBlending,nt as CustomToneMapping,yh as CylinderGeometry,bm as Cylindrical,ZS as DFGApprox,jS as D_GGX,Ci as Data3DTexture,Ai as DataArrayTexture,Hc as DataTexture,ip as DataTextureLoader,cr as DataUtils,cn as DecrementStencilOp,hn as DecrementWrapStencilOp,Yd as DefaultLoadingManager,tR as DenoiseNode,Gt as DepthFormat,FC as DepthOfFieldNode,Wt as DepthStencilFormat,Ka as DepthTexture,at as DetachedBindMode,_p as DirectionalLight,Xm as DirectionalLightHelper,IP as DirectionalLightNode,ux as Discard,Dd as DiscreteInterpolant,Ke as DisplayP3ColorSpace,Mh as DodecahedronGeometry,kC as DotScreenNode,p as DoubleSide,I as DstAlphaFactor,P as DstColorFactor,On as DynamicCopyUsage,Rn as DynamicDrawUsage,Pn as DynamicReadUsage,dy as EPSILON,Eh as EdgesGeometry,Yu as EllipseCurve,nE as EnvironmentNode,Tn as EqualCompare,W as EqualDepth,fn as EqualStencilFunc,yS as EquirectUVNode,ut as EquirectangularReflectionMapping,ht as EquirectangularRefractionMapping,ys as Euler,Hn as EventDispatcher,lx as ExpressionNode,nd as ExtrudeGeometry,nR as FXAANode,LS as F_Schlick,Kd as FileLoader,jC as FilmNode,xr as Float16BufferAttribute,Mr as Float32BufferAttribute,Lt as FloatType,bg as Fn,oc as Fog,ac as FogExp2,WR as FogExp2Node,BR as FogNode,HR as FogRangeNode,Hu as FramebufferTexture,rM as FrontFacingNode,h as FrontSide,ua as Frustum,Bv as FunctionCallNode,ZE as FunctionNode,KA as FunctionOverloadingNode,gm as GLBufferAttribute,Vn as GLSL1,Fn as GLSL3,qP as GLSLNodeParser,KC as GTAONode,MC as GaussianBlurNode,wn as GreaterCompare,X as GreaterDepth,An as GreaterEqualCompare,j as GreaterEqualDepth,_n as GreaterEqualStencilFunc,vn as GreaterStencilFunc,km as GridHelper,$l as Group,Pt as HalfFloatType,ap as HemisphereLight,Bm as HemisphereLightHelper,FP as HemisphereLightNode,zP as IESSpotLightNode,py as INFINITY,sd as IcosahedronGeometry,Eg as If,Lp as ImageBitmapLoader,ep as ImageLoader,yi as ImageUtils,ln as IncrementStencilOp,un as IncrementWrapStencilOp,Zb as IndexNode,nT as InstanceNode,Xc as InstancedBufferAttribute,Ep as InstancedBufferGeometry,fm as InstancedInterleavedBuffer,tu as InstancedMesh,oS as InstancedPointsNodeMaterial,gr as Int16BufferAttribute,yr as Int32BufferAttribute,pr as Int8BufferAttribute,Rt as IntType,cc as InterleavedBuffer,hc as InterleavedBufferAttribute,Ld as Interpolant,Le as InterpolateDiscrete,Pe as InterpolateLinear,Ue as InterpolateSmooth,dn as InvertStencilOp,NT as IrradianceNode,Df as JoinNode,an as KeepStencilOp,Od as KeyframeTrack,Rc as LOD,fh as LatheGeometry,_s as Layers,bn as LessCompare,H as LessDepth,Sn as LessEqualCompare,G as LessEqualDepth,gn as LessEqualStencilFunc,mn as LessStencilFunc,rp as Light,Tp as LightProbe,BP as LightProbeNode,ET as LightingContextNode,NS as LightingModel,ST as LightingNode,bT as LightsNode,Nu as Line,pS as Line2NodeMaterial,Nm as Line3,xu as LineBasicMaterial,cS as LineBasicNodeMaterial,oh as LineCurve,lh as LineCurve3,wd as LineDashedMaterial,hS as LineDashedNodeMaterial,Pu as LineLoop,Lu as LineSegments,Qe as LinearDisplayP3ColorSpace,Mt as LinearFilter,Ud as LinearInterpolant,wt as LinearMipMapLinearFilter,Tt as LinearMipMapNearestFilter,St as LinearMipmapLinearFilter,bt as LinearMipmapNearestFilter,Je as LinearSRGBColorSpace,K as LinearToneMapping,tn as LinearTransfer,Zd as Loader,wp as LoaderUtils,qd as LoadingManager,hT as Loop,uT as LoopNode,Ce as LoopOnce,Ie as LoopPingPong,Re as LoopRepeat,Ht as LuminanceAlphaFormat,kt as LuminanceFormat,qC as Lut3DNode,e as MOUSE,$A as MRTNode,fE as MatcapUVNode,ir as Material,Sp as MaterialLoader,lb as MaterialNode,DM as MaterialReferenceNode,Qn as MathUtils,Tm as Matrix2,ei as Matrix3,ls as Matrix4,S as MaxEquation,xx as MaxMipLevelNode,kr as Mesh,sr as MeshBasicMaterial,IS as MeshBasicNodeMaterial,Bl as MeshDepthMaterial,kl as MeshDistanceMaterial,Td as MeshLambertMaterial,VS as MeshLambertNodeMaterial,Sd as MeshMatcapMaterial,yE as MeshMatcapNodeMaterial,bd as MeshNormalMaterial,vS as MeshNormalNodeMaterial,xd as MeshPhongMaterial,BS as MeshPhongNodeMaterial,_d as MeshPhysicalMaterial,lE as MeshPhysicalNodeMaterial,uE as MeshSSSNodeMaterial,yd as MeshStandardMaterial,aE as MeshStandardNodeMaterial,Md as MeshToonMaterial,mE as MeshToonNodeMaterial,T as MinEquation,ft as MirroredRepeatWrapping,Z as MixOperation,kx as ModelNode,qb as ModelViewProjectionNode,yT as MorphNode,y as MultiplyBlending,Y as MultiplyOperation,gt as NearestFilter,xt as NearestMipMapLinearFilter,yt as NearestMipMapNearestFilter,_t as NearestMipmapLinearFilter,vt as NearestMipmapNearestFilter,st as NeutralToneMapping,Mn as NeverCompare,B as NeverDepth,pn as NeverStencilFunc,m as NoBlending,Ze as NoColorSpace,J as NoToneMapping,If as Node,DE as NodeAttribute,GA as NodeBuilder,kE as NodeCache,FE as NodeCode,WA as NodeFrame,jA as NodeFunctionInput,LE as NodeLoader,rS as NodeMaterial,PE as NodeMaterialLoader,hf as NodeMaterialObserver,UE as NodeObjectLoader,Tf as NodeShaderStage,wf as NodeType,OE as NodeUniform,Sf as NodeUpdateType,bf as NodeUtils,zE as NodeVar,VE as NodeVarying,Ve as NormalAnimationBlendMode,f as NormalBlending,eb as NormalMapNode,En as NotEqualCompare,q as NotEqualDepth,yn as NotEqualStencilFunc,Fd as NumberKeyframeTrack,Ds as Object3D,Dx as Object3DNode,Np as ObjectLoader,Ye as ObjectSpaceNormalMap,rd as OctahedronGeometry,E as OneFactor,F as OneMinusConstantAlphaFactor,z as OneMinusConstantColorFactor,L as OneMinusDstAlphaFactor,U as OneMinusDstColorFactor,R as OneMinusSrcAlphaFactor,N as OneMinusSrcColorFactor,Ea as OrthographicCamera,aN as OscNode,qA as OutputStructNode,sn as P3Primaries,l as PCFShadowMap,c as PCFSoftShadowMap,my as PI,fy as PI2,Va as PMREMGenerator,Qw as PMREMNode,CR as ParallaxBarrierPassNode,HE as ParameterNode,fC as PassNode,mh as Path,Qr as PerspectiveCamera,OS as PhongLightingModel,Cw as PhysicalLightingModel,fR as PixelationPassNode,oa as Plane,pa as PlaneGeometry,tf as PlaneHelper,vp as PointLight,Om as PointLightHelper,RP as PointLightNode,WN as PointUVNode,Fu as Points,Uu as PointsMaterial,xE as PointsNodeMaterial,Hm as PolarGridHelper,xh as PolyhedronGeometry,Kp as PositionalAudio,oC as PosterizeNode,om as PropertyBinding,tm as PropertyMixer,ov as PropertyNode,ch as QuadraticBezierCurve,uh as QuadraticBezierCurve3,Ii as Quaternion,kd as QuaternionKeyframeTrack,Bd as QuaternionLinearInterpolant,Ae as RED_GREEN_RGTC2_Format,we as RED_RGTC1_Format,t as REVISION,We as RGBADepthPacking,Bt as RGBAFormat,$t as RGBAIntegerFormat,_e as RGBA_ASTC_10x10_Format,ge as RGBA_ASTC_10x5_Format,ve as RGBA_ASTC_10x6_Format,ye as RGBA_ASTC_10x8_Format,xe as RGBA_ASTC_12x10_Format,Me as RGBA_ASTC_12x12_Format,le as RGBA_ASTC_4x4_Format,ce as RGBA_ASTC_5x4_Format,ue as RGBA_ASTC_5x5_Format,he as RGBA_ASTC_6x5_Format,de as RGBA_ASTC_6x6_Format,pe as RGBA_ASTC_8x5_Format,me as RGBA_ASTC_8x6_Format,fe as RGBA_ASTC_8x8_Format,be as RGBA_BPTC_Format,oe as RGBA_ETC2_EAC_Format,se as RGBA_PVRTC_2BPPV1_Format,ie as RGBA_PVRTC_4BPPV1_Format,Kt as RGBA_S3TC_DXT1_Format,Qt as RGBA_S3TC_DXT3_Format,te as RGBA_S3TC_DXT5_Format,je as RGBDepthPacking,Ft as RGBFormat,Zt as RGBIntegerFormat,GC as RGBShiftNode,Te as RGB_BPTC_SIGNED_Format,Se as RGB_BPTC_UNSIGNED_Format,re as RGB_ETC1_Format,ae as RGB_ETC2_Format,ne as RGB_PVRTC_2BPPV1_Format,ee as RGB_PVRTC_4BPPV1_Format,Jt as RGB_S3TC_DXT1_Format,Xe as RGDepthPacking,qt as RGFormat,Yt as RGIntegerFormat,FN as RTTNode,YR as RangeNode,vd as RawShaderMaterial,os as Ray,ym as Raycaster,nn as Rec709Primaries,Mp as RectAreaLight,DP as RectAreaLightNode,jt as RedFormat,Xt as RedIntegerFormat,LM as ReferenceNode,LN as ReflectorNode,Q as ReinhardToneMapping,rx as RemapNode,dx as RenderOutputNode,wi as RenderTarget,G_ as RendererReferenceNode,pt as RepeatWrapping,on as ReplaceStencilOp,hx as Return,b as ReverseSubtractEquation,ad as RingGeometry,ME as RotateNode,Ne as SIGNED_RED_GREEN_RGTC2_Format,Ee as SIGNED_RED_RGTC1_Format,$e as SRGBColorSpace,en as SRGBTransfer,yR as SSAAPassNode,lc as Scene,XN as SceneNode,JS as Schlick_to_F0,IT as ScreenNode,VR as ScriptableNode,PR as ScriptableValueNode,Vf as SetNode,ma as ShaderChunk,ga as ShaderLib,Yr as ShaderMaterial,gg as ShaderNode,gd as ShadowMaterial,AE as ShadowNodeMaterial,Ah as Shape,od as ShapeGeometry,of as ShapePath,Qh as ShapeUtils,Nt as ShortType,jc as Skeleton,Um as SkeletonHelper,Bc as SkinnedMesh,oT as SkinningNode,zC as SobelOperatorNode,xi as Source,Qi as Sphere,ld as SphereGeometry,Mm as Spherical,bp as SphericalHarmonics3,hh as SplineCurve,zf as SplitNode,dp as SpotLight,Rm as SpotLightHelper,OP as SpotLightNode,Ec as Sprite,dc as SpriteMaterial,SE as SpriteNodeMaterial,hN as SpriteSheetUVNode,C as SrcAlphaFactor,D as SrcAlphaSaturateFactor,A as SrcColorFactor,mA as StackNode,Dn as StaticCopyUsage,Cn as StaticDrawUsage,Ln as StaticReadUsage,Fp as StereoCamera,bR as StereoPassNode,pN as StorageArrayElementNode,QN as StorageBufferNode,nC as StorageTextureNode,zn as StreamCopyUsage,In as StreamDrawUsage,Un as StreamReadUsage,Hd as StringKeyframeTrack,M as SubtractEquation,v as SubtractiveBlending,$M as TBNViewMatrix,n as TOUCH,qe as TangentSpaceNormalMap,Uf as TempNode,cd as TetrahedronGeometry,Ti as Texture,CE as Texture3DNode,sp as TextureLoader,bx as TextureNode,yx as TextureSizeNode,Xl as TextureUtils,eN as TimerNode,j_ as ToneMappingNode,IR as ToonOutlinePassNode,ud as TorusGeometry,hd as TorusKnotGeometry,dR as TransitionNode,Zs as Triangle,He as TriangleFanDrawMode,ke as TriangleStripDrawMode,Be as TrianglesDrawMode,fN as TriplanarTexturesNode,dd as TubeGeometry,ot as UVMapping,vr as Uint16BufferAttribute,_r as Uint32BufferAttribute,mr as Uint8BufferAttribute,fr as Uint8ClampedBufferAttribute,dm as Uniform,NM as UniformArrayNode,Qg as UniformGroupNode,rv as UniformNode,mm as UniformsGroup,fa as UniformsLib,qr as UniformsUtils,Et as UnsignedByteType,Ot as UnsignedInt248Type,zt as UnsignedInt5999Type,It as UnsignedIntType,Ut as UnsignedShort4444Type,Dt as UnsignedShort5551Type,Ct as UnsignedShortType,rC as UserDataNode,u as VSMShadowMap,GS as V_GGX_SmithCorrelated,N_ as VarNode,R_ as VaryingNode,ti as Vector2,Li as Vector3,Si as Vector4,Gd as VectorKeyframeTrack,HN as VertexColorNode,ku as VideoTexture,ZT as ViewportDepthNode,qT as ViewportDepthTextureNode,uC as ViewportSharedTextureNode,GT as ViewportTextureNode,IE as VolumeNodeMaterial,Ri as WebGL3DRenderTarget,Ni as WebGLArrayRenderTarget,Bn as WebGLCoordinateSystem,ia as WebGLCubeRenderTarget,cf as WebGLMultipleRenderTargets,Ei as WebGLRenderTarget,rc as WebGLRenderer,Yl as WebGLUtils,kn as WebGPUCoordinateSystem,pd as WireframeGeometry,ze as WrapAroundEnding,De as ZeroCurvatureEnding,w as ZeroFactor,Oe as ZeroSlopeEnding,rn as ZeroStencilOp,zy as abs,GI as acesFilmicToneMapping,Dy as acos,Gv as add,Wf as addMethodChaining,mx as addNodeElement,EC as afterImage,qI as agxToneMapping,gy as all,Mv as alphaT,NR as anaglyphPass,OC as anamorphic,ty as and,bv as anisotropy,Sv as anisotropyB,Tv as anisotropyT,vy as any,QC as ao,Ag as append,Zg as arrayBuffer,Uy as asin,Fv as assign,Oy as atan,$y as atan2,dL as atomicAdd,gL as atomicAnd,uL as atomicFunc,mL as atomicMax,fL as atomicMin,vL as atomicOr,hL as atomicStore,pL as atomicSub,yL as atomicXor,Ov as attenuationColor,Dv as attenuationDistance,gx as attribute,qN as backgroundBlurriness,YN as backgroundIntensity,rT as batch,TI as billboarding,sy as bitAnd,ry as bitNot,ay as bitOr,oy as bitXor,WM as bitangentGeometry,jM as bitangentLocal,XM as bitangentView,qM as bitangentWorld,Yy as bitcast,DI as bleach,hR as bloom,Zw as blur,Lg as bool,EM as buffer,Z_ as bufferAttribute,ab as bumpMap,RI as burn,Og as bvec2,Bg as bvec3,Wg as bvec4,sx as bypass,nx as cache,kv as call,Ax as cameraFar,Nx as cameraLogDepth,Ex as cameraNear,Px as cameraNormalMatrix,Ux as cameraPosition,Cx as cameraProjectionMatrix,Rx as cameraProjectionMatrixInverse,Ix as cameraViewMatrix,Lx as cameraWorldMatrix,h_ as cbrt,Ny as ceil,_L as checker,kI as cineonToneMapping,m_ as clamp,mv as clearcoat,fv as clearcoatRoughness,jE as code,Ng as color,B_ as colorSpaceToWorking,fS as colorToDirection,tx as compute,S_ as cond,E_ as context,Jg as convert,kN as convertToTexture,Ly as cos,oi as createCanvasElement,r_ as cross,SM as cubeTexture,Hy as dFdx,Gy as dFdy,Cv as dashSize,Af as defaultBuildStages,Ef as defaultShaderStages,mg as defined,xy as degrees,eR as denoise,jR as densityFog,eS as depth,yC as depthPass,i_ as difference,uv as diffuseColor,mS as directionToColor,zv as dispersion,n_ as distance,Xv as div,II as dodge,BC as dof,s_ as dot,HC as dotScreen,eT as drawIndex,$_ as dynamicBufferAttribute,$g as element,hv as emissive,Yv as equal,yy as equals,_S as equirectUV,My as exp,by as exp2,cx as expression,oM as faceDirection,y_ as faceForward,XC as film,Cg as float,Ay as floor,kR as fog,Ry as fract,nv as frameGroup,rN as frameId,aM as frontFacing,qy as fwidth,iR as fxaa,fI as gain,Rv as gapSize,bC as gaussianBlur,D_ as getColorSpaceMethod,fg as getConstNodeType,wg as getCurrentStack,jw as getDirection,aI as getDistanceAttenuation,kS as getGeometryRoughness,HS as getRoughness,CP as getShIrradianceAt,ZA as getTextureIndex,zR as global,YE as glsl,JE as glslFn,AC as grayscale,Jv as greaterThan,Qv as greaterThanEqual,pI as hash,Jx as highPrecisionModelNormalViewMatrix,$x as highPrecisionModelViewMatrix,RC as hue,iT as instance,Jb as instanceIndex,J_ as instancedBufferAttribute,K_ as instancedDynamicBufferAttribute,Rg as int,Ey as inverseSqrt,tT as invocationLocalIndex,Qb as invocationSubgroupIndex,Lv as ior,yv as iridescence,_v as iridescenceIOR,xv as iridescenceThickness,Ug as ivec2,Vg as ivec3,Hg as ivec4,XE as js,A_ as label,Fy as length,d_ as lengthSq,$v as lessThan,Kv as lessThanEqual,cI as lightPosition,dI as lightTargetDirection,uI as lightTargetPosition,hI as lightViewPosition,AT as lightingContext,TT as lights,nS as linearDepth,VI as linearSRGBTosRGB,FI as linearToneMapping,QI as localId,Ty as log,Sy as log2,mT as loop,LC as luminance,YC as lut3D,jg as mat2,Xg as mat3,qg as mat4,gE as matcapUV,jb as materialAOMap,cb as materialAlphaTest,Nb as materialAnisotropy,Xb as materialAnisotropyVector,Ob as materialAttenuationColor,Db as materialAttenuationDistance,bb as materialClearcoat,Sb as materialClearcoatNormal,Tb as materialClearcoatRoughness,ub as materialColor,Gb as materialDispersion,db as materialEmissive,Ub as materialIOR,Cb as materialIridescence,Rb as materialIridescenceIOR,Ib as materialIridescenceThickness,Wb as materialLightMap,kb as materialLineDashOffset,Vb as materialLineDashSize,Fb as materialLineGapSize,zb as materialLineScale,Bb as materialLineWidth,xb as materialMetalness,Mb as materialNormal,pb as materialOpacity,Hb as materialPointWidth,OM as materialReference,yb as materialReflectivity,yM as materialRefractionRatio,wb as materialRotation,_b as materialRoughness,Eb as materialSheen,Ab as materialSheenRoughness,hb as materialShininess,mb as materialSpecular,gb as materialSpecularColor,fb as materialSpecularIntensity,vb as materialSpecularStrength,Pb as materialThickness,Lb as materialTransmission,Ky as max,Mx as maxMipLevel,pv as metalness,Jy as min,p_ as mix,x_ as mixElement,Qy as mod,qv as modInt,Hx as modelDirection,qx as modelNormalMatrix,Wx as modelPosition,jx as modelScale,Zx as modelViewMatrix,Xx as modelViewPosition,Yb as modelViewProjection,Gx as modelWorldMatrix,Yx as modelWorldMatrixInverse,_T as morphReference,UI as motionBlur,JA as mrt,jv as mul,lP as mx_aastep,SP as mx_cell_noise_float,vP as mx_contrast,wP as mx_fractal_noise_float,EP as mx_fractal_noise_vec2,AP as mx_fractal_noise_vec3,NP as mx_fractal_noise_vec4,rP as mx_hsvtorgb,yP as mx_noise_float,_P as mx_noise_vec3,xP as mx_noise_vec4,uP as mx_ramplr,hP as mx_ramptb,aP as mx_rgbtohsv,gP as mx_safepower,pP as mx_splitlr,mP as mx_splittb,oP as mx_srgb_texture_to_lin_rec709,fP as mx_transform_uv,MP as mx_worley_noise_float,bP as mx_worley_noise_vec2,TP as mx_worley_noise_vec3,By as negate,YI as neutralToneMapping,_g as nodeArray,Mg as nodeImmutable,vg as nodeObject,yg as nodeObjects,xg as nodeProxy,uM as normalFlat,lM as normalGeometry,cM as normalLocal,nb as normalMap,hM as normalView,dM as normalWorld,Cy as normalize,ny as not,Zv as notEqual,JI as numWorkgroups,Ox as objectDirection,sv as objectGroup,Vx as objectPosition,Fx as objectScale,Bx as objectViewPosition,zx as objectWorldMatrix,ky as oneMinus,ey as or,JT as orthographicDepthToViewZ,uN as oscSawtooth,oN as oscSine,lN as oscSquare,cN as oscTriangle,Nv as output,YA as outputStruct,PI as overlay,tN as overloadingFn,mI as parabola,RR as parallaxBarrierPass,JM as parallaxDirection,KM as parallaxUV,GE as parameter,gC as pass,vC as passTexture,gI as pcurve,QT as perspectiveDepthToViewZ,gR as pixelationPass,tE as pmremTexture,jN as pointUV,Iv as pointWidth,Kx as positionGeometry,Qx as positionLocal,tM as positionPrevious,iM as positionView,sM as positionViewDirection,eM as positionWorld,nM as positionWorldDirection,lC as posterize,a_ as pow,o_ as pow2,l_ as pow3,c_ as pow4,lv as property,_y as radians,__ as rand,ZR as range,GR as rangeFog,jy as reciprocal,PM as reference,UM as referenceBuffer,e_ as reflect,MM as reflectVector,_M as reflectView,PN as reflector,g_ as refract,bM as refractVector,xM as refractView,BI as reinhardToneMapping,uy as remainder,ax as remap,ox as remapClamp,iv as renderGroup,px as renderOutput,W_ as rendererReference,WC as rgbShift,bE as rotate,MI as rotateUV,dv as roughness,Wy as round,BN as rtt,zI as sRGBToLinearSRGB,wx as sampler,f_ as saturate,NC as saturation,LI as screen,UT as screenCoordinate,PT as screenSize,LT as screenUV,FR as scriptable,UR as scriptableValue,T_ as select,OI as sepia,Sg as setCurrentStack,Nf as shaderStages,ev as sharedUniformGroup,gv as sheen,vv as sheenRoughness,ly as shiftLeft,cy as shiftRight,Av as shininess,Vy as sign,Iy as sin,vI as sinc,lT as skinning,cT as skinningReference,v_ as smoothstep,M_ as smoothstepElement,VC as sobel,wv as specularColor,Ev as specularF90,bI as spherizeUV,Kg as split,dN as spritesheetUV,wy as sqrt,xR as ssaaPass,fA as stack,t_ as step,TR as stereoPass,tC as storage,iL as storageBarrier,eC as storageObject,iC as storageTexture,Yg as string,Wv as sub,Kb as subgroupIndex,tL as subgroupSize,Py as tan,zM as tangentGeometry,VM as tangentLocal,FM as tangentView,BM as tangentWorld,C_ as temp,Tx as texture,RE as texture3D,sL as textureBarrier,fw as textureBicubic,Xw as textureCubeUV,Sx as textureLoad,_x as textureSize,sC as textureStore,Uv as thickness,PC as threshold,sN as timerDelta,iN as timerGlobal,nN as timerLocal,z_ as toOutputColorSpace,V_ as toWorkingColorSpace,X_ as toneMapping,q_ as toneMappingExposure,LR as toonOutlinePass,u_ as transformDirection,gM as transformNormal,vM as transformNormalToView,QM as transformedBentNormalView,YM as transformedBitangentView,ZM as transformedBitangentWorld,fM as transformedClearcoatNormalView,pM as transformedNormalView,mM as transformedNormalWorld,kM as transformedTangentView,HM as transformedTangentWorld,pR as transition,Pv as transmission,Zy as transpose,yI as tri,_I as tri3,xI as triNoise3D,vN as triplanarTexture,gN as triplanarTextures,Xy as trunc,Tg as tslFn,Ig as uint,av as uniform,CM as uniformArray,tv as uniformGroup,RM as uniforms,aC as userData,vx as uv,Dg as uvec2,Fg as uvec3,Gg as uvec4,I_ as varying,cv as varyingProperty,Pg as vec2,zg as vec3,kg as vec4,Cf as vectorComponents,CI as velocity,GN as vertexColor,$b as vertexIndex,CC as vibrance,$T as viewZToOrthographicDepth,KT as viewZToPerspectiveDepth,DT as viewport,kT as viewportBottomLeft,zT as viewportCoordinate,YT as viewportDepthTexture,iS as viewportLinearDepth,jT as viewportMipTexture,FT as viewportResolution,SI as viewportSafeUV,hC as viewportSharedTexture,OT as viewportSize,WT as viewportTexture,BT as viewportTopLeft,VT as viewportUV,qE as wgsl,KE as wgslFn,oL as workgroupArray,nL as workgroupBarrier,KI as workgroupId,F_ as workingToColorSpace,iy as xor};
